{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"source/CNAME","path":"CNAME","modified":0,"renderable":0},{"_id":"themes/next/source/css/main.styl","path":"css/main.styl","modified":0,"renderable":1},{"_id":"themes/next/source/images/algolia_logo.svg","path":"images/algolia_logo.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/apple-touch-icon-next.png","path":"images/apple-touch-icon-next.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/avatar.gif","path":"images/avatar.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","path":"images/cc-by-nc-nd.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","path":"images/cc-by-nc-sa.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc.svg","path":"images/cc-by-nc.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nd.svg","path":"images/cc-by-nd.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-sa.svg","path":"images/cc-by-sa.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by.svg","path":"images/cc-by.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-zero.svg","path":"images/cc-zero.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/favicon-16x16-next.png","path":"images/favicon-16x16-next.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/favicon-32x32-next.png","path":"images/favicon-32x32-next.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/loading.gif","path":"images/loading.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/logo.svg","path":"images/logo.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/placeholder.gif","path":"images/placeholder.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/quote-l.svg","path":"images/quote-l.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/quote-r.svg","path":"images/quote-r.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/searchicon.png","path":"images/searchicon.png","modified":0,"renderable":1},{"_id":"source/img/win7安装vbox/vbox_nat_setting.png","path":"img/win7安装vbox/vbox_nat_setting.png","modified":0,"renderable":0},{"_id":"themes/next/source/js/src/affix.js","path":"js/src/affix.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/algolia-search.js","path":"js/src/algolia-search.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/bootstrap.js","path":"js/src/bootstrap.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/exturl.js","path":"js/src/exturl.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/hook-duoshuo.js","path":"js/src/hook-duoshuo.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/js.cookie.js","path":"js/src/js.cookie.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/motion.js","path":"js/src/motion.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/post-details.js","path":"js/src/post-details.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/scroll-cookie.js","path":"js/src/scroll-cookie.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/scrollspy.js","path":"js/src/scrollspy.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/utils.js","path":"js/src/utils.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.css","path":"lib/algolia-instant-search/instantsearch.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/canvas-nest/canvas-nest.min.js","path":"lib/canvas-nest/canvas-nest.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/LICENSE","path":"lib/fastclick/LICENSE","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/README.md","path":"lib/fastclick/README.md","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/bower.json","path":"lib/fastclick/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","path":"lib/font-awesome/HELP-US-OUT.txt","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/bower.json","path":"lib/font-awesome/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/CONTRIBUTING.md","path":"lib/jquery_lazyload/CONTRIBUTING.md","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/README.md","path":"lib/jquery_lazyload/README.md","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/bower.json","path":"lib/jquery_lazyload/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.lazyload.js","path":"lib/jquery_lazyload/jquery.lazyload.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.scrollstop.js","path":"lib/jquery_lazyload/jquery.scrollstop.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/bower.json","path":"lib/velocity/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.min.js","path":"lib/velocity/velocity.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","path":"lib/velocity/velocity.ui.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","path":"lib/velocity/velocity.ui.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery/index.js","path":"lib/jquery/index.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/schemes/pisces.js","path":"js/src/schemes/pisces.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/blank.gif","path":"lib/fancybox/source/blank.gif","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading.gif","path":"lib/fancybox/source/fancybox_loading.gif","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading@2x.gif","path":"lib/fancybox/source/fancybox_loading@2x.gif","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_overlay.png","path":"lib/fancybox/source/fancybox_overlay.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite.png","path":"lib/fancybox/source/fancybox_sprite.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite@2x.png","path":"lib/fancybox/source/fancybox_sprite@2x.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.css","path":"lib/fancybox/source/jquery.fancybox.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.js","path":"lib/fancybox/source/jquery.fancybox.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.pack.js","path":"lib/fancybox/source/jquery.fancybox.pack.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.js","path":"lib/fastclick/lib/fastclick.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.min.js","path":"lib/fastclick/lib/fastclick.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","path":"lib/font-awesome/css/font-awesome.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","path":"lib/font-awesome/css/font-awesome.css.map","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","path":"lib/font-awesome/css/font-awesome.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","path":"lib/ua-parser-js/dist/ua-parser.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","path":"lib/ua-parser-js/dist/ua-parser.pack.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","path":"lib/font-awesome/fonts/fontawesome-webfont.woff","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","path":"lib/font-awesome/fonts/fontawesome-webfont.woff2","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.js","path":"lib/velocity/velocity.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/fancybox_buttons.png","path":"lib/fancybox/source/helpers/fancybox_buttons.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","path":"lib/fancybox/source/helpers/jquery.fancybox-buttons.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","path":"lib/fancybox/source/helpers/jquery.fancybox-buttons.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-media.js","path":"lib/fancybox/source/helpers/jquery.fancybox-media.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","path":"lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","path":"lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/FontAwesome.otf","path":"lib/font-awesome/fonts/FontAwesome.otf","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","path":"lib/font-awesome/fonts/fontawesome-webfont.eot","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","path":"lib/font-awesome/fonts/fontawesome-webfont.ttf","modified":0,"renderable":1},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.js","path":"lib/algolia-instant-search/instantsearch.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.svg","path":"lib/font-awesome/fonts/fontawesome-webfont.svg","modified":0,"renderable":1}],"Cache":[{"_id":"source/CNAME","hash":"1f2a922a084bcb82355bcb606105a4fc0632de63","modified":1498129300000},{"_id":"themes/next/.bowerrc","hash":"3228a58ed0ece9f85e1e3136352094080b8dece1","modified":1526470537000},{"_id":"themes/next/.editorconfig","hash":"792fd2bd8174ece1a75d5fd24ab16594886f3a7f","modified":1526470537000},{"_id":"themes/next/.eslintrc.json","hash":"cc5f297f0322672fe3f684f823bc4659e4a54c41","modified":1526470537000},{"_id":"themes/next/.gitattributes","hash":"44bd4729c74ccb88110804f41746fec07bf487d4","modified":1526470537000},{"_id":"themes/next/.gitignore","hash":"a18c2e83bb20991b899b58e6aeadcb87dd8aa16e","modified":1526470537000},{"_id":"themes/next/.hound.yml","hash":"b76daa84c9ca3ad292c78412603370a367cc2bc3","modified":1498129300000},{"_id":"themes/next/.javascript_ignore","hash":"f9ea3c5395f8feb225a24e2c32baa79afda30c16","modified":1498129300000},{"_id":"themes/next/.jshintrc","hash":"9928f81bd822f6a8d67fdbc909b517178533bca9","modified":1498129300000},{"_id":"themes/next/.stickler.yml","hash":"b7939095038cbdc4883fc10950e163a60a643b43","modified":1526470537000},{"_id":"themes/next/.stylintrc","hash":"b28e24704a5d8de08346c45286574c8e76cc109f","modified":1526470537000},{"_id":"themes/next/.travis.yml","hash":"3d1dc928c4a97933e64379cfde749dedf62f252c","modified":1526470537000},{"_id":"themes/next/LICENSE","hash":"f293bcfcdc06c0b77ba13570bb8af55eb5c059fd","modified":1498129300000},{"_id":"themes/next/LICENSE.md","hash":"fc7227c508af3351120181cbf2f9b99dc41f063e","modified":1526470537000},{"_id":"themes/next/README.en.md","hash":"4ece25ee5f64447cd522e54cb0fffd9a375f0bd4","modified":1498129300000},{"_id":"themes/next/README.md","hash":"807c28ad6473b221101251d244aa08e2a61b0d60","modified":1526470537000},{"_id":"themes/next/_config.yml","hash":"2fb2888f4af93a5313f7f623059b7d8d31068b78","modified":1529498001104},{"_id":"themes/next/bower.json","hash":"a8c832da6aad5245052aed7ff26c246f85d68c6c","modified":1526470537000},{"_id":"themes/next/crowdin.yml","hash":"e026078448c77dcdd9ef50256bb6635a8f83dca6","modified":1526470537000},{"_id":"themes/next/gulpfile.coffee","hash":"48d2f9fa88a4210308fc41cc7d3f6d53989f71b7","modified":1526470537000},{"_id":"themes/next/package.json","hash":"11a0b27f92da8abf1efbea6e7a0af4271d7bff9e","modified":1526470537000},{"_id":"source/_data/head.swig","hash":"6aee712c9719005ab2274abe8f2ea0b9171e3009","modified":1529496110416},{"_id":"source/_posts/Flume小记.md","hash":"2cbca4daf7249038a97e91d408c166a35fcb8cd3","modified":1498564124000},{"_id":"source/_posts/Git.md","hash":"1d5414cbc141d938ed56ec6b7285a40422717e8f","modified":1499420463000},{"_id":"source/_posts/Git托管.md","hash":"fcbe2f151458afa8d4ee837211197e14e8d314ed","modified":1495213537000},{"_id":"source/_posts/Go小记.md","hash":"cffb0497417383f53a6f95f50565e6f4c7b54d10","modified":1522862164384},{"_id":"source/_posts/Hadoop小记.md","hash":"78c3bf0dab451a0b5c67e583954488447465962c","modified":1500899437000},{"_id":"source/_posts/Hive小记.md","hash":"b4a1986210442bbe203d6059b01df283ec86d32e","modified":1501155141000},{"_id":"source/_posts/Linux代理.md","hash":"5c685ede1378659dfd5bad4f5affad1c9767abc7","modified":1522738062064},{"_id":"source/_posts/Mac使用.md","hash":"3a55ac648946663efbffdcc7228c8996e5153d36","modified":1495213537000},{"_id":"source/_posts/NewSQL.md","hash":"906b0826746db1e8c032503e54c88ea2c88df0ac","modified":1524033692876},{"_id":"source/_posts/PHP性能分析工具.md","hash":"e26ecb48732d7cf7c8aaaa1a90f7dcf05e49fb60","modified":1514212980930},{"_id":"source/_posts/Vue小记-初识.md","hash":"6e90dacbadf1a3133df8a8352be791668f2e9e00","modified":1505803260000},{"_id":"source/_posts/docker小记.md","hash":"1a40261fba3284d99a2c16756c457df8a35a7983","modified":1495213537000},{"_id":"source/_posts/kubeadmin足迹.md","hash":"cb87871368bee6b343f5d5e27d5a1b6101aab634","modified":1520837379021},{"_id":"source/_posts/laravel.md","hash":"6fc5614014c5154e833dec83f6c6f86893051f1a","modified":1529493937762},{"_id":"source/_posts/sed.md","hash":"77e1453cf3e65b4919dd4d68e05e7451b48c24fd","modified":1499062922000},{"_id":"source/_posts/supervisor小记.md","hash":"4c1f897252a0986c45faf6398ec06bf74a72f4dc","modified":1495213537000},{"_id":"source/_posts/win7安装vbox.md","hash":"b45d28ec6ff5eff7e8c537c7352aabdc376bf8df","modified":1495213537000},{"_id":"source/_posts/yum安装MySQL.md","hash":"5c525aab235f0f077fb52df11548ea78ba27367b","modified":1495213537000},{"_id":"source/_posts/升级python.md","hash":"6f99066729cd8e8e937104c8c18e946130b6de5b","modified":1495213537000},{"_id":"source/_posts/模式-单例模式.md","hash":"5728d42f74c1a68e29a8f4108d4353bea186ad85","modified":1529490810167},{"_id":"source/_posts/模式-备忘录模式.md","hash":"e7398cd8aea7e3ec8f0ff2e223820a79e79b0e44","modified":1529490800600},{"_id":"source/_posts/模式-桥接模式.md","hash":"e7914d584193bc60126929215966c1d319a732ad","modified":1529493823056},{"_id":"source/_posts/模式-组合模式.md","hash":"69d3c0a999eeb7265ab2a07f2a8293572e7d6cd2","modified":1529490862847},{"_id":"source/_posts/模式-适配器模式.md","hash":"863d12abf48e29d531cb94c0012ff5f7c4cf05ae","modified":1529490889500},{"_id":"source/about/index.md","hash":"ef01f6856884bdb08a2bd58acbd24e44a685c03b","modified":1529498344018},{"_id":"source/categories/index.md","hash":"4d4a1f5eaae1f73d05a2b43b12ceea9548b40a92","modified":1498129300000},{"_id":"source/tags/index.md","hash":"e6efc9e00263bb0a5fe14d9c98139a26fe0aa7a0","modified":1498129300000},{"_id":"themes/next/.github/CODE_OF_CONDUCT.md","hash":"b63696d41f022525e40d7e7870c3785b6bc7536b","modified":1526470537000},{"_id":"themes/next/.github/CONTRIBUTING.md","hash":"f846118d7fc68c053df47b24e1f661241645373f","modified":1526470537000},{"_id":"themes/next/.github/ISSUE_TEMPLATE.md","hash":"00c25366764e6b9ccb40b877c60dc13b2916bbf7","modified":1526470537000},{"_id":"themes/next/.github/PULL_REQUEST_TEMPLATE.md","hash":"7abbb4c8a29b2c14e576a00f53dbc0b4f5669c13","modified":1526470537000},{"_id":"themes/next/.github/browserstack_logo.png","hash":"a6c43887f64a7f48a2814e3714eaa1215e542037","modified":1526470537000},{"_id":"themes/next/.github/stale.yml","hash":"fd0856f6745db8bd0228079ccb92a662830cc4fb","modified":1526470537000},{"_id":"themes/next/docs/AGPL3.md","hash":"0d2b8c5fa8a614723be0767cc3bca39c49578036","modified":1526470537000},{"_id":"themes/next/docs/ALGOLIA-SEARCH.md","hash":"141e989844d0b5ae2e09fb162a280715afb39b0d","modified":1526470537000},{"_id":"themes/next/docs/AUTHORS.md","hash":"7b24be2891167bdedb9284a682c2344ec63e50b5","modified":1526470537000},{"_id":"themes/next/docs/DATA-FILES.md","hash":"8e1962dd3e1b700169b3ae5bba43992f100651ce","modified":1526470537000},{"_id":"themes/next/docs/INSTALLATION.md","hash":"2bbdd6c1751b2b42ce9b9335da420c6026a483e9","modified":1526470537000},{"_id":"themes/next/docs/LEANCLOUD-COUNTER-SECURITY.md","hash":"120750c03ec30ccaa470b113bbe39f3d423c67f0","modified":1526470537000},{"_id":"themes/next/docs/LICENSE","hash":"fe607fe22fc9308f6434b892a7f2d2c5514b8f0d","modified":1526470537000},{"_id":"themes/next/docs/MATH.md","hash":"0ae4258950de01a457ea8123a8d13ec6db496e53","modified":1526470537000},{"_id":"themes/next/docs/UPDATE-FROM-5.1.X.md","hash":"ad57c168d12ba01cf144a1ea0627b2ffd1847d3e","modified":1526470537000},{"_id":"themes/next/languages/de.yml","hash":"fb478c5040a4e58a4c1ad5fb52a91e5983d65a3a","modified":1526470537000},{"_id":"themes/next/languages/default.yml","hash":"c540c3a0d7db2d4239293c8783881962640b6c34","modified":1526470537000},{"_id":"themes/next/languages/en.yml","hash":"c540c3a0d7db2d4239293c8783881962640b6c34","modified":1526470537000},{"_id":"themes/next/languages/fr-FR.yml","hash":"24180322c83587a153cea110e74e96eacc3355ad","modified":1498129300000},{"_id":"themes/next/languages/fr.yml","hash":"0162a85ae4175e66882a9ead1249fedb89200467","modified":1526470537000},{"_id":"themes/next/languages/id.yml","hash":"e7fb582e117a0785036dcdbb853a6551263d6aa6","modified":1526470537000},{"_id":"themes/next/languages/it.yml","hash":"62ef41d0a9a3816939cb4d93a524e6930ab9c517","modified":1526470537000},{"_id":"themes/next/languages/ja.yml","hash":"5f8e54c666393d1ca2e257f6b1e3b4116f6657d8","modified":1526470537000},{"_id":"themes/next/languages/ko.yml","hash":"fae155018ae0efdf68669b2c7dd3f959c2e45cc9","modified":1526470537000},{"_id":"themes/next/languages/nl.yml","hash":"bb9ce8adfa5ee94bc6b5fac6ad24ba4605d180d3","modified":1526470537000},{"_id":"themes/next/languages/pt-BR.yml","hash":"bfc80c8a363fa2e8dde38ea2bc85cd19e15ab653","modified":1526470537000},{"_id":"themes/next/languages/pt.yml","hash":"3cb51937d13ff12fcce747f972ccb664840a9ef3","modified":1526470537000},{"_id":"themes/next/languages/ru.yml","hash":"db0644e738d2306ac38567aa183ca3e859a3980f","modified":1526470537000},{"_id":"themes/next/languages/tr.yml","hash":"c5f0c20743b1dd52ccb256050b1397d023e6bcd9","modified":1526470537000},{"_id":"themes/next/languages/vi.yml","hash":"8da921dd8335dd676efce31bf75fdd4af7ce6448","modified":1526470537000},{"_id":"themes/next/languages/zh-CN.yml","hash":"fbbf3a0b664ae8e927c700b0a813692b94345156","modified":1526470537000},{"_id":"themes/next/languages/zh-HK.yml","hash":"7903b96912c605e630fb695534012501b2fad805","modified":1526470537000},{"_id":"themes/next/languages/zh-Hans.yml","hash":"3c0c7dfd0256457ee24df9e9879226c58cb084b5","modified":1498129300000},{"_id":"themes/next/languages/zh-TW.yml","hash":"6e6d2cd8f4244cb1b349b94904cb4770935acefd","modified":1526470537000},{"_id":"themes/next/layout/_layout.swig","hash":"09e8a6bfe5aa901c66d314601c872e57f05509e8","modified":1526470537000},{"_id":"themes/next/layout/archive.swig","hash":"2b6450c6b6d2bcbcd123ad9f59922a5e323d77a5","modified":1526470537000},{"_id":"themes/next/layout/category.swig","hash":"5d955284a42f802a48560b4452c80906a5d1da02","modified":1526470537000},{"_id":"themes/next/layout/index.swig","hash":"53300ca42c00cba050bc98b0a3f2d888d71829b1","modified":1526470537000},{"_id":"themes/next/layout/page.swig","hash":"79040bae5ec14291441b33eea341a24a7c0e9f93","modified":1526470537000},{"_id":"themes/next/layout/post.swig","hash":"e7458f896ac33086d9427979f0f963475b43338e","modified":1526470537000},{"_id":"themes/next/layout/schedule.swig","hash":"3e9cba5313bf3b98a38ccb6ef78b56ffa11d66ee","modified":1526470537000},{"_id":"themes/next/layout/tag.swig","hash":"ba402ce8fd55e80b240e019e8d8c48949b194373","modified":1526470537000},{"_id":"themes/next/scripts/helpers.js","hash":"392cda207757d4c055b53492a98f81386379fc4f","modified":1526470537000},{"_id":"themes/next/scripts/merge-configs.js","hash":"33afe97284d34542015d358a720823feeebef120","modified":1526470537000},{"_id":"themes/next/scripts/merge.js","hash":"9130dabe6a674c54b535f322b17d75fe6081472f","modified":1526470537000},{"_id":"themes/next/test/.jshintrc","hash":"19f93d13d1689fe033c82eb2d5f3ce30b6543cc0","modified":1526470537000},{"_id":"themes/next/test/helpers.js","hash":"a1f5de25154c3724ffc24a91ddc576cdbd60864f","modified":1526470537000},{"_id":"themes/next/test/intern.js","hash":"11fa8a4f5c3b4119a179ae0a2584c8187f907a73","modified":1526470537000},{"_id":"themes/next/source/fonts/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1526470537000},{"_id":"themes/next/docs/ru/DATA-FILES.md","hash":"d6d20f60f77a76c77f8e65d0c9adbd79d0274557","modified":1526470537000},{"_id":"themes/next/docs/ru/INSTALLATION.md","hash":"6c5d69e94961c793da156217ecf1179e868d7ba1","modified":1526470537000},{"_id":"themes/next/docs/ru/README.md","hash":"712d9a9a557c54dd6638adfb0e1d2bb345b60756","modified":1526470537000},{"_id":"themes/next/docs/ru/UPDATE-FROM-5.1.X.md","hash":"b1dd18d9b890b21718883ea1832e7e02a773104a","modified":1526470537000},{"_id":"themes/next/docs/zh-CN/ALGOLIA-SEARCH.md","hash":"6855402e2ef59aae307e8bd2a990647d3a605eb8","modified":1526470537000},{"_id":"themes/next/docs/zh-CN/CODE_OF_CONDUCT.md","hash":"a45a791b49954331390d548ac34169d573ea5922","modified":1526470537000},{"_id":"themes/next/docs/zh-CN/CONTRIBUTING.md","hash":"44e4fb7ce2eca20dfa98cdd1700b50d6def4086f","modified":1526470537000},{"_id":"themes/next/docs/zh-CN/DATA-FILES.md","hash":"f3eec572a7d83542e2710a7404082014aaa1a5e7","modified":1526470537000},{"_id":"themes/next/docs/zh-CN/INSTALLATION.md","hash":"b19a6e0ae96eb7c756fb5b1ba03934c7f9cbb3c3","modified":1526470537000},{"_id":"themes/next/docs/zh-CN/LEANCLOUD-COUNTER-SECURITY.md","hash":"24cf2618d164440b047bb9396263de83bee5b993","modified":1526470537000},{"_id":"themes/next/docs/zh-CN/MATH.md","hash":"e03607b608db4aa7d46f6726827c51ac16623339","modified":1526470537000},{"_id":"themes/next/docs/zh-CN/README.md","hash":"84d349fda6b9973c81a9ad4677db9d9ee1828506","modified":1526470537000},{"_id":"themes/next/docs/zh-CN/UPDATE-FROM-5.1.X.md","hash":"c1ba919f70efe87a39e6217883e1625af0b2c23c","modified":1526470537000},{"_id":"themes/next/layout/_custom/head.swig","hash":"9e1b9666efa77f4cf8d8261bcfa445a9ac608e53","modified":1529487422897},{"_id":"themes/next/layout/_custom/header.swig","hash":"adc83b19e793491b1c6ea0fd8b46cd9f32e592fc","modified":1526470537000},{"_id":"themes/next/layout/_custom/sidebar.swig","hash":"adc83b19e793491b1c6ea0fd8b46cd9f32e592fc","modified":1526470537000},{"_id":"themes/next/layout/_macro/post-collapse.swig","hash":"31322a7f57936cf2dc62e824af5490da5354cf02","modified":1526470537000},{"_id":"themes/next/layout/_macro/post-copyright.swig","hash":"05e67c50a4f3a20fad879ed61b890de8ca6ba4ea","modified":1526470537000},{"_id":"themes/next/layout/_macro/post-related.swig","hash":"08fe30ce8909b920540231e36c97e28cfbce62b6","modified":1526470537000},{"_id":"themes/next/layout/_macro/post.swig","hash":"686e60ede86547bdd7bc34c3629e4c9dbd134a21","modified":1526470537000},{"_id":"themes/next/layout/_macro/reward.swig","hash":"bd5778d509c51f4b1d8da3a2bc35462929f08c75","modified":1526470537000},{"_id":"themes/next/layout/_macro/sidebar.swig","hash":"1f3121ef66a4698fd78f34bf2594ef79a407c92c","modified":1526470537000},{"_id":"themes/next/layout/_macro/wechat-subscriber.swig","hash":"a9e1346b83cf99e06bed59a53fc069279751e52a","modified":1526470537000},{"_id":"themes/next/layout/_partials/breadcrumb.swig","hash":"6994d891e064f10607bce23f6e2997db7994010e","modified":1526470537000},{"_id":"themes/next/layout/_partials/comments.swig","hash":"5df32b286a8265ba82a4ef5e1439ff34751545ad","modified":1526470537000},{"_id":"themes/next/layout/_partials/duoshuo-hot-articles.swig","hash":"5d4638c46aef65bf32a01681495b62416ccc98db","modified":1498129300000},{"_id":"themes/next/layout/_partials/footer.swig","hash":"1ae77b6a369f83c9986408f2ab448090e37cd2dc","modified":1526470537000},{"_id":"themes/next/layout/_partials/head.swig","hash":"a0eafe24d1dae30c790ae35612154b3ffbbd5cce","modified":1498129300000},{"_id":"themes/next/layout/_partials/header.swig","hash":"a1ffbb691dfad3eaf2832a11766e58a179003b8b","modified":1498129300000},{"_id":"themes/next/layout/_partials/page-header.swig","hash":"1aaf32bed57b976c4c1913fd801be34d4838cc72","modified":1526470537000},{"_id":"themes/next/layout/_partials/pagination.swig","hash":"dbe321bcf3cf45917cc11a3e3f50d8572bac2c70","modified":1526470537000},{"_id":"themes/next/layout/_partials/search.swig","hash":"7b61e96508df70152b809ea5354236ab7f0d54f4","modified":1498129300000},{"_id":"themes/next/layout/_scripts/baidu-push.swig","hash":"c057b17f79e8261680fbae8dc4e81317a127c799","modified":1498129300000},{"_id":"themes/next/layout/_scripts/boostrap.swig","hash":"0a0129e926c27fffc6e7ef87fe370016bc7a4564","modified":1526470537000},{"_id":"themes/next/layout/_scripts/commons.swig","hash":"6fc63d5da49cb6157b8792f39c7305b55a0d1593","modified":1526470537000},{"_id":"themes/next/layout/_scripts/noscript.swig","hash":"ac3ad2c0eccdf16edaa48816d111aaf51200a54b","modified":1526470537000},{"_id":"themes/next/layout/_scripts/vendors.swig","hash":"e0bdc723d1dc858b41fd66e44e2786e6519f259f","modified":1526470537000},{"_id":"themes/next/layout/_third-party/bookmark.swig","hash":"60001c8e08b21bf3a7afaf029839e1455340e95d","modified":1526470537000},{"_id":"themes/next/layout/_third-party/copy-code.swig","hash":"a8ab2035654dd06d94faf11a35750529e922d719","modified":1526470537000},{"_id":"themes/next/layout/_third-party/exturl.swig","hash":"f532ce257fca6108e84b8f35329c53f272c2ce84","modified":1526470537000},{"_id":"themes/next/layout/_third-party/github-banner.swig","hash":"cabd9640dc3027a0b3ac06f5ebce777e50754065","modified":1526470537000},{"_id":"themes/next/layout/_third-party/needsharebutton.swig","hash":"927f19160ae14e7030df306fc7114ba777476282","modified":1526470537000},{"_id":"themes/next/layout/_third-party/pangu.swig","hash":"6b75c5fd76ae7cf0a7b04024510bd5221607eab3","modified":1526470537000},{"_id":"themes/next/layout/_third-party/rating.swig","hash":"fc93b1a7e6aed0dddb1f3910142b48d8ab61174e","modified":1526470537000},{"_id":"themes/next/layout/_third-party/schedule.swig","hash":"22369026c87fc23893c35a7f250b42f3bb1b60f1","modified":1526470537000},{"_id":"themes/next/layout/_third-party/scroll-cookie.swig","hash":"b0ca46e0d1ff4c08cb0a3a8c1994f20d0260cef9","modified":1526470537000},{"_id":"themes/next/scripts/tags/button.js","hash":"5a61c2da25970a4981fbd65f4a57c5e85db4dcda","modified":1526470537000},{"_id":"themes/next/scripts/tags/center-quote.js","hash":"db70a841e7c1708f95ca97b44413b526b267fa9b","modified":1526470537000},{"_id":"themes/next/scripts/tags/exturl.js","hash":"2b3a4dc15dea33972c0b6d46a1483dabbf06fb5b","modified":1526470537000},{"_id":"themes/next/scripts/tags/full-image.js","hash":"a98fc19a90924f2368e1982f8c449cbc09df8439","modified":1526470537000},{"_id":"themes/next/scripts/tags/group-pictures.js","hash":"1b97b1b5364945b8ab3e50813bef84273055234f","modified":1526470537000},{"_id":"themes/next/scripts/tags/include-raw.js","hash":"b7600f6b868d8f4f7032126242d9738cd1e6ad71","modified":1526470537000},{"_id":"themes/next/scripts/tags/label.js","hash":"621004f2836040b12c4e8fef77e62cf22c561297","modified":1526470537000},{"_id":"themes/next/scripts/tags/lazy-image.js","hash":"460e5e1f305847dcd4bcab9da2038a85f0a1c273","modified":1526470537000},{"_id":"themes/next/scripts/tags/note.js","hash":"4975d4433e11161b2e9a5744b7287c2d667b3c76","modified":1526470537000},{"_id":"themes/next/scripts/tags/tabs.js","hash":"5786545d51c38e8ca38d1bfc7dd9e946fc70a316","modified":1526470537000},{"_id":"themes/next/source/css/main.styl","hash":"c26ca6e7b5bd910b9046d6722c8e00be672890e0","modified":1526470537000},{"_id":"themes/next/source/images/algolia_logo.svg","hash":"ec119560b382b2624e00144ae01c137186e91621","modified":1526470537000},{"_id":"themes/next/source/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1526470537000},{"_id":"themes/next/source/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1526470537000},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1526470537000},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1526470537000},{"_id":"themes/next/source/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1526470537000},{"_id":"themes/next/source/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1526470537000},{"_id":"themes/next/source/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1526470537000},{"_id":"themes/next/source/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1526470537000},{"_id":"themes/next/source/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1526470537000},{"_id":"themes/next/source/images/favicon-16x16-next.png","hash":"943a0d67a9cdf8c198109b28f9dbd42f761d11c3","modified":1526470537000},{"_id":"themes/next/source/images/favicon-32x32-next.png","hash":"0749d7b24b0d2fae1c8eb7f671ad4646ee1894b1","modified":1526470537000},{"_id":"themes/next/source/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1526470537000},{"_id":"themes/next/source/images/logo.svg","hash":"d29cacbae1bdc4bbccb542107ee0524fe55ad6de","modified":1526470537000},{"_id":"themes/next/source/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1526470537000},{"_id":"themes/next/source/images/quote-l.svg","hash":"94e870b4c8c48da61d09522196d4dd40e277a98f","modified":1526470537000},{"_id":"themes/next/source/images/quote-r.svg","hash":"e60ae504f9d99b712c793c3740c6b100d057d4ec","modified":1526470537000},{"_id":"themes/next/source/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1526470537000},{"_id":"source/img/win7安装vbox/vbox_nat_setting.png","hash":"ea96e1c9c42097f8b7d9cbe30ec400261121ee24","modified":1498129300000},{"_id":"themes/next/layout/_scripts/schemes/mist.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1526470537000},{"_id":"themes/next/layout/_scripts/schemes/muse.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1526470537000},{"_id":"themes/next/source/css/_mixins/Mist.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1526470537000},{"_id":"themes/next/source/css/_mixins/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1526470537000},{"_id":"themes/next/source/css/_mixins/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1526470537000},{"_id":"themes/next/source/css/_variables/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1526470537000},{"_id":"themes/next/source/css/_variables/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1526470537000},{"_id":"themes/next/layout/_components/algolia-search/assets.swig","hash":"28ff4ed6714c59124569ffcbd10f1173d53ca923","modified":1498129300000},{"_id":"themes/next/layout/_components/algolia-search/dom.swig","hash":"ba698f49dd3a868c95b240d802f5b1b24ff287e4","modified":1498129300000},{"_id":"themes/next/layout/_macro/menu/menu-badge.swig","hash":"65c5e585982dae7ae1542cada71858b4ea1f73d6","modified":1526470537000},{"_id":"themes/next/layout/_macro/menu/menu-item.swig","hash":"d1b73c926109145e52605929b75914cc8b60fb89","modified":1526470537000},{"_id":"themes/next/layout/_partials/head/custom-head.swig","hash":"9e1b9666efa77f4cf8d8261bcfa445a9ac608e53","modified":1498129300000},{"_id":"themes/next/layout/_partials/head/external-fonts.swig","hash":"7ce76358411184482bb0934e70037949dd0da8ca","modified":1526470537000},{"_id":"themes/next/layout/_partials/head/head-unique.swig","hash":"a7e376b087ae77f2e2a61ba6af81cde5af693174","modified":1526470537000},{"_id":"themes/next/layout/_partials/head/head.swig","hash":"00bf33b3c557b8f7e9faf49b226ea6ff7df5cda0","modified":1526470537000},{"_id":"themes/next/layout/_partials/header/brand.swig","hash":"fd780171713aada5eb4f4ffed8e714617c8ae6be","modified":1526470537000},{"_id":"themes/next/layout/_partials/header/index.swig","hash":"2082f5077551123e695e8afec471c9c44b436acb","modified":1526470537000},{"_id":"themes/next/layout/_partials/header/menu.swig","hash":"3db735d0cd2d449edf2674310ac1e7c0043cb357","modified":1526470537000},{"_id":"themes/next/layout/_partials/header/sub-menu.swig","hash":"88b4b6051592d26bff59788acb76346ce4e398c2","modified":1526470537000},{"_id":"themes/next/layout/_partials/search/index.swig","hash":"a33b29ccbdc2248aedff23b04e0627f435824406","modified":1526470537000},{"_id":"themes/next/layout/_partials/search/localsearch.swig","hash":"957701729b85fb0c5bfcf2fb99c19d54582f91ed","modified":1526470537000},{"_id":"themes/next/layout/_partials/search/swiftype.swig","hash":"959b7e04a96a5596056e4009b73b6489c117597e","modified":1526470537000},{"_id":"themes/next/layout/_partials/search/tinysou.swig","hash":"eefe2388ff3d424694045eda21346989b123977c","modified":1526470537000},{"_id":"themes/next/layout/_partials/share/add-this.swig","hash":"23e23dc0f76ef3c631f24c65277adf7ea517b383","modified":1526470537000},{"_id":"themes/next/layout/_partials/share/baidushare.swig","hash":"1f1107468aaf03f7d0dcd7eb2b653e2813a675b4","modified":1526470537000},{"_id":"themes/next/layout/_partials/share/duoshuo_share.swig","hash":"89c5a5240ecb223acfe1d12377df5562a943fd5d","modified":1526470537000},{"_id":"themes/next/layout/_partials/share/jiathis.swig","hash":"048fd5e98149469f8c28c21ba3561a7a67952c9b","modified":1526470537000},{"_id":"themes/next/layout/_scripts/pages/post-details.swig","hash":"cc865af4a3cb6d25a0be171b7fc919ade306bb50","modified":1526470537000},{"_id":"themes/next/layout/_scripts/schemes/gemini.swig","hash":"ea03fe9c98ddcfcc0ecfdbe5a2b622f9cde3b3a1","modified":1526470537000},{"_id":"themes/next/layout/_scripts/schemes/pisces.swig","hash":"ea03fe9c98ddcfcc0ecfdbe5a2b622f9cde3b3a1","modified":1526470537000},{"_id":"themes/next/layout/_scripts/third-party/analytics.swig","hash":"e46900412e28f529c26e25e6bada342006435a32","modified":1498129300000},{"_id":"themes/next/layout/_scripts/third-party/comments.swig","hash":"a279e1881208aff2f669fe235e9661ab825bc540","modified":1498129300000},{"_id":"themes/next/layout/_scripts/third-party/exturl.swig","hash":"8e20dd2078d7dfdf4a5a6daa142bb94d002300f5","modified":1498129300000},{"_id":"themes/next/layout/_scripts/third-party/lean-analytics.swig","hash":"92dc60821307fc9769bea9b2d60adaeb798342af","modified":1498129300000},{"_id":"themes/next/layout/_scripts/third-party/localsearch.swig","hash":"f4dbd4c896e6510ded8ebe05394c28f8a86e71bf","modified":1498129300000},{"_id":"themes/next/layout/_scripts/third-party/mathjax.swig","hash":"6d25596d6a7c57700d37b607f8d9a62d89708683","modified":1498129300000},{"_id":"themes/next/layout/_scripts/third-party/schedule.swig","hash":"22369026c87fc23893c35a7f250b42f3bb1b60f1","modified":1498129300000},{"_id":"themes/next/layout/_scripts/third-party/tinysou.swig","hash":"cb3a5d36dbe1630bab84e03a52733a46df7c219b","modified":1498129300000},{"_id":"themes/next/layout/_third-party/analytics/analytics-with-widget.swig","hash":"98df9d72e37dd071e882f2d5623c9d817815b139","modified":1526470537000},{"_id":"themes/next/layout/_third-party/analytics/application-insights.swig","hash":"60426bf73f8a89ba61fb1be2df3ad5398e32c4ef","modified":1526470537000},{"_id":"themes/next/layout/_third-party/analytics/baidu-analytics.swig","hash":"deda6a814ed48debc694c4e0c466f06c127163d0","modified":1526470537000},{"_id":"themes/next/layout/_third-party/analytics/busuanzi-counter.swig","hash":"67f0cb55e6702c492e99a9f697827629da036a0c","modified":1526470537000},{"_id":"themes/next/layout/_third-party/analytics/cnzz-analytics.swig","hash":"8160b27bee0aa372c7dc7c8476c05bae57f58d0f","modified":1526470537000},{"_id":"themes/next/layout/_third-party/analytics/facebook-sdk.swig","hash":"a234c5cd1f75ca5731e814d0dbb92fdcf9240d1b","modified":1526470537000},{"_id":"themes/next/layout/_third-party/analytics/firestore.swig","hash":"94b26dfbcd1cf2eb87dd9752d58213338926af27","modified":1526470537000},{"_id":"themes/next/layout/_third-party/analytics/google-analytics.swig","hash":"beb53371c035b62e1a2c7bb76c63afbb595fe6e5","modified":1526470537000},{"_id":"themes/next/layout/_third-party/analytics/index.swig","hash":"5e9bb24c750b49513d9a65799e832f07410002ac","modified":1526470537000},{"_id":"themes/next/layout/_third-party/analytics/lean-analytics.swig","hash":"cee047575ae324398025423696b760db64d04e6f","modified":1526470537000},{"_id":"themes/next/layout/_third-party/analytics/tencent-analytics.swig","hash":"3658414379e0e8a34c45c40feadc3edc8dc55f88","modified":1526470537000},{"_id":"themes/next/layout/_third-party/analytics/tencent-mta.swig","hash":"0ddc94ed4ba0c19627765fdf1abc4d8efbe53d5a","modified":1526470537000},{"_id":"themes/next/layout/_third-party/analytics/vkontakte-api.swig","hash":"c3971fd154d781088e1cc665035f8561a4098f4c","modified":1526470537000},{"_id":"themes/next/layout/_third-party/comments/changyan.swig","hash":"0e3378f7c39b2b0f69638290873ede6b6b6825c0","modified":1526470537000},{"_id":"themes/next/layout/_third-party/comments/disqus.swig","hash":"8878241797f8494a70968756c57cacdfc77b61c7","modified":1526470537000},{"_id":"themes/next/layout/_third-party/comments/gitment.swig","hash":"fe8177e4698df764e470354b6acde8292a3515e0","modified":1526470537000},{"_id":"themes/next/layout/_third-party/comments/hypercomments.swig","hash":"17a54796f6e03fc834880a58efca45c286e40e40","modified":1526470537000},{"_id":"themes/next/layout/_third-party/comments/index.swig","hash":"40e3cacbd5fa5f2948d0179eff6dd88053e8648e","modified":1526470537000},{"_id":"themes/next/layout/_third-party/comments/livere.swig","hash":"6f340d122a9816ccdf4b45b662880a4b2d087671","modified":1526470537000},{"_id":"themes/next/layout/_third-party/comments/valine.swig","hash":"c0eb6123464d745ac5324ce6deac8ded601f432f","modified":1526470537000},{"_id":"themes/next/layout/_third-party/comments/youyan.swig","hash":"42f62695029834d45934705c619035733762309e","modified":1526470537000},{"_id":"themes/next/layout/_third-party/math/index.swig","hash":"a6fc00ec7f5642aabd66aa1cf51c6acc5b10e012","modified":1526470537000},{"_id":"themes/next/layout/_third-party/math/katex.swig","hash":"97dbc2035bcb5aa7eafb80a4202dc827cce34983","modified":1526470537000},{"_id":"themes/next/layout/_third-party/math/mathjax.swig","hash":"9b9ff4cc6d5474ab03f09835a2be80e0dba9fe89","modified":1526470537000},{"_id":"themes/next/layout/_third-party/search/index.swig","hash":"c747fb5c6b1f500e8f0c583e44195878b66e4e29","modified":1526470537000},{"_id":"themes/next/layout/_third-party/search/localsearch.swig","hash":"b15e10abe85b4270860a56c970b559baa258b2a8","modified":1526470537000},{"_id":"themes/next/layout/_third-party/search/tinysou.swig","hash":"cb3a5d36dbe1630bab84e03a52733a46df7c219b","modified":1526470537000},{"_id":"themes/next/layout/_third-party/seo/baidu-push.swig","hash":"c057b17f79e8261680fbae8dc4e81317a127c799","modified":1526470537000},{"_id":"themes/next/source/css/_custom/custom.styl","hash":"328d9a9696cc2ccf59c67d3c26000d569f46344c","modified":1526470537000},{"_id":"themes/next/source/css/_mixins/Gemini.styl","hash":"2aa5b7166a85a8aa34b17792ae4f58a5a96df6cc","modified":1526470537000},{"_id":"themes/next/source/css/_mixins/Pisces.styl","hash":"2640a54fa63bdd4c547eab7ce2fc1192cf0ccec8","modified":1526470537000},{"_id":"themes/next/source/css/_mixins/base.styl","hash":"81ca13d6d0beff8b1a4b542a51e3b0fb68f08efd","modified":1526470537000},{"_id":"themes/next/source/css/_variables/Gemini.styl","hash":"7a2706304465b9e673d5561b715e7c72a238437c","modified":1526470537000},{"_id":"themes/next/source/css/_variables/Mist.styl","hash":"be087dcc060e8179f7e7f60ab4feb65817bd3d9f","modified":1526470537000},{"_id":"themes/next/source/css/_variables/Pisces.styl","hash":"32392d213f5d05bc26b2dc452f2fc6fea9d44f6d","modified":1526470537000},{"_id":"themes/next/source/css/_variables/base.styl","hash":"cfb03ec629f13883509eac66e561e9dba562333f","modified":1526470537000},{"_id":"themes/next/source/js/src/affix.js","hash":"978e0422b5bf1b560236d8d10ebc1adcf66392e3","modified":1526470537000},{"_id":"themes/next/source/js/src/algolia-search.js","hash":"b172f697ed339a24b1e80261075232978d164c35","modified":1526470537000},{"_id":"themes/next/source/js/src/bootstrap.js","hash":"40de94fd18fcbd67a327d63b0d1e242a08aa5404","modified":1526470537000},{"_id":"themes/next/source/js/src/exturl.js","hash":"e42e2aaab7bf4c19a0c8e779140e079c6aa5c0b1","modified":1526470537000},{"_id":"themes/next/source/js/src/hook-duoshuo.js","hash":"a6119070c0119f33e08b29da7d2cce2635eb40a0","modified":1498129300000},{"_id":"themes/next/source/js/src/js.cookie.js","hash":"9b37973a90fd50e71ea91682265715e45ae82c75","modified":1526470537000},{"_id":"themes/next/source/js/src/motion.js","hash":"50e57f8acb6924c6999cdcc664ddd3f0730d2061","modified":1526470537000},{"_id":"themes/next/source/js/src/post-details.js","hash":"d1333fb588d4521b4d1e9c69aef06e0ad1bf0b12","modified":1526470537000},{"_id":"themes/next/source/js/src/scroll-cookie.js","hash":"09dc828cbf5f31158ff6250d2bf7c3cde6365c67","modified":1526470537000},{"_id":"themes/next/source/js/src/scrollspy.js","hash":"fe4da1b9fe73518226446f5f27d2831e4426fc35","modified":1526470537000},{"_id":"themes/next/source/js/src/utils.js","hash":"4284c67ea1435de2acd523f6d48c0d073fd1ad03","modified":1526470537000},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.css","hash":"90ef19edc982645b118b095615838d9c5eaba0de","modified":1498129300000},{"_id":"themes/next/source/lib/canvas-nest/canvas-nest.min.js","hash":"0387e75e23b1db108a755073fe52a0d03eb391a7","modified":1498129300000},{"_id":"themes/next/source/lib/fancybox/.bower.json","hash":"cc40a9b11e52348e554c84e4a5c058056f6b7aeb","modified":1498129300000},{"_id":"themes/next/source/lib/fancybox/.gitattributes","hash":"2db21acfbd457452462f71cc4048a943ee61b8e0","modified":1498129300000},{"_id":"themes/next/source/lib/fastclick/.bower.json","hash":"93ebd5b35e632f714dcf1753e1f6db77ec74449b","modified":1498129300000},{"_id":"themes/next/source/lib/fastclick/LICENSE","hash":"dcd5b6b43095d9e90353a28b09cb269de8d4838e","modified":1498129300000},{"_id":"themes/next/source/lib/fastclick/README.md","hash":"1decd8e1adad2cd6db0ab50cf56de6035156f4ea","modified":1498129300000},{"_id":"themes/next/source/lib/fastclick/bower.json","hash":"13379463c7463b4b96d13556b46faa4cc38d81e6","modified":1498129300000},{"_id":"themes/next/source/lib/font-awesome/.bower.json","hash":"a2aaaf12378db56bd10596ba3daae30950eac051","modified":1526470537000},{"_id":"themes/next/source/lib/font-awesome/.gitignore","hash":"69d152fa46b517141ec3b1114dd6134724494d83","modified":1526470537000},{"_id":"themes/next/source/lib/font-awesome/.npmignore","hash":"dcf470ab3a358103bb896a539cc03caeda10fa8b","modified":1526470537000},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","hash":"4f7bf961f1bed448f6ba99aeb9219fabf930ba96","modified":1526470537000},{"_id":"themes/next/source/lib/font-awesome/bower.json","hash":"279a8a718ab6c930a67c41237f0aac166c1b9440","modified":1526470537000},{"_id":"themes/next/source/lib/jquery/.bower.json","hash":"91745c2cc6c946c7275f952b2b0760b880cea69e","modified":1498129300000},{"_id":"themes/next/source/lib/jquery_lazyload/.bower.json","hash":"b7638afc93e9cd350d0783565ee9a7da6805ad8e","modified":1498129300000},{"_id":"themes/next/source/lib/jquery_lazyload/CONTRIBUTING.md","hash":"4891864c24c28efecd81a6a8d3f261145190f901","modified":1498129300000},{"_id":"themes/next/source/lib/jquery_lazyload/README.md","hash":"895d50fa29759af7835256522e9dd7dac597765c","modified":1498129300000},{"_id":"themes/next/source/lib/jquery_lazyload/bower.json","hash":"65bc85d12197e71c40a55c0cd7f6823995a05222","modified":1498129300000},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.lazyload.js","hash":"481fd478650e12b67c201a0ea41e92743f8b45a3","modified":1498129300000},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.scrollstop.js","hash":"0e9a81785a011c98be5ea821a8ed7d411818cfd1","modified":1498129300000},{"_id":"themes/next/source/lib/velocity/.bower.json","hash":"05f960846f1c7a93dab1d3f9a1121e86812e8c88","modified":1498129300000},{"_id":"themes/next/source/lib/velocity/bower.json","hash":"2ec99573e84c7117368beccb9e94b6bf35d2db03","modified":1498129300000},{"_id":"themes/next/source/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1526470537000},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","hash":"6a1d101eab3de87527bb54fcc8c7b36b79d8f0df","modified":1526470537000},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1526470537000},{"_id":"themes/next/source/lib/jquery/index.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1526470537000},{"_id":"themes/next/layout/_scripts/third-party/analytics/application-insights.swig","hash":"60426bf73f8a89ba61fb1be2df3ad5398e32c4ef","modified":1498129300000},{"_id":"themes/next/layout/_scripts/third-party/analytics/baidu-analytics.swig","hash":"deda6a814ed48debc694c4e0c466f06c127163d0","modified":1498129300000},{"_id":"themes/next/layout/_scripts/third-party/analytics/busuanzi-counter.swig","hash":"4fcbf57c4918528ab51d3d042cff92cf5aefb599","modified":1498129300000},{"_id":"themes/next/layout/_scripts/third-party/analytics/cnzz-analytics.swig","hash":"8160b27bee0aa372c7dc7c8476c05bae57f58d0f","modified":1498129300000},{"_id":"themes/next/layout/_scripts/third-party/analytics/facebook-sdk.swig","hash":"394d008e5e94575280407ad8a1607a028026cbc3","modified":1498129300000},{"_id":"themes/next/layout/_scripts/third-party/analytics/google-analytics.swig","hash":"5d9943d74cc2e0a91badcf4f755c6de77eab193a","modified":1498129300000},{"_id":"themes/next/layout/_scripts/third-party/analytics/tencent-analytics.swig","hash":"3658414379e0e8a34c45c40feadc3edc8dc55f88","modified":1498129300000},{"_id":"themes/next/layout/_scripts/third-party/analytics/tencent-mta.swig","hash":"a652f202bd5b30c648c228ab8f0e997eb4928e44","modified":1498129300000},{"_id":"themes/next/layout/_scripts/third-party/analytics/vkontakte-api.swig","hash":"c3971fd154d781088e1cc665035f8561a4098f4c","modified":1498129300000},{"_id":"themes/next/layout/_scripts/third-party/comments/disqus.swig","hash":"fb1d04ede838b52ca7541973f86c3810f1ad396e","modified":1498129300000},{"_id":"themes/next/layout/_scripts/third-party/comments/duoshuo.swig","hash":"a356b2185d40914447fde817eb3d358ab6b3e4c3","modified":1498129300000},{"_id":"themes/next/layout/_scripts/third-party/comments/gentie.swig","hash":"03592d1d731592103a41ebb87437fe4b0a4c78ca","modified":1498129300000},{"_id":"themes/next/layout/_scripts/third-party/comments/hypercomments.swig","hash":"3e8dc5c6c912628a37e3b5f886bec7b2e5ed14ea","modified":1498129300000},{"_id":"themes/next/layout/_scripts/third-party/comments/livere.swig","hash":"7240f2e5ec7115f8abbbc4c9ef73d4bed180fdc7","modified":1498129300000},{"_id":"themes/next/layout/_scripts/third-party/comments/youyan.swig","hash":"af9dd8a4aed7d06cf47b363eebff48850888566c","modified":1498129300000},{"_id":"themes/next/layout/_third-party/search/algolia-search/assets.swig","hash":"6958a97fde63e03983ec2394a4f8e408860fb42b","modified":1526470537000},{"_id":"themes/next/layout/_third-party/search/algolia-search/dom.swig","hash":"ba698f49dd3a868c95b240d802f5b1b24ff287e4","modified":1526470537000},{"_id":"themes/next/source/css/_common/components/back-to-top-sidebar.styl","hash":"4719ce717962663c5c33ef97b1119a0b3a4ecdc3","modified":1526470537000},{"_id":"themes/next/source/css/_common/components/back-to-top.styl","hash":"31050fc7a25784805b4843550151c93bfa55c9c8","modified":1526470537000},{"_id":"themes/next/source/css/_common/components/buttons.styl","hash":"7e509c7c28c59f905b847304dd3d14d94b6f3b8e","modified":1526470537000},{"_id":"themes/next/source/css/_common/components/comments.styl","hash":"471f1627891aca5c0e1973e09fbcb01e1510d193","modified":1526470537000},{"_id":"themes/next/source/css/_common/components/components.styl","hash":"a6bb5256be6195e76addbda12f4ed7c662d65e7a","modified":1526470537000},{"_id":"themes/next/source/css/_common/components/pagination.styl","hash":"c5d48863f332ff8ce7c88dec2c893f709d7331d3","modified":1526470537000},{"_id":"themes/next/source/css/_common/components/tag-cloud.styl","hash":"dd8a3b22fc2f222ac6e6c05bd8a773fb039169c0","modified":1526470537000},{"_id":"themes/next/source/css/_common/outline/outline.styl","hash":"2186be20e317505cd31886f1291429cc21f76703","modified":1526470537000},{"_id":"themes/next/source/css/_common/scaffolding/base.styl","hash":"18309b68ff33163a6f76a39437e618bb6ed411f8","modified":1526470537000},{"_id":"themes/next/source/css/_common/scaffolding/helpers.styl","hash":"9c25c75311e1bd4d68df031d3f2ae6d141a90766","modified":1526470537000},{"_id":"themes/next/source/css/_common/scaffolding/mobile.styl","hash":"47a46583a1f3731157a3f53f80ed1ed5e2753e8e","modified":1526470537000},{"_id":"themes/next/source/css/_common/scaffolding/normalize.styl","hash":"ece571f38180febaf02ace8187ead8318a300ea7","modified":1526470537000},{"_id":"themes/next/source/css/_common/scaffolding/scaffolding.styl","hash":"a280a583b7615e939aaddbf778f5c108ef8a2a6c","modified":1526470537000},{"_id":"themes/next/source/css/_common/scaffolding/tables.styl","hash":"0810e7c43d6c8adc8434a8fa66eabe0436ab8178","modified":1526470537000},{"_id":"themes/next/source/css/_schemes/Gemini/index.styl","hash":"f362fbc791dafb378807cabbc58abf03e097af6d","modified":1526470537000},{"_id":"themes/next/source/css/_schemes/Mist/_base.styl","hash":"0bef9f0dc134215bc4d0984ba3a16a1a0b6f87ec","modified":1526470537000},{"_id":"themes/next/source/css/_schemes/Mist/_header.styl","hash":"5ae7906dc7c1d9468c7f4b4a6feddddc555797a1","modified":1526470537000},{"_id":"themes/next/source/css/_schemes/Mist/_logo.styl","hash":"38e5df90c8689a71c978fd83ba74af3d4e4e5386","modified":1526470537000},{"_id":"themes/next/source/css/_schemes/Mist/_menu.styl","hash":"f43c821ea272f80703862260b140932fe4aa0e1f","modified":1526470537000},{"_id":"themes/next/source/css/_schemes/Mist/_posts-expanded.styl","hash":"2212511ae14258d93bec57993c0385e5ffbb382b","modified":1526470537000},{"_id":"themes/next/source/css/_schemes/Mist/_search.styl","hash":"1452cbe674cc1d008e1e9640eb4283841058fc64","modified":1526470537000},{"_id":"themes/next/source/css/_schemes/Mist/index.styl","hash":"5e12572b18846250e016a872a738026478ceef37","modified":1526470537000},{"_id":"themes/next/source/css/_schemes/Muse/_layout.styl","hash":"0efa036a15c18f5abb058b7c0fad1dd9ac5eed4c","modified":1526470537000},{"_id":"themes/next/source/css/_schemes/Muse/_logo.styl","hash":"8829bc556ca38bfec4add4f15a2f028092ac6d46","modified":1526470537000},{"_id":"themes/next/source/css/_schemes/Muse/_menu.styl","hash":"35f093fe4c1861661ac1542d6e8ea5a9bbfeb659","modified":1526470537000},{"_id":"themes/next/source/css/_schemes/Muse/_search.styl","hash":"1452cbe674cc1d008e1e9640eb4283841058fc64","modified":1526470537000},{"_id":"themes/next/source/css/_schemes/Muse/index.styl","hash":"d5e8ea6336bc2e237d501ed0d5bbcbbfe296c832","modified":1526470537000},{"_id":"themes/next/source/css/_schemes/Pisces/_brand.styl","hash":"c4ed249798296f60bda02351fe6404fb3ef2126f","modified":1526470537000},{"_id":"themes/next/source/css/_schemes/Pisces/_layout.styl","hash":"ba1842dbeb97e46c6c4d2ae0e7a2ca6d610ada67","modified":1526470537000},{"_id":"themes/next/source/css/_schemes/Pisces/_menu.styl","hash":"05a5abf02e84ba8f639b6f9533418359f0ae4ecb","modified":1526470537000},{"_id":"themes/next/source/css/_schemes/Pisces/_posts.styl","hash":"2f878213cb24c5ddc18877f6d15ec5c5f57745ac","modified":1526470537000},{"_id":"themes/next/source/css/_schemes/Pisces/_sidebar.styl","hash":"41f9cdafa00e256561c50ae0b97ab7fcd7c1d6a2","modified":1526470537000},{"_id":"themes/next/source/css/_schemes/Pisces/_sub-menu.styl","hash":"ffa870c3fa37a48b01dc6f967e66f5df508d02bf","modified":1526470537000},{"_id":"themes/next/source/css/_schemes/Pisces/index.styl","hash":"5779cc8086b1cfde9bc4f1afdd85223bdc45f0a0","modified":1526470537000},{"_id":"themes/next/source/js/src/schemes/pisces.js","hash":"8050a5b2683d1d77238c5762b6bd89c543daed6e","modified":1526470537000},{"_id":"themes/next/source/lib/fancybox/source/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1498129300000},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1498129300000},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1498129300000},{"_id":"themes/next/source/lib/fancybox/source/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1498129300000},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1498129300000},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1498129300000},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.css","hash":"5f163444617b6cf267342f06ac166a237bb62df9","modified":1498129300000},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.js","hash":"1cf3d47b5ccb7cb6e9019c64f2a88d03a64853e4","modified":1498129300000},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.pack.js","hash":"53360764b429c212f424399384417ccc233bb3be","modified":1498129300000},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.js","hash":"06cef196733a710e77ad7e386ced6963f092dc55","modified":1498129300000},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.min.js","hash":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18","modified":1498129300000},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","hash":"0140952c64e3f2b74ef64e050f2fe86eab6624c8","modified":1526470537000},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","hash":"0189d278706509412bac4745f96c83984e1d59f4","modified":1526470537000},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","hash":"512c7d79033e3028a9be61b540cf1a6870c896f8","modified":1526470537000},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","hash":"38628e75e4412cc6f11074e03e1c6d257aae495b","modified":1526470537000},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","hash":"214dad442a92d36af77ed0ca1d9092b16687f02f","modified":1526470537000},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1526470537000},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1526470537000},{"_id":"themes/next/source/lib/velocity/velocity.js","hash":"9f08181baea0cc0e906703b7e5df9111b9ef3373","modified":1526470537000},{"_id":"themes/next/source/css/_common/components/footer/footer.styl","hash":"39dee82d481dd9d44e33658960ec63e47cd0a715","modified":1526470537000},{"_id":"themes/next/source/css/_common/components/header/github-banner.styl","hash":"ee37e6c465b9b2a7e39175fccfcbed14f2db039b","modified":1526470537000},{"_id":"themes/next/source/css/_common/components/header/header.styl","hash":"7cc3f36222494c9a1325c5347d7eb9ae53755a32","modified":1526470537000},{"_id":"themes/next/source/css/_common/components/header/headerband.styl","hash":"d27448f199fc2f9980b601bc22b87f08b5d64dd1","modified":1526470537000},{"_id":"themes/next/source/css/_common/components/header/menu.styl","hash":"8a2421cb9005352905fae9d41a847ae56957247e","modified":1526470537000},{"_id":"themes/next/source/css/_common/components/header/site-meta.styl","hash":"6c00f6e0978f4d8f9a846a15579963728aaa6a17","modified":1526470537000},{"_id":"themes/next/source/css/_common/components/header/site-nav.styl","hash":"49c2b2c14a1e7fcc810c6be4b632975d0204c281","modified":1526470537000},{"_id":"themes/next/source/css/_common/components/highlight/diff.styl","hash":"96f32ea6c3265a3889e6abe57587f6e2a2a40dfb","modified":1526470537000},{"_id":"themes/next/source/css/_common/components/highlight/highlight.styl","hash":"17b95828f9db7f131ec0361a8c0e89b0b5c9bff5","modified":1526470537000},{"_id":"themes/next/source/css/_common/components/highlight/theme.styl","hash":"b76387934fb6bb75212b23c1a194486892cc495e","modified":1526470537000},{"_id":"themes/next/source/css/_common/components/pages/archive.styl","hash":"f5aa2ba3bfffc15475e7e72a55b5c9d18609fdf5","modified":1526470537000},{"_id":"themes/next/source/css/_common/components/pages/breadcrumb.styl","hash":"7dd9a0378ccff3e4a2003f486b1a34e74c20dac6","modified":1526470537000},{"_id":"themes/next/source/css/_common/components/pages/categories.styl","hash":"4eff5b252d7b614e500fc7d52c97ce325e57d3ab","modified":1526470537000},{"_id":"themes/next/source/css/_common/components/pages/pages.styl","hash":"fb451dc4cc0355b57849c27d3eb110c73562f794","modified":1526470537000},{"_id":"themes/next/source/css/_common/components/pages/post-detail.styl","hash":"9bf4362a4d0ae151ada84b219d39fbe5bb8c790e","modified":1526470537000},{"_id":"themes/next/source/css/_common/components/pages/schedule.styl","hash":"a82afbb72d83ee394aedc7b37ac0008a9823b4f4","modified":1526470537000},{"_id":"themes/next/source/css/_common/components/post/post-button.styl","hash":"e72a89e0f421444453e149ba32c77a64bd8e44e8","modified":1526470537000},{"_id":"themes/next/source/css/_common/components/post/post-collapse.styl","hash":"0f7f522cc6bfb3401d5afd62b0fcdf48bb2d604b","modified":1526470537000},{"_id":"themes/next/source/css/_common/components/post/post-copyright.styl","hash":"f54367c0feda6986c030cc4d15a0ca6ceea14bcb","modified":1526470537000},{"_id":"themes/next/source/css/_common/components/post/post-eof.styl","hash":"2cdc094ecf907a02fce25ad4a607cd5c40da0f2b","modified":1526470537000},{"_id":"themes/next/source/css/_common/components/post/post-expand.styl","hash":"ca89b167d368eac50a4f808fa53ba67e69cbef94","modified":1526470537000},{"_id":"themes/next/source/css/_common/components/post/post-gallery.styl","hash":"387ce23bba52b22a586b2dfb4ec618fe1ffd3926","modified":1526470537000},{"_id":"themes/next/source/css/_common/components/post/post-meta.styl","hash":"417f05ff12a2aaca6ceeac8b7e7eb26e9440c4c3","modified":1526470537000},{"_id":"themes/next/source/css/_common/components/post/post-nav.styl","hash":"a5d8617a24d7cb6c5ad91ea621183ca2c0917331","modified":1526470537000},{"_id":"themes/next/source/css/_common/components/post/post-reading_progress.styl","hash":"f4e9f870baa56eae423a123062f00e24cc780be1","modified":1526470537000},{"_id":"themes/next/source/css/_common/components/post/post-reward.styl","hash":"36332c8a91f089f545f3c3e8ea90d08aa4d6e60c","modified":1526470537000},{"_id":"themes/next/source/css/_common/components/post/post-rtl.styl","hash":"017074ef58166e2d69c53bb7590a0e7a8947a1ed","modified":1526470537000},{"_id":"themes/next/source/css/_common/components/post/post-tags.styl","hash":"a352ae5b1f8857393bf770d2e638bf15f0c9585d","modified":1526470537000},{"_id":"themes/next/source/css/_common/components/post/post-title.styl","hash":"c0ac49fadd33ca4a9a0a04d5ff2ac6560d0ecd9e","modified":1526470537000},{"_id":"themes/next/source/css/_common/components/post/post-type.styl","hash":"10251257aceecb117233c9554dcf8ecfef8e2104","modified":1526470537000},{"_id":"themes/next/source/css/_common/components/post/post-widgets.styl","hash":"e4055a0d2cd2b0ad9dc55928e2f3e7bd4e499da3","modified":1526470537000},{"_id":"themes/next/source/css/_common/components/post/post.styl","hash":"8bf095377d28881f63a30bd7db97526829103bf2","modified":1526470537000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author-links.styl","hash":"35c0350096921dd8e2222ec41b6c17a4ea6b44f2","modified":1526470537000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author.styl","hash":"bbe0d111f6451fc04e52719fd538bd0753ec17f9","modified":1526470537000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-blogroll.styl","hash":"89dd4f8b1f1cce3ad46cf2256038472712387d02","modified":1526470537000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-dimmer.styl","hash":"efa5e5022e205b52786ce495d4879f5e7b8f84b2","modified":1526470537000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-feed-link.styl","hash":"9486ddd2cb255227db102d09a7df4cae0fabad72","modified":1526470537000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-nav.styl","hash":"45fa7193435a8eae9960267438750b4c9fa9587f","modified":1526470537000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toc.styl","hash":"4427ed3250483ed5b7baad74fa93474bd1eda729","modified":1526470537000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toggle.styl","hash":"f7784aba0c1cd20d824c918c120012d57a5eaa2a","modified":1526470537000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar.styl","hash":"43bc58daa8d35d5d515dc787ceb21dd77633fe49","modified":1526470537000},{"_id":"themes/next/source/css/_common/components/sidebar/site-state.styl","hash":"3623e7fa4324ec1307370f33d8f287a9e20a5578","modified":1526470537000},{"_id":"themes/next/source/css/_common/components/tags/blockquote-center.styl","hash":"c2abe4d87148e23e15d49ee225bc650de60baf46","modified":1526470537000},{"_id":"themes/next/source/css/_common/components/tags/exturl.styl","hash":"1b3cc9f4e5a7f6e05b4100e9990b37b20d4a2005","modified":1526470537000},{"_id":"themes/next/source/css/_common/components/tags/full-image.styl","hash":"5d15cc8bbefe44c77a9b9f96bf04a6033a4b35b8","modified":1526470537000},{"_id":"themes/next/source/css/_common/components/tags/group-pictures.styl","hash":"4851b981020c5cbc354a1af9b831a2dcb3cf9d39","modified":1526470537000},{"_id":"themes/next/source/css/_common/components/tags/label.styl","hash":"4a457d265d62f287c63d48764ce45d9bcfc9ec5a","modified":1526470537000},{"_id":"themes/next/source/css/_common/components/tags/note-modern.styl","hash":"ee7528900578ef4753effe05b346381c40de5499","modified":1526470537000},{"_id":"themes/next/source/css/_common/components/tags/note.styl","hash":"32c9156bea5bac9e9ad0b4c08ffbca8b3d9aac4b","modified":1526470537000},{"_id":"themes/next/source/css/_common/components/tags/tabs.styl","hash":"4ab5deed8c3b0c338212380f678f8382672e1bcb","modified":1526470537000},{"_id":"themes/next/source/css/_common/components/tags/tags.styl","hash":"ead0d0f2321dc71505788c7f689f92257cf14947","modified":1526470537000},{"_id":"themes/next/source/css/_common/components/third-party/algolia-search.styl","hash":"10e9bb3392826a5a8f4cabfc14c6d81645f33fe6","modified":1526470537000},{"_id":"themes/next/source/css/_common/components/third-party/baidushare.styl","hash":"93b08815c4d17e2b96fef8530ec1f1064dede6ef","modified":1526470537000},{"_id":"themes/next/source/css/_common/components/third-party/busuanzi-counter.styl","hash":"d4e6d8d7b34dc69994593c208f875ae8f7e8a3ae","modified":1526470537000},{"_id":"themes/next/source/css/_common/components/third-party/duoshuo.styl","hash":"2340dd9b3202c61d73cc708b790fac5adddbfc7f","modified":1498129300000},{"_id":"themes/next/source/css/_common/components/third-party/gentie.styl","hash":"586a3ec0f1015e7207cd6a2474362e068c341744","modified":1498129300000},{"_id":"themes/next/source/css/_common/components/third-party/gitment.styl","hash":"34935b40237c074be5f5e8818c14ccfd802b7439","modified":1526470537000},{"_id":"themes/next/source/css/_common/components/third-party/han.styl","hash":"cce6772e2cdb4db85d35486ae4c6c59367fbdd40","modified":1526470537000},{"_id":"themes/next/source/css/_common/components/third-party/jiathis.styl","hash":"327b5f63d55ec26f7663185c1a778440588d9803","modified":1526470537000},{"_id":"themes/next/source/css/_common/components/third-party/localsearch.styl","hash":"d89c4b562b528e4746696b2ad8935764d133bdae","modified":1526470537000},{"_id":"themes/next/source/css/_common/components/third-party/needsharebutton.styl","hash":"a5e3e6b4b4b814a9fe40b34d784fed67d6d977fa","modified":1526470537000},{"_id":"themes/next/source/css/_common/components/third-party/related-posts.styl","hash":"76937db9702053d772f6758d9cea4088c2a6e2a3","modified":1526470537000},{"_id":"themes/next/source/css/_common/components/third-party/third-party.styl","hash":"1c06be422bc41fd35e5c7948cdea2c09961207f6","modified":1526470537000},{"_id":"themes/next/source/css/_schemes/Mist/outline/outline.styl","hash":"5dc4859c66305f871e56cba78f64bfe3bf1b5f01","modified":1526470537000},{"_id":"themes/next/source/css/_schemes/Mist/sidebar/sidebar-blogroll.styl","hash":"817587e46df49e819858c8ecbafa08b53d5ff040","modified":1526470537000},{"_id":"themes/next/source/css/_schemes/Muse/sidebar/sidebar-blogroll.styl","hash":"817587e46df49e819858c8ecbafa08b53d5ff040","modified":1526470537000},{"_id":"themes/next/source/lib/fancybox/source/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1498129300000},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1498129300000},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","hash":"91e41741c2e93f732c82aaacec4cfc6e3f3ec876","modified":1498129300000},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-media.js","hash":"3bdf69ed2469e4fb57f5a95f17300eef891ff90d","modified":1498129300000},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1498129300000},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","hash":"53e194f4a72e649c04fb586dd57762b8c022800b","modified":1498129300000},{"_id":"themes/next/source/lib/font-awesome/fonts/FontAwesome.otf","hash":"048707bc52ac4b6563aaa383bfe8660a0ddc908c","modified":1498129300000},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1526470537000},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","hash":"13b1eab65a983c7a73bc7997c479d66943f7c6cb","modified":1498129300000},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.js","hash":"9ccc6f8144f54e86df9a3fd33a18368d81cf3a4f","modified":1498129300000},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.svg","hash":"98a8aa5cf7d62c2eff5f07ede8d844b874ef06ed","modified":1498129300000}],"Category":[{"name":"Hadoop","_id":"cjin2pu1b0004nrfyte13z9o9"},{"name":"Git","_id":"cjin2pu1h0009nrfy5iqlgpnu"},{"name":"Go","_id":"cjin2pu1k000enrfy7diroqoi"},{"name":"小记","parent":"cjin2pu1b0004nrfyte13z9o9","_id":"cjin2pu1n000lnrfyfbq9cx2x"},{"name":"Linux","_id":"cjin2pu1x0013nrfy3flnmtjs"},{"name":"Mac","_id":"cjin2pu21001bnrfyfjf9ozbc"},{"name":"PHP","_id":"cjin2pu23001jnrfyb9k7ju0h"},{"name":"Vue","_id":"cjin2pu26001qnrfyklu2qkoz"},{"name":"运维","_id":"cjin2pu290020nrfyofaplvyn"},{"name":"MySQL","_id":"cjin2pu2b002cnrfyf360wv7a"},{"name":"模式","_id":"cjin2pu2c002inrfyuwj2y519"},{"name":"laravel","parent":"cjin2pu23001jnrfyb9k7ju0h","_id":"cjin2pu2g0033nrfytwasxta9"}],"Data":[{"_id":"head","data":"\n<script type=\"text/javascript\" id=\"hexo.headll\">\n(function () {\n  window.addEventListener(\"load\", function () {   //添加load事件\n    $(\"body\").click(function (e) {\n        var a = new Array(\"富强\", \"民主\", \"文明\", \"和谐\", \"自由\", \"平等\", \"公正\", \"法治\", \"爱国\", \"敬业\", \"诚信\", \"友善\");\n        var a_idx=Math.floor(Math.random()*a.length);\n        var $i = $(\"<span/>\").text(a[a_idx]);\n        var x = e.pageX,y = e.pageY;\n        $i.css({\n            \"z-index\": 99999,\n            \"top\": y - 20,\n            \"left\": x,\n            \"position\": \"absolute\",\n            \"font-weight\": \"bold\",\n            \"color\": \"#ff6651\"\n        });\n        $(\"body\").append($i);\n        $i.animate({\n            \"top\": y - 180,\n            \"opacity\": 0\n        },\n        1500,\n        function () {\n            $i.remove();\n        });\n    });\n  }, false);\n})();\n</script>\n\n"}],"Page":[{"title":"关于","date":"2017-03-16T08:39:05.000Z","_content":"\n保持饥饿。\n\n<a href=\"mailto:ll-xzx@qq.com\" target=\"_self\">ll-xzx@qq.com</a>\n","source":"about/index.md","raw":"---\ntitle: 关于\ndate: 2017-03-16 16:39:05\n---\n\n保持饥饿。\n\n<a href=\"mailto:ll-xzx@qq.com\" target=\"_self\">ll-xzx@qq.com</a>\n","updated":"2018-06-20T12:39:04.018Z","path":"about/index.html","_id":"cjin2pu180001nrfygorq0mdn","comments":1,"layout":"page","content":"<p>保持饥饿。</p>\n<p><a href=\"mailto:ll-xzx@qq.com\" target=\"_self\">ll-xzx@qq.com</a></p>\n","site":{"data":{"head":"\n<script type=\"text/javascript\" id=\"hexo.headll\">\n(function () {\n  window.addEventListener(\"load\", function () {   //添加load事件\n    $(\"body\").click(function (e) {\n        var a = new Array(\"富强\", \"民主\", \"文明\", \"和谐\", \"自由\", \"平等\", \"公正\", \"法治\", \"爱国\", \"敬业\", \"诚信\", \"友善\");\n        var a_idx=Math.floor(Math.random()*a.length);\n        var $i = $(\"<span/>\").text(a[a_idx]);\n        var x = e.pageX,y = e.pageY;\n        $i.css({\n            \"z-index\": 99999,\n            \"top\": y - 20,\n            \"left\": x,\n            \"position\": \"absolute\",\n            \"font-weight\": \"bold\",\n            \"color\": \"#ff6651\"\n        });\n        $(\"body\").append($i);\n        $i.animate({\n            \"top\": y - 180,\n            \"opacity\": 0\n        },\n        1500,\n        function () {\n            $i.remove();\n        });\n    });\n  }, false);\n})();\n</script>\n\n"}},"excerpt":"","more":"<p>保持饥饿。</p>\n<p><a href=\"mailto:ll-xzx@qq.com\" target=\"_self\">ll-xzx@qq.com</a></p>\n"},{"title":"categories","date":"2017-03-16T08:40:44.000Z","type":"categories","_content":"","source":"categories/index.md","raw":"---\ntitle: categories\ndate: 2017-03-16 16:40:44\ntype: categories\n---\n","updated":"2017-06-22T11:01:40.000Z","path":"categories/index.html","comments":1,"layout":"page","_id":"cjin2pu1a0003nrfyecbtehyi","content":"","site":{"data":{"head":"\n<script type=\"text/javascript\" id=\"hexo.headll\">\n(function () {\n  window.addEventListener(\"load\", function () {   //添加load事件\n    $(\"body\").click(function (e) {\n        var a = new Array(\"富强\", \"民主\", \"文明\", \"和谐\", \"自由\", \"平等\", \"公正\", \"法治\", \"爱国\", \"敬业\", \"诚信\", \"友善\");\n        var a_idx=Math.floor(Math.random()*a.length);\n        var $i = $(\"<span/>\").text(a[a_idx]);\n        var x = e.pageX,y = e.pageY;\n        $i.css({\n            \"z-index\": 99999,\n            \"top\": y - 20,\n            \"left\": x,\n            \"position\": \"absolute\",\n            \"font-weight\": \"bold\",\n            \"color\": \"#ff6651\"\n        });\n        $(\"body\").append($i);\n        $i.animate({\n            \"top\": y - 180,\n            \"opacity\": 0\n        },\n        1500,\n        function () {\n            $i.remove();\n        });\n    });\n  }, false);\n})();\n</script>\n\n"}},"excerpt":"","more":""},{"title":"Tagcloud","date":"2017-03-15T11:16:49.000Z","type":"tags","_content":"","source":"tags/index.md","raw":"---\ntitle: Tagcloud\ndate: 2017-03-15 19:16:49\ntype: \"tags\"\n---\n","updated":"2017-06-22T11:01:40.000Z","path":"tags/index.html","comments":1,"layout":"page","_id":"cjin2pu810047nrfyz78d9wx4","content":"","site":{"data":{"head":"\n<script type=\"text/javascript\" id=\"hexo.headll\">\n(function () {\n  window.addEventListener(\"load\", function () {   //添加load事件\n    $(\"body\").click(function (e) {\n        var a = new Array(\"富强\", \"民主\", \"文明\", \"和谐\", \"自由\", \"平等\", \"公正\", \"法治\", \"爱国\", \"敬业\", \"诚信\", \"友善\");\n        var a_idx=Math.floor(Math.random()*a.length);\n        var $i = $(\"<span/>\").text(a[a_idx]);\n        var x = e.pageX,y = e.pageY;\n        $i.css({\n            \"z-index\": 99999,\n            \"top\": y - 20,\n            \"left\": x,\n            \"position\": \"absolute\",\n            \"font-weight\": \"bold\",\n            \"color\": \"#ff6651\"\n        });\n        $(\"body\").append($i);\n        $i.animate({\n            \"top\": y - 180,\n            \"opacity\": 0\n        },\n        1500,\n        function () {\n            $i.remove();\n        });\n    });\n  }, false);\n})();\n</script>\n\n"}},"excerpt":"","more":""}],"Post":[{"title":"Flume小记","date":"2017-06-13T07:00:00.000Z","_content":"\nFlume小记\n\n<!-- MORE -->\n环境：腾讯云CentOS 7 x64  \n目标：安装Flume 1.7\n\n\n# 安装  \n## java 1.8  \n[Hadoop小记](Hadoop小记)\n\n## Flume 1.7\n```\n# wget http://apache.fayea.com/flume/1.7.0/apache-flume-1.7.0-bin.tar.gz\nwget http://10.210.0.8/apache-flume-1.7.0-bin.tar.gz\ntar -xzf apache-flume-1.7.0-bin.tar.gz\nmv apache-flume-1.7.0-bin /usr/local/\n\ncd /usr/local/apache-flume-1.7.0-bin\n```\n## 配置\n### client使用exec source \n\nvim conf/client.conf\n```\n# Name the components on this agent\nclient.sinks = k1\nclient.sources = r1\nclient.channels = c1\n\n\n\n# Use a channel which buffers events in memory\nclient.channels.c1.type = memory\nclient.channels.c1.capacity = 1000\nclient.channels.c1.transactionCapacity = 100\n\n\n\nclient.sources.r1.type = TAILDIR\nclient.sources.r1.channels = c1\nclient.sources.r1.positionFile = /data/www/flume/taildir_position.json\nclient.sources.r1.filegroups = f1\nclient.sources.r1.filegroups.f1 = /data/www/htdocs/v3.maozhuar.com/storage/maozhua/production/weight/log-.*\nclient.sources.r1.headers.f1.headerKey1 = value1\nclient.sources.r1.fileHeader = true\n\n\n\n# Describe the sink\nclient.sinks.k1.type = avro\nclient.sinks.k1.channel = c1\nclient.sinks.k1.hostname = hadoop.maozhuar.com\nclient.sinks.k1.port = 4100\n\n```\n\n运行\n```\nnohup /usr/local/apache-flume-1.7.0-bin/bin/flume-ng agent --conf conf --conf-file /usr/local/apache-flume-1.7.0-bin/conf/client.conf --name client > 2 >&1 &\n```\n\n### 接收端使用  \n使用hdfs，得先把hadoop中得jar包复制到flume/lib/中\nhadoop/share/hadoop/common/*.jar\nhadoop/share/hadoop/common/lib/*.jar\nhadoop/share/hadoop/hdfs/hadoop-hdfs-*.jar\n\n```\n# Name the components on this agent\na1.sinks = k1\na1.sources = r1\na1.channels = c1\n\na1.sources.r1.type = avro\na1.sources.r1.channels = c1\na1.sources.r1.bind = 0.0.0.0\na1.sources.r1.port = 4141\n\na1.sinks.k1.type = hdfs\na1.sinks.k1.channel = c1\na1.sinks.k1.hdfs.path = hdfs://hadoop.maozhuar.com:9000/flume/events/%y-%m-%d/\na1.sinks.k1.hdfs.useLocalTimeStamp = true\n\na1.sinks.k1.hdfs.filePrefix=maozhua\na1.sinks.k1.hdfs.minBlockReplicas=1\na1.sinks.k1.hdfs.fileType=DataStream\na1.sinks.k1.hdfs.writeFormat=Text\na1.sinks.k1.hdfs.rollInterval=600\na1.sinks.k1.hdfs.rollSize=0\na1.sinks.k1.hdfs.rollCount=0\na1.sinks.k1.hdfs.idleTimeout=0\n\na1.channels.c1.type = memory\na1.channels.c1.capacity = 1000\na1.channels.c1.transactionCapacity = 100\n```\n运行\n```\nbin/flume-ng agent --conf conf --conf-file conf/.conf --name a1 -Dflume.root.logger=INFO,console\n```\n\n#### 问题：hdfs文件乱码\n\n解决：\n```\na1.sinks.k1.hdfs.fileType=DataStream\n```\n\n#### 问题：Expected timestamp in the Flume event headers, but it was null  \n解决1，每行开头有时间戳\n解决2\n```\na1.sinks.k1.hdfs.useLocalTimeStamp = true\n```\n\n#### 问题：没秒钟产生一个hdfs文件\n解决\n```\na1.sinks.k1.type = hdfs\na1.sinks.k1.channel = c1\na1.sinks.k1.hdfs.path = hdfs://hadoop.maozhuar.com:9000/flume/events/%y-%m-%d/\na1.sinks.k1.hdfs.useLocalTimeStamp = true\n\na1.sinks.k1.hdfs.filePrefix=maozhua\na1.sinks.k1.hdfs.minBlockReplicas=1\na1.sinks.k1.hdfs.fileType=DataStream\na1.sinks.k1.hdfs.writeFormat=Text\na1.sinks.k1.hdfs.rollInterval=600\na1.sinks.k1.hdfs.rollSize=0\na1.sinks.k1.hdfs.rollCount=0\na1.sinks.k1.hdfs.idleTimeout=0\n```\n\n# 参考\n[【Flume】【源码分析】flume中sink到hdfs，文件系统频繁产生文件，文件滚动配置不起作用？](http://blog.csdn.net/simonchi/article/details/43231891)\n","source":"_posts/Flume小记.md","raw":"---\ntitle: Flume小记\ndate: 2017-06-13 15:00:00\ntags:\n  - Hadoop\n  - Flume\ncategories:\n    - Hadoop\n    - 小记\n---\n\nFlume小记\n\n<!-- MORE -->\n环境：腾讯云CentOS 7 x64  \n目标：安装Flume 1.7\n\n\n# 安装  \n## java 1.8  \n[Hadoop小记](Hadoop小记)\n\n## Flume 1.7\n```\n# wget http://apache.fayea.com/flume/1.7.0/apache-flume-1.7.0-bin.tar.gz\nwget http://10.210.0.8/apache-flume-1.7.0-bin.tar.gz\ntar -xzf apache-flume-1.7.0-bin.tar.gz\nmv apache-flume-1.7.0-bin /usr/local/\n\ncd /usr/local/apache-flume-1.7.0-bin\n```\n## 配置\n### client使用exec source \n\nvim conf/client.conf\n```\n# Name the components on this agent\nclient.sinks = k1\nclient.sources = r1\nclient.channels = c1\n\n\n\n# Use a channel which buffers events in memory\nclient.channels.c1.type = memory\nclient.channels.c1.capacity = 1000\nclient.channels.c1.transactionCapacity = 100\n\n\n\nclient.sources.r1.type = TAILDIR\nclient.sources.r1.channels = c1\nclient.sources.r1.positionFile = /data/www/flume/taildir_position.json\nclient.sources.r1.filegroups = f1\nclient.sources.r1.filegroups.f1 = /data/www/htdocs/v3.maozhuar.com/storage/maozhua/production/weight/log-.*\nclient.sources.r1.headers.f1.headerKey1 = value1\nclient.sources.r1.fileHeader = true\n\n\n\n# Describe the sink\nclient.sinks.k1.type = avro\nclient.sinks.k1.channel = c1\nclient.sinks.k1.hostname = hadoop.maozhuar.com\nclient.sinks.k1.port = 4100\n\n```\n\n运行\n```\nnohup /usr/local/apache-flume-1.7.0-bin/bin/flume-ng agent --conf conf --conf-file /usr/local/apache-flume-1.7.0-bin/conf/client.conf --name client > 2 >&1 &\n```\n\n### 接收端使用  \n使用hdfs，得先把hadoop中得jar包复制到flume/lib/中\nhadoop/share/hadoop/common/*.jar\nhadoop/share/hadoop/common/lib/*.jar\nhadoop/share/hadoop/hdfs/hadoop-hdfs-*.jar\n\n```\n# Name the components on this agent\na1.sinks = k1\na1.sources = r1\na1.channels = c1\n\na1.sources.r1.type = avro\na1.sources.r1.channels = c1\na1.sources.r1.bind = 0.0.0.0\na1.sources.r1.port = 4141\n\na1.sinks.k1.type = hdfs\na1.sinks.k1.channel = c1\na1.sinks.k1.hdfs.path = hdfs://hadoop.maozhuar.com:9000/flume/events/%y-%m-%d/\na1.sinks.k1.hdfs.useLocalTimeStamp = true\n\na1.sinks.k1.hdfs.filePrefix=maozhua\na1.sinks.k1.hdfs.minBlockReplicas=1\na1.sinks.k1.hdfs.fileType=DataStream\na1.sinks.k1.hdfs.writeFormat=Text\na1.sinks.k1.hdfs.rollInterval=600\na1.sinks.k1.hdfs.rollSize=0\na1.sinks.k1.hdfs.rollCount=0\na1.sinks.k1.hdfs.idleTimeout=0\n\na1.channels.c1.type = memory\na1.channels.c1.capacity = 1000\na1.channels.c1.transactionCapacity = 100\n```\n运行\n```\nbin/flume-ng agent --conf conf --conf-file conf/.conf --name a1 -Dflume.root.logger=INFO,console\n```\n\n#### 问题：hdfs文件乱码\n\n解决：\n```\na1.sinks.k1.hdfs.fileType=DataStream\n```\n\n#### 问题：Expected timestamp in the Flume event headers, but it was null  \n解决1，每行开头有时间戳\n解决2\n```\na1.sinks.k1.hdfs.useLocalTimeStamp = true\n```\n\n#### 问题：没秒钟产生一个hdfs文件\n解决\n```\na1.sinks.k1.type = hdfs\na1.sinks.k1.channel = c1\na1.sinks.k1.hdfs.path = hdfs://hadoop.maozhuar.com:9000/flume/events/%y-%m-%d/\na1.sinks.k1.hdfs.useLocalTimeStamp = true\n\na1.sinks.k1.hdfs.filePrefix=maozhua\na1.sinks.k1.hdfs.minBlockReplicas=1\na1.sinks.k1.hdfs.fileType=DataStream\na1.sinks.k1.hdfs.writeFormat=Text\na1.sinks.k1.hdfs.rollInterval=600\na1.sinks.k1.hdfs.rollSize=0\na1.sinks.k1.hdfs.rollCount=0\na1.sinks.k1.hdfs.idleTimeout=0\n```\n\n# 参考\n[【Flume】【源码分析】flume中sink到hdfs，文件系统频繁产生文件，文件滚动配置不起作用？](http://blog.csdn.net/simonchi/article/details/43231891)\n","slug":"Flume小记","published":1,"updated":"2017-06-27T11:48:44.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjin2pu150000nrfya0yjbi8q","content":"<p>Flume小记</p>\n<a id=\"more\"></a>\n<p>环境：腾讯云CentOS 7 x64<br>目标：安装Flume 1.7</p>\n<h1 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h1><h2 id=\"java-1-8\"><a href=\"#java-1-8\" class=\"headerlink\" title=\"java 1.8\"></a>java 1.8</h2><p><a href=\"Hadoop小记\">Hadoop小记</a></p>\n<h2 id=\"Flume-1-7\"><a href=\"#Flume-1-7\" class=\"headerlink\" title=\"Flume 1.7\"></a>Flume 1.7</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># wget http://apache.fayea.com/flume/1.7.0/apache-flume-1.7.0-bin.tar.gz</span><br><span class=\"line\">wget http://10.210.0.8/apache-flume-1.7.0-bin.tar.gz</span><br><span class=\"line\">tar -xzf apache-flume-1.7.0-bin.tar.gz</span><br><span class=\"line\">mv apache-flume-1.7.0-bin /usr/local/</span><br><span class=\"line\"></span><br><span class=\"line\">cd /usr/local/apache-flume-1.7.0-bin</span><br></pre></td></tr></table></figure>\n<h2 id=\"配置\"><a href=\"#配置\" class=\"headerlink\" title=\"配置\"></a>配置</h2><h3 id=\"client使用exec-source\"><a href=\"#client使用exec-source\" class=\"headerlink\" title=\"client使用exec source\"></a>client使用exec source</h3><p>vim conf/client.conf<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># Name the components on this agent</span><br><span class=\"line\">client.sinks = k1</span><br><span class=\"line\">client.sources = r1</span><br><span class=\"line\">client.channels = c1</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"># Use a channel which buffers events in memory</span><br><span class=\"line\">client.channels.c1.type = memory</span><br><span class=\"line\">client.channels.c1.capacity = 1000</span><br><span class=\"line\">client.channels.c1.transactionCapacity = 100</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">client.sources.r1.type = TAILDIR</span><br><span class=\"line\">client.sources.r1.channels = c1</span><br><span class=\"line\">client.sources.r1.positionFile = /data/www/flume/taildir_position.json</span><br><span class=\"line\">client.sources.r1.filegroups = f1</span><br><span class=\"line\">client.sources.r1.filegroups.f1 = /data/www/htdocs/v3.maozhuar.com/storage/maozhua/production/weight/log-.*</span><br><span class=\"line\">client.sources.r1.headers.f1.headerKey1 = value1</span><br><span class=\"line\">client.sources.r1.fileHeader = true</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"># Describe the sink</span><br><span class=\"line\">client.sinks.k1.type = avro</span><br><span class=\"line\">client.sinks.k1.channel = c1</span><br><span class=\"line\">client.sinks.k1.hostname = hadoop.maozhuar.com</span><br><span class=\"line\">client.sinks.k1.port = 4100</span><br></pre></td></tr></table></figure></p>\n<p>运行<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">nohup /usr/local/apache-flume-1.7.0-bin/bin/flume-ng agent --conf conf --conf-file /usr/local/apache-flume-1.7.0-bin/conf/client.conf --name client &gt; 2 &gt;&amp;1 &amp;</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"接收端使用\"><a href=\"#接收端使用\" class=\"headerlink\" title=\"接收端使用\"></a>接收端使用</h3><p>使用hdfs，得先把hadoop中得jar包复制到flume/lib/中<br>hadoop/share/hadoop/common/<em>.jar<br>hadoop/share/hadoop/common/lib/</em>.jar<br>hadoop/share/hadoop/hdfs/hadoop-hdfs-*.jar</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># Name the components on this agent</span><br><span class=\"line\">a1.sinks = k1</span><br><span class=\"line\">a1.sources = r1</span><br><span class=\"line\">a1.channels = c1</span><br><span class=\"line\"></span><br><span class=\"line\">a1.sources.r1.type = avro</span><br><span class=\"line\">a1.sources.r1.channels = c1</span><br><span class=\"line\">a1.sources.r1.bind = 0.0.0.0</span><br><span class=\"line\">a1.sources.r1.port = 4141</span><br><span class=\"line\"></span><br><span class=\"line\">a1.sinks.k1.type = hdfs</span><br><span class=\"line\">a1.sinks.k1.channel = c1</span><br><span class=\"line\">a1.sinks.k1.hdfs.path = hdfs://hadoop.maozhuar.com:9000/flume/events/%y-%m-%d/</span><br><span class=\"line\">a1.sinks.k1.hdfs.useLocalTimeStamp = true</span><br><span class=\"line\"></span><br><span class=\"line\">a1.sinks.k1.hdfs.filePrefix=maozhua</span><br><span class=\"line\">a1.sinks.k1.hdfs.minBlockReplicas=1</span><br><span class=\"line\">a1.sinks.k1.hdfs.fileType=DataStream</span><br><span class=\"line\">a1.sinks.k1.hdfs.writeFormat=Text</span><br><span class=\"line\">a1.sinks.k1.hdfs.rollInterval=600</span><br><span class=\"line\">a1.sinks.k1.hdfs.rollSize=0</span><br><span class=\"line\">a1.sinks.k1.hdfs.rollCount=0</span><br><span class=\"line\">a1.sinks.k1.hdfs.idleTimeout=0</span><br><span class=\"line\"></span><br><span class=\"line\">a1.channels.c1.type = memory</span><br><span class=\"line\">a1.channels.c1.capacity = 1000</span><br><span class=\"line\">a1.channels.c1.transactionCapacity = 100</span><br></pre></td></tr></table></figure>\n<p>运行<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">bin/flume-ng agent --conf conf --conf-file conf/.conf --name a1 -Dflume.root.logger=INFO,console</span><br></pre></td></tr></table></figure></p>\n<h4 id=\"问题：hdfs文件乱码\"><a href=\"#问题：hdfs文件乱码\" class=\"headerlink\" title=\"问题：hdfs文件乱码\"></a>问题：hdfs文件乱码</h4><p>解决：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">a1.sinks.k1.hdfs.fileType=DataStream</span><br></pre></td></tr></table></figure></p>\n<h4 id=\"问题：Expected-timestamp-in-the-Flume-event-headers-but-it-was-null\"><a href=\"#问题：Expected-timestamp-in-the-Flume-event-headers-but-it-was-null\" class=\"headerlink\" title=\"问题：Expected timestamp in the Flume event headers, but it was null\"></a>问题：Expected timestamp in the Flume event headers, but it was null</h4><p>解决1，每行开头有时间戳<br>解决2<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">a1.sinks.k1.hdfs.useLocalTimeStamp = true</span><br></pre></td></tr></table></figure></p>\n<h4 id=\"问题：没秒钟产生一个hdfs文件\"><a href=\"#问题：没秒钟产生一个hdfs文件\" class=\"headerlink\" title=\"问题：没秒钟产生一个hdfs文件\"></a>问题：没秒钟产生一个hdfs文件</h4><p>解决<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">a1.sinks.k1.type = hdfs</span><br><span class=\"line\">a1.sinks.k1.channel = c1</span><br><span class=\"line\">a1.sinks.k1.hdfs.path = hdfs://hadoop.maozhuar.com:9000/flume/events/%y-%m-%d/</span><br><span class=\"line\">a1.sinks.k1.hdfs.useLocalTimeStamp = true</span><br><span class=\"line\"></span><br><span class=\"line\">a1.sinks.k1.hdfs.filePrefix=maozhua</span><br><span class=\"line\">a1.sinks.k1.hdfs.minBlockReplicas=1</span><br><span class=\"line\">a1.sinks.k1.hdfs.fileType=DataStream</span><br><span class=\"line\">a1.sinks.k1.hdfs.writeFormat=Text</span><br><span class=\"line\">a1.sinks.k1.hdfs.rollInterval=600</span><br><span class=\"line\">a1.sinks.k1.hdfs.rollSize=0</span><br><span class=\"line\">a1.sinks.k1.hdfs.rollCount=0</span><br><span class=\"line\">a1.sinks.k1.hdfs.idleTimeout=0</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h1><p><a href=\"http://blog.csdn.net/simonchi/article/details/43231891\" target=\"_blank\" rel=\"noopener\">【Flume】【源码分析】flume中sink到hdfs，文件系统频繁产生文件，文件滚动配置不起作用？</a></p>\n","site":{"data":{"head":"\n<script type=\"text/javascript\" id=\"hexo.headll\">\n(function () {\n  window.addEventListener(\"load\", function () {   //添加load事件\n    $(\"body\").click(function (e) {\n        var a = new Array(\"富强\", \"民主\", \"文明\", \"和谐\", \"自由\", \"平等\", \"公正\", \"法治\", \"爱国\", \"敬业\", \"诚信\", \"友善\");\n        var a_idx=Math.floor(Math.random()*a.length);\n        var $i = $(\"<span/>\").text(a[a_idx]);\n        var x = e.pageX,y = e.pageY;\n        $i.css({\n            \"z-index\": 99999,\n            \"top\": y - 20,\n            \"left\": x,\n            \"position\": \"absolute\",\n            \"font-weight\": \"bold\",\n            \"color\": \"#ff6651\"\n        });\n        $(\"body\").append($i);\n        $i.animate({\n            \"top\": y - 180,\n            \"opacity\": 0\n        },\n        1500,\n        function () {\n            $i.remove();\n        });\n    });\n  }, false);\n})();\n</script>\n\n"}},"excerpt":"<p>Flume小记</p>","more":"<p>环境：腾讯云CentOS 7 x64<br>目标：安装Flume 1.7</p>\n<h1 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h1><h2 id=\"java-1-8\"><a href=\"#java-1-8\" class=\"headerlink\" title=\"java 1.8\"></a>java 1.8</h2><p><a href=\"Hadoop小记\">Hadoop小记</a></p>\n<h2 id=\"Flume-1-7\"><a href=\"#Flume-1-7\" class=\"headerlink\" title=\"Flume 1.7\"></a>Flume 1.7</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># wget http://apache.fayea.com/flume/1.7.0/apache-flume-1.7.0-bin.tar.gz</span><br><span class=\"line\">wget http://10.210.0.8/apache-flume-1.7.0-bin.tar.gz</span><br><span class=\"line\">tar -xzf apache-flume-1.7.0-bin.tar.gz</span><br><span class=\"line\">mv apache-flume-1.7.0-bin /usr/local/</span><br><span class=\"line\"></span><br><span class=\"line\">cd /usr/local/apache-flume-1.7.0-bin</span><br></pre></td></tr></table></figure>\n<h2 id=\"配置\"><a href=\"#配置\" class=\"headerlink\" title=\"配置\"></a>配置</h2><h3 id=\"client使用exec-source\"><a href=\"#client使用exec-source\" class=\"headerlink\" title=\"client使用exec source\"></a>client使用exec source</h3><p>vim conf/client.conf<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># Name the components on this agent</span><br><span class=\"line\">client.sinks = k1</span><br><span class=\"line\">client.sources = r1</span><br><span class=\"line\">client.channels = c1</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"># Use a channel which buffers events in memory</span><br><span class=\"line\">client.channels.c1.type = memory</span><br><span class=\"line\">client.channels.c1.capacity = 1000</span><br><span class=\"line\">client.channels.c1.transactionCapacity = 100</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">client.sources.r1.type = TAILDIR</span><br><span class=\"line\">client.sources.r1.channels = c1</span><br><span class=\"line\">client.sources.r1.positionFile = /data/www/flume/taildir_position.json</span><br><span class=\"line\">client.sources.r1.filegroups = f1</span><br><span class=\"line\">client.sources.r1.filegroups.f1 = /data/www/htdocs/v3.maozhuar.com/storage/maozhua/production/weight/log-.*</span><br><span class=\"line\">client.sources.r1.headers.f1.headerKey1 = value1</span><br><span class=\"line\">client.sources.r1.fileHeader = true</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"># Describe the sink</span><br><span class=\"line\">client.sinks.k1.type = avro</span><br><span class=\"line\">client.sinks.k1.channel = c1</span><br><span class=\"line\">client.sinks.k1.hostname = hadoop.maozhuar.com</span><br><span class=\"line\">client.sinks.k1.port = 4100</span><br></pre></td></tr></table></figure></p>\n<p>运行<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">nohup /usr/local/apache-flume-1.7.0-bin/bin/flume-ng agent --conf conf --conf-file /usr/local/apache-flume-1.7.0-bin/conf/client.conf --name client &gt; 2 &gt;&amp;1 &amp;</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"接收端使用\"><a href=\"#接收端使用\" class=\"headerlink\" title=\"接收端使用\"></a>接收端使用</h3><p>使用hdfs，得先把hadoop中得jar包复制到flume/lib/中<br>hadoop/share/hadoop/common/<em>.jar<br>hadoop/share/hadoop/common/lib/</em>.jar<br>hadoop/share/hadoop/hdfs/hadoop-hdfs-*.jar</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># Name the components on this agent</span><br><span class=\"line\">a1.sinks = k1</span><br><span class=\"line\">a1.sources = r1</span><br><span class=\"line\">a1.channels = c1</span><br><span class=\"line\"></span><br><span class=\"line\">a1.sources.r1.type = avro</span><br><span class=\"line\">a1.sources.r1.channels = c1</span><br><span class=\"line\">a1.sources.r1.bind = 0.0.0.0</span><br><span class=\"line\">a1.sources.r1.port = 4141</span><br><span class=\"line\"></span><br><span class=\"line\">a1.sinks.k1.type = hdfs</span><br><span class=\"line\">a1.sinks.k1.channel = c1</span><br><span class=\"line\">a1.sinks.k1.hdfs.path = hdfs://hadoop.maozhuar.com:9000/flume/events/%y-%m-%d/</span><br><span class=\"line\">a1.sinks.k1.hdfs.useLocalTimeStamp = true</span><br><span class=\"line\"></span><br><span class=\"line\">a1.sinks.k1.hdfs.filePrefix=maozhua</span><br><span class=\"line\">a1.sinks.k1.hdfs.minBlockReplicas=1</span><br><span class=\"line\">a1.sinks.k1.hdfs.fileType=DataStream</span><br><span class=\"line\">a1.sinks.k1.hdfs.writeFormat=Text</span><br><span class=\"line\">a1.sinks.k1.hdfs.rollInterval=600</span><br><span class=\"line\">a1.sinks.k1.hdfs.rollSize=0</span><br><span class=\"line\">a1.sinks.k1.hdfs.rollCount=0</span><br><span class=\"line\">a1.sinks.k1.hdfs.idleTimeout=0</span><br><span class=\"line\"></span><br><span class=\"line\">a1.channels.c1.type = memory</span><br><span class=\"line\">a1.channels.c1.capacity = 1000</span><br><span class=\"line\">a1.channels.c1.transactionCapacity = 100</span><br></pre></td></tr></table></figure>\n<p>运行<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">bin/flume-ng agent --conf conf --conf-file conf/.conf --name a1 -Dflume.root.logger=INFO,console</span><br></pre></td></tr></table></figure></p>\n<h4 id=\"问题：hdfs文件乱码\"><a href=\"#问题：hdfs文件乱码\" class=\"headerlink\" title=\"问题：hdfs文件乱码\"></a>问题：hdfs文件乱码</h4><p>解决：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">a1.sinks.k1.hdfs.fileType=DataStream</span><br></pre></td></tr></table></figure></p>\n<h4 id=\"问题：Expected-timestamp-in-the-Flume-event-headers-but-it-was-null\"><a href=\"#问题：Expected-timestamp-in-the-Flume-event-headers-but-it-was-null\" class=\"headerlink\" title=\"问题：Expected timestamp in the Flume event headers, but it was null\"></a>问题：Expected timestamp in the Flume event headers, but it was null</h4><p>解决1，每行开头有时间戳<br>解决2<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">a1.sinks.k1.hdfs.useLocalTimeStamp = true</span><br></pre></td></tr></table></figure></p>\n<h4 id=\"问题：没秒钟产生一个hdfs文件\"><a href=\"#问题：没秒钟产生一个hdfs文件\" class=\"headerlink\" title=\"问题：没秒钟产生一个hdfs文件\"></a>问题：没秒钟产生一个hdfs文件</h4><p>解决<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">a1.sinks.k1.type = hdfs</span><br><span class=\"line\">a1.sinks.k1.channel = c1</span><br><span class=\"line\">a1.sinks.k1.hdfs.path = hdfs://hadoop.maozhuar.com:9000/flume/events/%y-%m-%d/</span><br><span class=\"line\">a1.sinks.k1.hdfs.useLocalTimeStamp = true</span><br><span class=\"line\"></span><br><span class=\"line\">a1.sinks.k1.hdfs.filePrefix=maozhua</span><br><span class=\"line\">a1.sinks.k1.hdfs.minBlockReplicas=1</span><br><span class=\"line\">a1.sinks.k1.hdfs.fileType=DataStream</span><br><span class=\"line\">a1.sinks.k1.hdfs.writeFormat=Text</span><br><span class=\"line\">a1.sinks.k1.hdfs.rollInterval=600</span><br><span class=\"line\">a1.sinks.k1.hdfs.rollSize=0</span><br><span class=\"line\">a1.sinks.k1.hdfs.rollCount=0</span><br><span class=\"line\">a1.sinks.k1.hdfs.idleTimeout=0</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h1><p><a href=\"http://blog.csdn.net/simonchi/article/details/43231891\" target=\"_blank\" rel=\"noopener\">【Flume】【源码分析】flume中sink到hdfs，文件系统频繁产生文件，文件滚动配置不起作用？</a></p>"},{"title":"Git","date":"2017-05-22T08:55:00.000Z","_content":"\nGit\n\n<!-- MORE -->\n# 彻底删除某文件及历史\ngit filter-branch --force --index-filter 'git rm --cached --ignore-unmatch \"doc/base.sql\" ' --prune-empty --tag-name-filter cat -- --all\ngit push origin --force --all\ngit push origin --force --tags\ngit for-each-ref --format='delete %(refname)' refs/original | git update-ref --stdin\ngit reflog expire --expire=now --all\ngit gc --prune=now\ngit count-objects -v\n","source":"_posts/Git.md","raw":"---\ntitle: Git\ndate: 2017-05-22T16:55:00.000Z\ntags:\n  - Git\n  - 笔记\n---\n\nGit\n\n<!-- MORE -->\n# 彻底删除某文件及历史\ngit filter-branch --force --index-filter 'git rm --cached --ignore-unmatch \"doc/base.sql\" ' --prune-empty --tag-name-filter cat -- --all\ngit push origin --force --all\ngit push origin --force --tags\ngit for-each-ref --format='delete %(refname)' refs/original | git update-ref --stdin\ngit reflog expire --expire=now --all\ngit gc --prune=now\ngit count-objects -v\n","slug":"Git","published":1,"updated":"2017-07-07T09:41:03.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjin2pu190002nrfylnedr2zf","content":"<p>Git</p>\n<a id=\"more\"></a>\n<h1 id=\"彻底删除某文件及历史\"><a href=\"#彻底删除某文件及历史\" class=\"headerlink\" title=\"彻底删除某文件及历史\"></a>彻底删除某文件及历史</h1><p>git filter-branch –force –index-filter ‘git rm –cached –ignore-unmatch “doc/base.sql” ‘ –prune-empty –tag-name-filter cat – –all<br>git push origin –force –all<br>git push origin –force –tags<br>git for-each-ref –format=’delete %(refname)’ refs/original | git update-ref –stdin<br>git reflog expire –expire=now –all<br>git gc –prune=now<br>git count-objects -v</p>\n","site":{"data":{"head":"\n<script type=\"text/javascript\" id=\"hexo.headll\">\n(function () {\n  window.addEventListener(\"load\", function () {   //添加load事件\n    $(\"body\").click(function (e) {\n        var a = new Array(\"富强\", \"民主\", \"文明\", \"和谐\", \"自由\", \"平等\", \"公正\", \"法治\", \"爱国\", \"敬业\", \"诚信\", \"友善\");\n        var a_idx=Math.floor(Math.random()*a.length);\n        var $i = $(\"<span/>\").text(a[a_idx]);\n        var x = e.pageX,y = e.pageY;\n        $i.css({\n            \"z-index\": 99999,\n            \"top\": y - 20,\n            \"left\": x,\n            \"position\": \"absolute\",\n            \"font-weight\": \"bold\",\n            \"color\": \"#ff6651\"\n        });\n        $(\"body\").append($i);\n        $i.animate({\n            \"top\": y - 180,\n            \"opacity\": 0\n        },\n        1500,\n        function () {\n            $i.remove();\n        });\n    });\n  }, false);\n})();\n</script>\n\n"}},"excerpt":"<p>Git</p>","more":"<h1 id=\"彻底删除某文件及历史\"><a href=\"#彻底删除某文件及历史\" class=\"headerlink\" title=\"彻底删除某文件及历史\"></a>彻底删除某文件及历史</h1><p>git filter-branch –force –index-filter ‘git rm –cached –ignore-unmatch “doc/base.sql” ‘ –prune-empty –tag-name-filter cat – –all<br>git push origin –force –all<br>git push origin –force –tags<br>git for-each-ref –format=’delete %(refname)’ refs/original | git update-ref –stdin<br>git reflog expire –expire=now –all<br>git gc –prune=now<br>git count-objects -v</p>"},{"title":"Git托管","date":"2017-04-10T10:04:00.000Z","_content":"\n一些使用过的Git托管平台\n\n\n<!-- MORE -->\n\n# [GitHub](https://github.com)\n- 国外\n- 最著名的\n- 每个帐号都对外的page，可以当博客使用。\n- 私有项目收费\n\n# [Bitbucket](https://bitbucket.org)\n- 国外\n- 免费私有项目\n- 国内速度可能有些慢\n\n# [Coding](https://coding.net)\n- 国内\n- 速度很快\n- 管理界面舒服，功能强大\n- pull项目有大小限制，根据帐号等级不同限制\n- 团队功能目前免费\n- 私有项目免费\n","source":"_posts/Git托管.md","raw":"---\ntitle: Git托管\ndate: 2017-04-10 18:04:00\ntags:\n - Git\n\ncategories:\n - Git\n\n---\n\n一些使用过的Git托管平台\n\n\n<!-- MORE -->\n\n# [GitHub](https://github.com)\n- 国外\n- 最著名的\n- 每个帐号都对外的page，可以当博客使用。\n- 私有项目收费\n\n# [Bitbucket](https://bitbucket.org)\n- 国外\n- 免费私有项目\n- 国内速度可能有些慢\n\n# [Coding](https://coding.net)\n- 国内\n- 速度很快\n- 管理界面舒服，功能强大\n- pull项目有大小限制，根据帐号等级不同限制\n- 团队功能目前免费\n- 私有项目免费\n","slug":"Git托管","published":1,"updated":"2017-05-19T17:05:37.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjin2pu1d0006nrfykectwhb4","content":"<p>一些使用过的Git托管平台</p>\n<a id=\"more\"></a>\n<h1 id=\"GitHub\"><a href=\"#GitHub\" class=\"headerlink\" title=\"GitHub\"></a><a href=\"https://github.com\" target=\"_blank\" rel=\"noopener\">GitHub</a></h1><ul>\n<li>国外</li>\n<li>最著名的</li>\n<li>每个帐号都对外的page，可以当博客使用。</li>\n<li>私有项目收费</li>\n</ul>\n<h1 id=\"Bitbucket\"><a href=\"#Bitbucket\" class=\"headerlink\" title=\"Bitbucket\"></a><a href=\"https://bitbucket.org\" target=\"_blank\" rel=\"noopener\">Bitbucket</a></h1><ul>\n<li>国外</li>\n<li>免费私有项目</li>\n<li>国内速度可能有些慢</li>\n</ul>\n<h1 id=\"Coding\"><a href=\"#Coding\" class=\"headerlink\" title=\"Coding\"></a><a href=\"https://coding.net\" target=\"_blank\" rel=\"noopener\">Coding</a></h1><ul>\n<li>国内</li>\n<li>速度很快</li>\n<li>管理界面舒服，功能强大</li>\n<li>pull项目有大小限制，根据帐号等级不同限制</li>\n<li>团队功能目前免费</li>\n<li>私有项目免费</li>\n</ul>\n","site":{"data":{"head":"\n<script type=\"text/javascript\" id=\"hexo.headll\">\n(function () {\n  window.addEventListener(\"load\", function () {   //添加load事件\n    $(\"body\").click(function (e) {\n        var a = new Array(\"富强\", \"民主\", \"文明\", \"和谐\", \"自由\", \"平等\", \"公正\", \"法治\", \"爱国\", \"敬业\", \"诚信\", \"友善\");\n        var a_idx=Math.floor(Math.random()*a.length);\n        var $i = $(\"<span/>\").text(a[a_idx]);\n        var x = e.pageX,y = e.pageY;\n        $i.css({\n            \"z-index\": 99999,\n            \"top\": y - 20,\n            \"left\": x,\n            \"position\": \"absolute\",\n            \"font-weight\": \"bold\",\n            \"color\": \"#ff6651\"\n        });\n        $(\"body\").append($i);\n        $i.animate({\n            \"top\": y - 180,\n            \"opacity\": 0\n        },\n        1500,\n        function () {\n            $i.remove();\n        });\n    });\n  }, false);\n})();\n</script>\n\n"}},"excerpt":"<p>一些使用过的Git托管平台</p>","more":"<h1 id=\"GitHub\"><a href=\"#GitHub\" class=\"headerlink\" title=\"GitHub\"></a><a href=\"https://github.com\" target=\"_blank\" rel=\"noopener\">GitHub</a></h1><ul>\n<li>国外</li>\n<li>最著名的</li>\n<li>每个帐号都对外的page，可以当博客使用。</li>\n<li>私有项目收费</li>\n</ul>\n<h1 id=\"Bitbucket\"><a href=\"#Bitbucket\" class=\"headerlink\" title=\"Bitbucket\"></a><a href=\"https://bitbucket.org\" target=\"_blank\" rel=\"noopener\">Bitbucket</a></h1><ul>\n<li>国外</li>\n<li>免费私有项目</li>\n<li>国内速度可能有些慢</li>\n</ul>\n<h1 id=\"Coding\"><a href=\"#Coding\" class=\"headerlink\" title=\"Coding\"></a><a href=\"https://coding.net\" target=\"_blank\" rel=\"noopener\">Coding</a></h1><ul>\n<li>国内</li>\n<li>速度很快</li>\n<li>管理界面舒服，功能强大</li>\n<li>pull项目有大小限制，根据帐号等级不同限制</li>\n<li>团队功能目前免费</li>\n<li>私有项目免费</li>\n</ul>"},{"title":"Go小记-初识","date":"2018-04-04T09:00:00.000Z","_content":"整理的一些小记\n\n<!-- MORE -->\n## [dep](https://github.com/golang/dep)\n```\nbrew install dep\n```\n\n## 情景\n- gitlab\n\n## Go tools\n\n### Lint\n语法检测与建议\n\n#### 安装\n```bash\ngo get -u golang.org/x/lint/golint\n```\n\n#### 无梯子的安装\n/tools/init.sh\n```bash\n#!/usr/bin/env bash\n\n\n## 安装lint，其他需要翻墙的，大多也能这么安装\nmkdir -p $GOPATH/src/golang.org/x\nif [ ! -d $GOPATH/src/golang.org/x/tools ]; then\n\tcd $GOPATH/src/golang.org/x\n\tgit clone https://github.com/golang/tools.git\n\tgit clone https://github.com/golang/lint.git\n\n\tgo get golang.org/x/lint/golint\nfi\n\n```\n\n#### 使用\n```bash\ngolint -set_exit_status $(go list ./... | grep -v /vendor/)\n```\n\n### Unit test  \n单元测试\n#### 使用\n每个目录都执行 go test 方法\n```bash\ngo test -short $(go list ./... | grep -v /vendor/)\n```\n\n### Code coverage\n这个可以计算单元测试覆盖率，添加已下脚本文件\n\n#### 使用\n/tools/coverage.sh\n```bash\n#!/usr/bin/env bash\nPKG_LIST=$(go list ./... | grep -v /vendor/) \nfor package in ${PKG_LIST}; do\n    go test -covermode=count -coverprofile \"cover/${package##*/}.cov\" \"$package\" ;\ndone\ntail -q -n +2 cover/*.cov >> cover/coverage.cov\ngo tool cover -func=cover/coverage.cov\n```\n\n#### 查看\n```\ngo tool cover -html=cover/coverage.cov -o coverage.html\n```\n\n### 写个makefile，来集中调用这些工具 \n#### 项目下创建Makefile文件    \n一些语法需要注意下：\n- 行首的缩进必须是tab\n\n\n```makefile\nPROJECT_NAME := \"maozhuaV4\"\nPKG := \"$(PROJECT_NAME)\"\nPKG_LIST := $(shell go list ${PKG}/... | grep -v /vendor/)\nGO_FILES := $(shell find . -name '*.go' | grep -v /vendor/ | grep -v _test.go)\nPATH  := $(PATH):${GOPATH}/bin\nSHELL := env PATH=$(PATH) /bin/bash\n\n.PHONY: all dep build clean test coverage coverhtml lint\n\nall: build\n\nlint: ## Lint the files\n\t@golint -set_exit_status ${PKG_LIST}\n\ntest: ## Run unittests\n\t@go test -short ${PKG_LIST}\n\nrace: dep ## Run data race detector\n\t@go test -race -short ${PKG_LIST}\n\nmsan: dep ## Run memory sanitizer\n\t@go test -msan -short ${PKG_LIST}\n\ncoverage: ## Generate global code coverage report\n\t./tools/coverage.sh;\n\ncoverhtml: ## Generate global code coverage report in HTML\n\t./tools/coverage.sh html;\n\ndep: ## Get the dependencies\n    ./tools/init.sh;\n    ## @go get -v -d ./...\n\nbuild: dep ## Build the binary file\n\t@go build -i -v $(PKG)\n\nclean: ## Remove previous build\n\t@rm -f $(PROJECT_NAME)\n\nhelp: ## Display this help screen\n\t@grep -h -E '^[a-zA-Z_-]+:.*?## .*$$' $(MAKEFILE_LIST) | awk 'BEGIN {FS = \":.*?## \"}; {printf \"\\033[36m%-30s\\033[0m %s\\n\", $$1, $$2}'\n    \n```\n\n#### 使用\n``` bash\nmake help\nmake lint\nmake dep\nmake coverage\n## ...\n\n```\n\n## gitlab的CI/CD  \n整理好了这些工具，那怎么自动调用呢？ 如gitlab有pipelines、drone等。  \n这里使用的是gitlab。\n\n### 创建 .gitlab-ci.yml \n[官方文档](https://docs.gitlab.com/ee/ci/yaml/README.html)\n[变量](https://docs.gitlab.com/ee/ci/variables/README.html)\n\n```YAML\nimage: golang:1.10\ncache:\n  paths:\n    - /apt-cache\n    - /go/src/github.com\n    - /go/src/golang.org\n    - /go/src/google.golang.org\n    - /go/src/gopkg.in\nstages:\n  - test\n  - build\nbefore_script:\n  - mkdir -p /go/src/$CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME /go/src/_/builds/$CI_PROJECT_NAMESPACE\n  - cp -r $CI_PROJECT_DIR /go/src/$CI_PROJECT_NAME\n  - ln -s /go/src/$CI_PROJECT_NAME /go/src/_/builds/$CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME\n  - make dep\nunit_tests:\n  stage: test\n  script:\n    - make test\nrace_detector:\n  stage: test\n  script:\n    - make race\n#memory_sanitizer:\n#  stage: test\n#  script:\n#    - make msan\ncode_coverage:\n  stage: test\n  script:\n    - make coverage\ncode_coverage_report:\n  stage: test\n  script:\n    - make coverhtml\n  only:\n  - master\nlint_code:\n  stage: test\n  script:\n    - make lint\nbuild:\n  stage: build\n  script:\n    - make\n```\n\n\n### [安装Runner](https://docs.gitlab.com/runner/)  \n上述只是任务，具体在哪跑，得另行指定\n#### k8s  \n#### 手动安装  \n登录gitlab服务器，执行\n```bash\nsudo wget -O /usr/local/bin/gitlab-runner https://gitlab-runner-downloads.s3.amazonaws.com/latest/binaries/gitlab-runner-linux-amd64\n\n\n```\n\n\n### 镜像build push  \n#### docker in docker  \n上面的runner用的executor用的是docker，那么问题来了，要怎么把生成好的镜像推送到镜像仓库呢？\n- 在容器中再安装docker\n- run的时候传入： `docker run -v /var/run/docker.sock:/var/run/docker.sock -v $(which docker):$(which docker) -ti google/golang /bin/bash`\n\ngitlab-runner提供了[方法](https://docs.gitlab.com/runner/executors/docker.html#use-docker-in-docker-with-privileged-mode)\n\n1、找到配置文件\n```bash\ngitlab-runner list\n```\n\n/etc/gitlab-runner/config.toml 中修改\n```\n[[runners]]\n  executor = \"docker\"\n  [runners.docker]\n    privileged = true\n```\n\n2、建个镜像，把go环境也搭好，这里镜像就叫mygolang了\nDockerfile\n```yaml \nFROM docker\nMAINTAINER lepoch <ll-xzx@qq.com>\n\n#使用 ali 仓库地址\nRUN echo -e \"http://mirrors.aliyun.com/alpine/latest-stable/main\\n\\\nhttp://mirrors.aliyun.com/alpine/latest-stable/community\" > /etc/apk/repositories\n\n\nRUN apk update && apk add curl ca-certificates wget bash go1.10 git make && \\\n    ln -sf /usr/share/zoneinfo/Asia/Shanghai /etc/localtime && \\\n    echo \"Asia/Shanghai\" > /etc/timezone && \\\n    rm -rf /root/.cache\n\nRUN set -eux; \\\n    apk update; \\\n\tapk add --no-cache --virtual .build-deps \\\n\t\tbash \\\n\t\tgcc \\\n\t\tmusl-dev \\\n\t\topenssl \\\n\t; \\\n\texport \\\n# set GOROOT_BOOTSTRAP such that we can actually build Go\n\t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \\\n# ... and set \"cross-building\" related vars to the installed system's values so that we create a build targeting the proper arch\n# (for example, if our build host is GOARCH=amd64, but our build env/image is GOARCH=386, our build needs GOARCH=386)\n\t\tGOOS=\"$(go env GOOS)\" \\\n\t\tGOARCH=\"$(go env GOARCH)\" \\\n\t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \\\n\t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \\\n        CGO_ENABLED=\"0\" \\\n\t; \\\n\texport PATH=\"/usr/local/go/bin:$PATH\"; \\\n\tgo version\n\nENV GOPATH /go\nENV PATH $GOPATH/bin:/usr/local/go/bin:$PATH\n\nENV CGO_ENABLED \"0\"\n\nRUN mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\"\nWORKDIR $GOPATH\n```\n\n3、修改yaml文件\n```yaml\nimage: mygolang\n# Use the OverlayFS driver for improved performance.\nvariables:\n  DOCKER_DRIVER: overlay\n\nservices:\n  - docker:dind\n```\n4、build 和 push\n\n```yaml\nbuild:\n  stage: build\n  script:\n    - docker info\n    - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN registry.maozhuar.com\n    - CGO_ENABLED=0 GOOS=linux go build -a -installsuffix cgo -o main $CI_PROJECT_NAME/\n    - docker build -t registry.maozhuar.com/backenddeveloper/maozhuav4:$CI_COMMIT_REF_NAME .\n    - docker push registry.maozhuar.com/backenddeveloper/maozhuav4:$CI_COMMIT_REF_NAME\n```\n\n### 部署 \n以单台机器来说，用ssh远程执行其脚本即可。  \n\n在要部署的机器上，执行\n```bash\nuseradd --comment 'GitLab Runner' --create-home gitlab-runner --shell /bin/bash\ngroupadd docker\nusermod -aG docker gitlab-runner\nsystemctl restart docker\n```\n\n#### ssh使用秘钥 [https://docs.gitlab.com/ee/ci/ssh_keys/README.html]\n- 创建秘钥对\n- 把私钥放入gitlab CI/CD的 secret key\n- 把ssh-keyscan的结果也放入 secret key\n- \n\n\n\n### 相关网址\n- [Go tools & GitLab — how to do Continuous Integration like a boss](https://medium.com/pantomath/go-tools-gitlab-how-to-do-continuous-integration-like-a-boss-941a3a9ad0b6)\n- [Runner](https://docs.gitlab.com/runner/)\n","source":"_posts/Go小记.md","raw":"---\ntitle: Go小记-初识\ndate: 2018-04-04 17:00:00\ntags:\n - Go\n - 笔记\n\ncategories:\n - Go\n\n---\n整理的一些小记\n\n<!-- MORE -->\n## [dep](https://github.com/golang/dep)\n```\nbrew install dep\n```\n\n## 情景\n- gitlab\n\n## Go tools\n\n### Lint\n语法检测与建议\n\n#### 安装\n```bash\ngo get -u golang.org/x/lint/golint\n```\n\n#### 无梯子的安装\n/tools/init.sh\n```bash\n#!/usr/bin/env bash\n\n\n## 安装lint，其他需要翻墙的，大多也能这么安装\nmkdir -p $GOPATH/src/golang.org/x\nif [ ! -d $GOPATH/src/golang.org/x/tools ]; then\n\tcd $GOPATH/src/golang.org/x\n\tgit clone https://github.com/golang/tools.git\n\tgit clone https://github.com/golang/lint.git\n\n\tgo get golang.org/x/lint/golint\nfi\n\n```\n\n#### 使用\n```bash\ngolint -set_exit_status $(go list ./... | grep -v /vendor/)\n```\n\n### Unit test  \n单元测试\n#### 使用\n每个目录都执行 go test 方法\n```bash\ngo test -short $(go list ./... | grep -v /vendor/)\n```\n\n### Code coverage\n这个可以计算单元测试覆盖率，添加已下脚本文件\n\n#### 使用\n/tools/coverage.sh\n```bash\n#!/usr/bin/env bash\nPKG_LIST=$(go list ./... | grep -v /vendor/) \nfor package in ${PKG_LIST}; do\n    go test -covermode=count -coverprofile \"cover/${package##*/}.cov\" \"$package\" ;\ndone\ntail -q -n +2 cover/*.cov >> cover/coverage.cov\ngo tool cover -func=cover/coverage.cov\n```\n\n#### 查看\n```\ngo tool cover -html=cover/coverage.cov -o coverage.html\n```\n\n### 写个makefile，来集中调用这些工具 \n#### 项目下创建Makefile文件    \n一些语法需要注意下：\n- 行首的缩进必须是tab\n\n\n```makefile\nPROJECT_NAME := \"maozhuaV4\"\nPKG := \"$(PROJECT_NAME)\"\nPKG_LIST := $(shell go list ${PKG}/... | grep -v /vendor/)\nGO_FILES := $(shell find . -name '*.go' | grep -v /vendor/ | grep -v _test.go)\nPATH  := $(PATH):${GOPATH}/bin\nSHELL := env PATH=$(PATH) /bin/bash\n\n.PHONY: all dep build clean test coverage coverhtml lint\n\nall: build\n\nlint: ## Lint the files\n\t@golint -set_exit_status ${PKG_LIST}\n\ntest: ## Run unittests\n\t@go test -short ${PKG_LIST}\n\nrace: dep ## Run data race detector\n\t@go test -race -short ${PKG_LIST}\n\nmsan: dep ## Run memory sanitizer\n\t@go test -msan -short ${PKG_LIST}\n\ncoverage: ## Generate global code coverage report\n\t./tools/coverage.sh;\n\ncoverhtml: ## Generate global code coverage report in HTML\n\t./tools/coverage.sh html;\n\ndep: ## Get the dependencies\n    ./tools/init.sh;\n    ## @go get -v -d ./...\n\nbuild: dep ## Build the binary file\n\t@go build -i -v $(PKG)\n\nclean: ## Remove previous build\n\t@rm -f $(PROJECT_NAME)\n\nhelp: ## Display this help screen\n\t@grep -h -E '^[a-zA-Z_-]+:.*?## .*$$' $(MAKEFILE_LIST) | awk 'BEGIN {FS = \":.*?## \"}; {printf \"\\033[36m%-30s\\033[0m %s\\n\", $$1, $$2}'\n    \n```\n\n#### 使用\n``` bash\nmake help\nmake lint\nmake dep\nmake coverage\n## ...\n\n```\n\n## gitlab的CI/CD  \n整理好了这些工具，那怎么自动调用呢？ 如gitlab有pipelines、drone等。  \n这里使用的是gitlab。\n\n### 创建 .gitlab-ci.yml \n[官方文档](https://docs.gitlab.com/ee/ci/yaml/README.html)\n[变量](https://docs.gitlab.com/ee/ci/variables/README.html)\n\n```YAML\nimage: golang:1.10\ncache:\n  paths:\n    - /apt-cache\n    - /go/src/github.com\n    - /go/src/golang.org\n    - /go/src/google.golang.org\n    - /go/src/gopkg.in\nstages:\n  - test\n  - build\nbefore_script:\n  - mkdir -p /go/src/$CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME /go/src/_/builds/$CI_PROJECT_NAMESPACE\n  - cp -r $CI_PROJECT_DIR /go/src/$CI_PROJECT_NAME\n  - ln -s /go/src/$CI_PROJECT_NAME /go/src/_/builds/$CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME\n  - make dep\nunit_tests:\n  stage: test\n  script:\n    - make test\nrace_detector:\n  stage: test\n  script:\n    - make race\n#memory_sanitizer:\n#  stage: test\n#  script:\n#    - make msan\ncode_coverage:\n  stage: test\n  script:\n    - make coverage\ncode_coverage_report:\n  stage: test\n  script:\n    - make coverhtml\n  only:\n  - master\nlint_code:\n  stage: test\n  script:\n    - make lint\nbuild:\n  stage: build\n  script:\n    - make\n```\n\n\n### [安装Runner](https://docs.gitlab.com/runner/)  \n上述只是任务，具体在哪跑，得另行指定\n#### k8s  \n#### 手动安装  \n登录gitlab服务器，执行\n```bash\nsudo wget -O /usr/local/bin/gitlab-runner https://gitlab-runner-downloads.s3.amazonaws.com/latest/binaries/gitlab-runner-linux-amd64\n\n\n```\n\n\n### 镜像build push  \n#### docker in docker  \n上面的runner用的executor用的是docker，那么问题来了，要怎么把生成好的镜像推送到镜像仓库呢？\n- 在容器中再安装docker\n- run的时候传入： `docker run -v /var/run/docker.sock:/var/run/docker.sock -v $(which docker):$(which docker) -ti google/golang /bin/bash`\n\ngitlab-runner提供了[方法](https://docs.gitlab.com/runner/executors/docker.html#use-docker-in-docker-with-privileged-mode)\n\n1、找到配置文件\n```bash\ngitlab-runner list\n```\n\n/etc/gitlab-runner/config.toml 中修改\n```\n[[runners]]\n  executor = \"docker\"\n  [runners.docker]\n    privileged = true\n```\n\n2、建个镜像，把go环境也搭好，这里镜像就叫mygolang了\nDockerfile\n```yaml \nFROM docker\nMAINTAINER lepoch <ll-xzx@qq.com>\n\n#使用 ali 仓库地址\nRUN echo -e \"http://mirrors.aliyun.com/alpine/latest-stable/main\\n\\\nhttp://mirrors.aliyun.com/alpine/latest-stable/community\" > /etc/apk/repositories\n\n\nRUN apk update && apk add curl ca-certificates wget bash go1.10 git make && \\\n    ln -sf /usr/share/zoneinfo/Asia/Shanghai /etc/localtime && \\\n    echo \"Asia/Shanghai\" > /etc/timezone && \\\n    rm -rf /root/.cache\n\nRUN set -eux; \\\n    apk update; \\\n\tapk add --no-cache --virtual .build-deps \\\n\t\tbash \\\n\t\tgcc \\\n\t\tmusl-dev \\\n\t\topenssl \\\n\t; \\\n\texport \\\n# set GOROOT_BOOTSTRAP such that we can actually build Go\n\t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \\\n# ... and set \"cross-building\" related vars to the installed system's values so that we create a build targeting the proper arch\n# (for example, if our build host is GOARCH=amd64, but our build env/image is GOARCH=386, our build needs GOARCH=386)\n\t\tGOOS=\"$(go env GOOS)\" \\\n\t\tGOARCH=\"$(go env GOARCH)\" \\\n\t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \\\n\t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \\\n        CGO_ENABLED=\"0\" \\\n\t; \\\n\texport PATH=\"/usr/local/go/bin:$PATH\"; \\\n\tgo version\n\nENV GOPATH /go\nENV PATH $GOPATH/bin:/usr/local/go/bin:$PATH\n\nENV CGO_ENABLED \"0\"\n\nRUN mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\"\nWORKDIR $GOPATH\n```\n\n3、修改yaml文件\n```yaml\nimage: mygolang\n# Use the OverlayFS driver for improved performance.\nvariables:\n  DOCKER_DRIVER: overlay\n\nservices:\n  - docker:dind\n```\n4、build 和 push\n\n```yaml\nbuild:\n  stage: build\n  script:\n    - docker info\n    - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN registry.maozhuar.com\n    - CGO_ENABLED=0 GOOS=linux go build -a -installsuffix cgo -o main $CI_PROJECT_NAME/\n    - docker build -t registry.maozhuar.com/backenddeveloper/maozhuav4:$CI_COMMIT_REF_NAME .\n    - docker push registry.maozhuar.com/backenddeveloper/maozhuav4:$CI_COMMIT_REF_NAME\n```\n\n### 部署 \n以单台机器来说，用ssh远程执行其脚本即可。  \n\n在要部署的机器上，执行\n```bash\nuseradd --comment 'GitLab Runner' --create-home gitlab-runner --shell /bin/bash\ngroupadd docker\nusermod -aG docker gitlab-runner\nsystemctl restart docker\n```\n\n#### ssh使用秘钥 [https://docs.gitlab.com/ee/ci/ssh_keys/README.html]\n- 创建秘钥对\n- 把私钥放入gitlab CI/CD的 secret key\n- 把ssh-keyscan的结果也放入 secret key\n- \n\n\n\n### 相关网址\n- [Go tools & GitLab — how to do Continuous Integration like a boss](https://medium.com/pantomath/go-tools-gitlab-how-to-do-continuous-integration-like-a-boss-941a3a9ad0b6)\n- [Runner](https://docs.gitlab.com/runner/)\n","slug":"Go小记","published":1,"updated":"2018-04-04T17:16:04.384Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjin2pu1f0007nrfyyblyvoid","content":"<p>整理的一些小记</p>\n<a id=\"more\"></a>\n<h2 id=\"dep\"><a href=\"#dep\" class=\"headerlink\" title=\"dep\"></a><a href=\"https://github.com/golang/dep\" target=\"_blank\" rel=\"noopener\">dep</a></h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">brew install dep</span><br></pre></td></tr></table></figure>\n<h2 id=\"情景\"><a href=\"#情景\" class=\"headerlink\" title=\"情景\"></a>情景</h2><ul>\n<li>gitlab</li>\n</ul>\n<h2 id=\"Go-tools\"><a href=\"#Go-tools\" class=\"headerlink\" title=\"Go tools\"></a>Go tools</h2><h3 id=\"Lint\"><a href=\"#Lint\" class=\"headerlink\" title=\"Lint\"></a>Lint</h3><p>语法检测与建议</p>\n<h4 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">go get -u golang.org/x/lint/golint</span><br></pre></td></tr></table></figure>\n<h4 id=\"无梯子的安装\"><a href=\"#无梯子的安装\" class=\"headerlink\" title=\"无梯子的安装\"></a>无梯子的安装</h4><p>/tools/init.sh<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#!/usr/bin/env bash</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">## 安装lint，其他需要翻墙的，大多也能这么安装</span></span><br><span class=\"line\">mkdir -p <span class=\"variable\">$GOPATH</span>/src/golang.org/x</span><br><span class=\"line\"><span class=\"keyword\">if</span> [ ! -d <span class=\"variable\">$GOPATH</span>/src/golang.org/x/tools ]; <span class=\"keyword\">then</span></span><br><span class=\"line\">\t<span class=\"built_in\">cd</span> <span class=\"variable\">$GOPATH</span>/src/golang.org/x</span><br><span class=\"line\">\tgit <span class=\"built_in\">clone</span> https://github.com/golang/tools.git</span><br><span class=\"line\">\tgit <span class=\"built_in\">clone</span> https://github.com/golang/lint.git</span><br><span class=\"line\"></span><br><span class=\"line\">\tgo get golang.org/x/lint/golint</span><br><span class=\"line\"><span class=\"keyword\">fi</span></span><br></pre></td></tr></table></figure></p>\n<h4 id=\"使用\"><a href=\"#使用\" class=\"headerlink\" title=\"使用\"></a>使用</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">golint -set_exit_status $(go list ./... | grep -v /vendor/)</span><br></pre></td></tr></table></figure>\n<h3 id=\"Unit-test\"><a href=\"#Unit-test\" class=\"headerlink\" title=\"Unit test\"></a>Unit test</h3><p>单元测试</p>\n<h4 id=\"使用-1\"><a href=\"#使用-1\" class=\"headerlink\" title=\"使用\"></a>使用</h4><p>每个目录都执行 go test 方法<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">go <span class=\"built_in\">test</span> -short $(go list ./... | grep -v /vendor/)</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"Code-coverage\"><a href=\"#Code-coverage\" class=\"headerlink\" title=\"Code coverage\"></a>Code coverage</h3><p>这个可以计算单元测试覆盖率，添加已下脚本文件</p>\n<h4 id=\"使用-2\"><a href=\"#使用-2\" class=\"headerlink\" title=\"使用\"></a>使用</h4><p>/tools/coverage.sh<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#!/usr/bin/env bash</span></span><br><span class=\"line\">PKG_LIST=$(go list ./... | grep -v /vendor/) </span><br><span class=\"line\"><span class=\"keyword\">for</span> package <span class=\"keyword\">in</span> <span class=\"variable\">$&#123;PKG_LIST&#125;</span>; <span class=\"keyword\">do</span></span><br><span class=\"line\">    go <span class=\"built_in\">test</span> -covermode=count -coverprofile <span class=\"string\">\"cover/<span class=\"variable\">$&#123;package##*/&#125;</span>.cov\"</span> <span class=\"string\">\"<span class=\"variable\">$package</span>\"</span> ;</span><br><span class=\"line\"><span class=\"keyword\">done</span></span><br><span class=\"line\">tail -q -n +2 cover/*.cov &gt;&gt; cover/coverage.cov</span><br><span class=\"line\">go tool cover -func=cover/coverage.cov</span><br></pre></td></tr></table></figure></p>\n<h4 id=\"查看\"><a href=\"#查看\" class=\"headerlink\" title=\"查看\"></a>查看</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">go tool cover -html=cover/coverage.cov -o coverage.html</span><br></pre></td></tr></table></figure>\n<h3 id=\"写个makefile，来集中调用这些工具\"><a href=\"#写个makefile，来集中调用这些工具\" class=\"headerlink\" title=\"写个makefile，来集中调用这些工具\"></a>写个makefile，来集中调用这些工具</h3><h4 id=\"项目下创建Makefile文件\"><a href=\"#项目下创建Makefile文件\" class=\"headerlink\" title=\"项目下创建Makefile文件\"></a>项目下创建Makefile文件</h4><p>一些语法需要注意下：</p>\n<ul>\n<li>行首的缩进必须是tab</li>\n</ul>\n<figure class=\"highlight makefile\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">PROJECT_NAME := <span class=\"string\">\"maozhuaV4\"</span></span><br><span class=\"line\">PKG := <span class=\"string\">\"<span class=\"variable\">$(PROJECT_NAME)</span>\"</span></span><br><span class=\"line\">PKG_LIST := <span class=\"variable\">$(<span class=\"built_in\">shell</span> go list $&#123;PKG&#125;/... | grep -v /vendor/)</span></span><br><span class=\"line\">GO_FILES := <span class=\"variable\">$(<span class=\"built_in\">shell</span> find . -name '*.go' | grep -v /vendor/ | grep -v _test.go)</span></span><br><span class=\"line\">PATH  := <span class=\"variable\">$(PATH)</span>:$&#123;GOPATH&#125;/bin</span><br><span class=\"line\">SHELL := env PATH=<span class=\"variable\">$(PATH)</span> /bin/bash</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\"><span class=\"meta-keyword\">.PHONY</span>: all dep build clean test coverage coverhtml lint</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"section\">all: build</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"section\">lint: ## Lint the files</span></span><br><span class=\"line\">\t@golint -set_exit_status $&#123;PKG_LIST&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"section\">test: ## Run unittests</span></span><br><span class=\"line\">\t@go test -short $&#123;PKG_LIST&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"section\">race: dep ## Run data race detector</span></span><br><span class=\"line\">\t@go test -race -short $&#123;PKG_LIST&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"section\">msan: dep ## Run memory sanitizer</span></span><br><span class=\"line\">\t@go test -msan -short $&#123;PKG_LIST&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"section\">coverage: ## Generate global code coverage report</span></span><br><span class=\"line\">\t./tools/coverage.sh;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"section\">coverhtml: ## Generate global code coverage report in HTML</span></span><br><span class=\"line\">\t./tools/coverage.sh html;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"section\">dep: ## Get the dependencies</span></span><br><span class=\"line\">    ./tools/init.sh;</span><br><span class=\"line\">    <span class=\"comment\">## @go get -v -d ./...</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"section\">build: dep ## Build the binary file</span></span><br><span class=\"line\">\t@go build -i -v <span class=\"variable\">$(PKG)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"section\">clean: ## Remove previous build</span></span><br><span class=\"line\">\t@rm -f <span class=\"variable\">$(PROJECT_NAME)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"section\">help: ## Display this help screen</span></span><br><span class=\"line\">\t@grep -h -E '^[a-zA-Z_-]+:.*?<span class=\"comment\">## .*$$' $(MAKEFILE_LIST) | awk 'BEGIN &#123;FS = \":.*?## \"&#125;; &#123;printf \"\\033[36m%-30s\\033[0m %s\\n\", $$1, $$2&#125;'</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"使用-3\"><a href=\"#使用-3\" class=\"headerlink\" title=\"使用\"></a>使用</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">make <span class=\"built_in\">help</span></span><br><span class=\"line\">make lint</span><br><span class=\"line\">make dep</span><br><span class=\"line\">make coverage</span><br><span class=\"line\"><span class=\"comment\">## ...</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"gitlab的CI-CD\"><a href=\"#gitlab的CI-CD\" class=\"headerlink\" title=\"gitlab的CI/CD\"></a>gitlab的CI/CD</h2><p>整理好了这些工具，那怎么自动调用呢？ 如gitlab有pipelines、drone等。<br>这里使用的是gitlab。</p>\n<h3 id=\"创建-gitlab-ci-yml\"><a href=\"#创建-gitlab-ci-yml\" class=\"headerlink\" title=\"创建 .gitlab-ci.yml\"></a>创建 .gitlab-ci.yml</h3><p><a href=\"https://docs.gitlab.com/ee/ci/yaml/README.html\" target=\"_blank\" rel=\"noopener\">官方文档</a><br><a href=\"https://docs.gitlab.com/ee/ci/variables/README.html\" target=\"_blank\" rel=\"noopener\">变量</a></p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">image:</span> <span class=\"attr\">golang:1.10</span></span><br><span class=\"line\"><span class=\"attr\">cache:</span></span><br><span class=\"line\"><span class=\"attr\">  paths:</span></span><br><span class=\"line\"><span class=\"bullet\">    -</span> <span class=\"string\">/apt-cache</span></span><br><span class=\"line\"><span class=\"bullet\">    -</span> <span class=\"string\">/go/src/github.com</span></span><br><span class=\"line\"><span class=\"bullet\">    -</span> <span class=\"string\">/go/src/golang.org</span></span><br><span class=\"line\"><span class=\"bullet\">    -</span> <span class=\"string\">/go/src/google.golang.org</span></span><br><span class=\"line\"><span class=\"bullet\">    -</span> <span class=\"string\">/go/src/gopkg.in</span></span><br><span class=\"line\"><span class=\"attr\">stages:</span></span><br><span class=\"line\"><span class=\"bullet\">  -</span> <span class=\"string\">test</span></span><br><span class=\"line\"><span class=\"bullet\">  -</span> <span class=\"string\">build</span></span><br><span class=\"line\"><span class=\"attr\">before_script:</span></span><br><span class=\"line\"><span class=\"bullet\">  -</span> <span class=\"string\">mkdir</span> <span class=\"bullet\">-p</span> <span class=\"string\">/go/src/$CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME</span> <span class=\"string\">/go/src/_/builds/$CI_PROJECT_NAMESPACE</span></span><br><span class=\"line\"><span class=\"bullet\">  -</span> <span class=\"string\">cp</span> <span class=\"bullet\">-r</span> <span class=\"string\">$CI_PROJECT_DIR</span> <span class=\"string\">/go/src/$CI_PROJECT_NAME</span></span><br><span class=\"line\"><span class=\"bullet\">  -</span> <span class=\"string\">ln</span> <span class=\"bullet\">-s</span> <span class=\"string\">/go/src/$CI_PROJECT_NAME</span> <span class=\"string\">/go/src/_/builds/$CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME</span></span><br><span class=\"line\"><span class=\"bullet\">  -</span> <span class=\"string\">make</span> <span class=\"string\">dep</span></span><br><span class=\"line\"><span class=\"attr\">unit_tests:</span></span><br><span class=\"line\"><span class=\"attr\">  stage:</span> <span class=\"string\">test</span></span><br><span class=\"line\"><span class=\"attr\">  script:</span></span><br><span class=\"line\"><span class=\"bullet\">    -</span> <span class=\"string\">make</span> <span class=\"string\">test</span></span><br><span class=\"line\"><span class=\"attr\">race_detector:</span></span><br><span class=\"line\"><span class=\"attr\">  stage:</span> <span class=\"string\">test</span></span><br><span class=\"line\"><span class=\"attr\">  script:</span></span><br><span class=\"line\"><span class=\"bullet\">    -</span> <span class=\"string\">make</span> <span class=\"string\">race</span></span><br><span class=\"line\"><span class=\"comment\">#memory_sanitizer:</span></span><br><span class=\"line\"><span class=\"comment\">#  stage: test</span></span><br><span class=\"line\"><span class=\"comment\">#  script:</span></span><br><span class=\"line\"><span class=\"comment\">#    - make msan</span></span><br><span class=\"line\"><span class=\"attr\">code_coverage:</span></span><br><span class=\"line\"><span class=\"attr\">  stage:</span> <span class=\"string\">test</span></span><br><span class=\"line\"><span class=\"attr\">  script:</span></span><br><span class=\"line\"><span class=\"bullet\">    -</span> <span class=\"string\">make</span> <span class=\"string\">coverage</span></span><br><span class=\"line\"><span class=\"attr\">code_coverage_report:</span></span><br><span class=\"line\"><span class=\"attr\">  stage:</span> <span class=\"string\">test</span></span><br><span class=\"line\"><span class=\"attr\">  script:</span></span><br><span class=\"line\"><span class=\"bullet\">    -</span> <span class=\"string\">make</span> <span class=\"string\">coverhtml</span></span><br><span class=\"line\"><span class=\"attr\">  only:</span></span><br><span class=\"line\"><span class=\"bullet\">  -</span> <span class=\"string\">master</span></span><br><span class=\"line\"><span class=\"attr\">lint_code:</span></span><br><span class=\"line\"><span class=\"attr\">  stage:</span> <span class=\"string\">test</span></span><br><span class=\"line\"><span class=\"attr\">  script:</span></span><br><span class=\"line\"><span class=\"bullet\">    -</span> <span class=\"string\">make</span> <span class=\"string\">lint</span></span><br><span class=\"line\"><span class=\"attr\">build:</span></span><br><span class=\"line\"><span class=\"attr\">  stage:</span> <span class=\"string\">build</span></span><br><span class=\"line\"><span class=\"attr\">  script:</span></span><br><span class=\"line\"><span class=\"bullet\">    -</span> <span class=\"string\">make</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"安装Runner\"><a href=\"#安装Runner\" class=\"headerlink\" title=\"安装Runner\"></a><a href=\"https://docs.gitlab.com/runner/\" target=\"_blank\" rel=\"noopener\">安装Runner</a></h3><p>上述只是任务，具体在哪跑，得另行指定</p>\n<h4 id=\"k8s\"><a href=\"#k8s\" class=\"headerlink\" title=\"k8s\"></a>k8s</h4><h4 id=\"手动安装\"><a href=\"#手动安装\" class=\"headerlink\" title=\"手动安装\"></a>手动安装</h4><p>登录gitlab服务器，执行<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo wget -O /usr/<span class=\"built_in\">local</span>/bin/gitlab-runner https://gitlab-runner-downloads.s3.amazonaws.com/latest/binaries/gitlab-runner-linux-amd64</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"镜像build-push\"><a href=\"#镜像build-push\" class=\"headerlink\" title=\"镜像build push\"></a>镜像build push</h3><h4 id=\"docker-in-docker\"><a href=\"#docker-in-docker\" class=\"headerlink\" title=\"docker in docker\"></a>docker in docker</h4><p>上面的runner用的executor用的是docker，那么问题来了，要怎么把生成好的镜像推送到镜像仓库呢？</p>\n<ul>\n<li>在容器中再安装docker</li>\n<li>run的时候传入： <code>docker run -v /var/run/docker.sock:/var/run/docker.sock -v $(which docker):$(which docker) -ti google/golang /bin/bash</code></li>\n</ul>\n<p>gitlab-runner提供了<a href=\"https://docs.gitlab.com/runner/executors/docker.html#use-docker-in-docker-with-privileged-mode\" target=\"_blank\" rel=\"noopener\">方法</a></p>\n<p>1、找到配置文件<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">gitlab-runner list</span><br></pre></td></tr></table></figure></p>\n<p>/etc/gitlab-runner/config.toml 中修改<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[[runners]]</span><br><span class=\"line\">  executor = &quot;docker&quot;</span><br><span class=\"line\">  [runners.docker]</span><br><span class=\"line\">    privileged = true</span><br></pre></td></tr></table></figure></p>\n<p>2、建个镜像，把go环境也搭好，这里镜像就叫mygolang了<br>Dockerfile<br><figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">FROM</span> <span class=\"string\">docker</span></span><br><span class=\"line\"><span class=\"string\">MAINTAINER</span> <span class=\"string\">lepoch</span> <span class=\"string\">&lt;ll-xzx@qq.com&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#使用 ali 仓库地址</span></span><br><span class=\"line\"><span class=\"string\">RUN</span> <span class=\"string\">echo</span> <span class=\"bullet\">-e</span> <span class=\"string\">\"http://mirrors.aliyun.com/alpine/latest-stable/main\\n\\</span></span><br><span class=\"line\"><span class=\"string\">http://mirrors.aliyun.com/alpine/latest-stable/community\"</span> <span class=\"string\">&gt; /etc/apk/repositories</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">RUN apk update &amp;&amp; apk add curl ca-certificates wget bash go1.10 git make &amp;&amp; \\</span></span><br><span class=\"line\"><span class=\"string\">    ln -sf /usr/share/zoneinfo/Asia/Shanghai /etc/localtime &amp;&amp; \\</span></span><br><span class=\"line\"><span class=\"string\">    echo \"Asia/Shanghai\" &gt; /etc/timezone &amp;&amp; \\</span></span><br><span class=\"line\"><span class=\"string\">    rm -rf /root/.cache</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">RUN set -eux; \\</span></span><br><span class=\"line\"><span class=\"string\">    apk update; \\</span></span><br><span class=\"line\"><span class=\"string\">\tapk add --no-cache --virtual .build-deps \\</span></span><br><span class=\"line\"><span class=\"string\">\t\tbash \\</span></span><br><span class=\"line\"><span class=\"string\">\t\tgcc \\</span></span><br><span class=\"line\"><span class=\"string\">\t\tmusl-dev \\</span></span><br><span class=\"line\"><span class=\"string\">\t\topenssl \\</span></span><br><span class=\"line\"><span class=\"string\">\t; \\</span></span><br><span class=\"line\"><span class=\"string\">\texport \\</span></span><br><span class=\"line\"><span class=\"string\"># set GOROOT_BOOTSTRAP such that we can actually build Go</span></span><br><span class=\"line\"><span class=\"string\">\t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \\</span></span><br><span class=\"line\"><span class=\"string\"># ... and set \"cross-building\" related vars to the installed system's values so that we create a build targeting the proper arch</span></span><br><span class=\"line\"><span class=\"string\"># (for example, if our build host is GOARCH=amd64, but our build env/image is GOARCH=386, our build needs GOARCH=386)</span></span><br><span class=\"line\"><span class=\"string\">\t\tGOOS=\"$(go env GOOS)\" \\</span></span><br><span class=\"line\"><span class=\"string\">\t\tGOARCH=\"$(go env GOARCH)\" \\</span></span><br><span class=\"line\"><span class=\"string\">\t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \\</span></span><br><span class=\"line\"><span class=\"string\">\t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \\</span></span><br><span class=\"line\"><span class=\"string\">        CGO_ENABLED=\"0\" \\</span></span><br><span class=\"line\"><span class=\"string\">\t; \\</span></span><br><span class=\"line\"><span class=\"string\">\texport PATH=\"/usr/local/go/bin:$PATH\"; \\</span></span><br><span class=\"line\"><span class=\"string\">\tgo version</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">ENV GOPATH /go</span></span><br><span class=\"line\"><span class=\"string\">ENV PATH $GOPATH/bin:/usr/local/go/bin:$PATH</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">ENV CGO_ENABLED \"0\"</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">RUN mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" &amp;&amp; chmod -R 777 \"$GOPATH\"</span></span><br><span class=\"line\"><span class=\"string\">WORKDIR $GOPATH</span></span><br></pre></td></tr></table></figure></p>\n<p>3、修改yaml文件<br><figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">image:</span> <span class=\"string\">mygolang</span></span><br><span class=\"line\"><span class=\"comment\"># Use the OverlayFS driver for improved performance.</span></span><br><span class=\"line\"><span class=\"attr\">variables:</span></span><br><span class=\"line\"><span class=\"attr\">  DOCKER_DRIVER:</span> <span class=\"string\">overlay</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">services:</span></span><br><span class=\"line\"><span class=\"attr\">  - docker:</span><span class=\"string\">dind</span></span><br></pre></td></tr></table></figure></p>\n<p>4、build 和 push</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">build:</span></span><br><span class=\"line\"><span class=\"attr\">  stage:</span> <span class=\"string\">build</span></span><br><span class=\"line\"><span class=\"attr\">  script:</span></span><br><span class=\"line\"><span class=\"bullet\">    -</span> <span class=\"string\">docker</span> <span class=\"string\">info</span></span><br><span class=\"line\"><span class=\"bullet\">    -</span> <span class=\"string\">docker</span> <span class=\"string\">login</span> <span class=\"bullet\">-u</span> <span class=\"string\">gitlab-ci-token</span> <span class=\"bullet\">-p</span> <span class=\"string\">$CI_BUILD_TOKEN</span> <span class=\"string\">registry.maozhuar.com</span></span><br><span class=\"line\"><span class=\"bullet\">    -</span> <span class=\"string\">CGO_ENABLED=0</span> <span class=\"string\">GOOS=linux</span> <span class=\"string\">go</span> <span class=\"string\">build</span> <span class=\"bullet\">-a</span> <span class=\"bullet\">-installsuffix</span> <span class=\"string\">cgo</span> <span class=\"bullet\">-o</span> <span class=\"string\">main</span> <span class=\"string\">$CI_PROJECT_NAME/</span></span><br><span class=\"line\"><span class=\"bullet\">    -</span> <span class=\"string\">docker</span> <span class=\"string\">build</span> <span class=\"bullet\">-t</span> <span class=\"string\">registry.maozhuar.com/backenddeveloper/maozhuav4:$CI_COMMIT_REF_NAME</span> <span class=\"string\">.</span></span><br><span class=\"line\"><span class=\"bullet\">    -</span> <span class=\"string\">docker</span> <span class=\"string\">push</span> <span class=\"string\">registry.maozhuar.com/backenddeveloper/maozhuav4:$CI_COMMIT_REF_NAME</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"部署\"><a href=\"#部署\" class=\"headerlink\" title=\"部署\"></a>部署</h3><p>以单台机器来说，用ssh远程执行其脚本即可。  </p>\n<p>在要部署的机器上，执行<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">useradd --comment <span class=\"string\">'GitLab Runner'</span> --create-home gitlab-runner --shell /bin/bash</span><br><span class=\"line\">groupadd docker</span><br><span class=\"line\">usermod -aG docker gitlab-runner</span><br><span class=\"line\">systemctl restart docker</span><br></pre></td></tr></table></figure></p>\n<h4 id=\"ssh使用秘钥-https-docs-gitlab-com-ee-ci-ssh-keys-README-html\"><a href=\"#ssh使用秘钥-https-docs-gitlab-com-ee-ci-ssh-keys-README-html\" class=\"headerlink\" title=\"ssh使用秘钥 [https://docs.gitlab.com/ee/ci/ssh_keys/README.html]\"></a>ssh使用秘钥 [<a href=\"https://docs.gitlab.com/ee/ci/ssh_keys/README.html]\" target=\"_blank\" rel=\"noopener\">https://docs.gitlab.com/ee/ci/ssh_keys/README.html]</a></h4><ul>\n<li>创建秘钥对</li>\n<li>把私钥放入gitlab CI/CD的 secret key</li>\n<li>把ssh-keyscan的结果也放入 secret key</li>\n<li></li>\n</ul>\n<h3 id=\"相关网址\"><a href=\"#相关网址\" class=\"headerlink\" title=\"相关网址\"></a>相关网址</h3><ul>\n<li><a href=\"https://medium.com/pantomath/go-tools-gitlab-how-to-do-continuous-integration-like-a-boss-941a3a9ad0b6\" target=\"_blank\" rel=\"noopener\">Go tools &amp; GitLab — how to do Continuous Integration like a boss</a></li>\n<li><a href=\"https://docs.gitlab.com/runner/\" target=\"_blank\" rel=\"noopener\">Runner</a></li>\n</ul>\n","site":{"data":{"head":"\n<script type=\"text/javascript\" id=\"hexo.headll\">\n(function () {\n  window.addEventListener(\"load\", function () {   //添加load事件\n    $(\"body\").click(function (e) {\n        var a = new Array(\"富强\", \"民主\", \"文明\", \"和谐\", \"自由\", \"平等\", \"公正\", \"法治\", \"爱国\", \"敬业\", \"诚信\", \"友善\");\n        var a_idx=Math.floor(Math.random()*a.length);\n        var $i = $(\"<span/>\").text(a[a_idx]);\n        var x = e.pageX,y = e.pageY;\n        $i.css({\n            \"z-index\": 99999,\n            \"top\": y - 20,\n            \"left\": x,\n            \"position\": \"absolute\",\n            \"font-weight\": \"bold\",\n            \"color\": \"#ff6651\"\n        });\n        $(\"body\").append($i);\n        $i.animate({\n            \"top\": y - 180,\n            \"opacity\": 0\n        },\n        1500,\n        function () {\n            $i.remove();\n        });\n    });\n  }, false);\n})();\n</script>\n\n"}},"excerpt":"<p>整理的一些小记</p>","more":"<h2 id=\"dep\"><a href=\"#dep\" class=\"headerlink\" title=\"dep\"></a><a href=\"https://github.com/golang/dep\" target=\"_blank\" rel=\"noopener\">dep</a></h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">brew install dep</span><br></pre></td></tr></table></figure>\n<h2 id=\"情景\"><a href=\"#情景\" class=\"headerlink\" title=\"情景\"></a>情景</h2><ul>\n<li>gitlab</li>\n</ul>\n<h2 id=\"Go-tools\"><a href=\"#Go-tools\" class=\"headerlink\" title=\"Go tools\"></a>Go tools</h2><h3 id=\"Lint\"><a href=\"#Lint\" class=\"headerlink\" title=\"Lint\"></a>Lint</h3><p>语法检测与建议</p>\n<h4 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">go get -u golang.org/x/lint/golint</span><br></pre></td></tr></table></figure>\n<h4 id=\"无梯子的安装\"><a href=\"#无梯子的安装\" class=\"headerlink\" title=\"无梯子的安装\"></a>无梯子的安装</h4><p>/tools/init.sh<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#!/usr/bin/env bash</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">## 安装lint，其他需要翻墙的，大多也能这么安装</span></span><br><span class=\"line\">mkdir -p <span class=\"variable\">$GOPATH</span>/src/golang.org/x</span><br><span class=\"line\"><span class=\"keyword\">if</span> [ ! -d <span class=\"variable\">$GOPATH</span>/src/golang.org/x/tools ]; <span class=\"keyword\">then</span></span><br><span class=\"line\">\t<span class=\"built_in\">cd</span> <span class=\"variable\">$GOPATH</span>/src/golang.org/x</span><br><span class=\"line\">\tgit <span class=\"built_in\">clone</span> https://github.com/golang/tools.git</span><br><span class=\"line\">\tgit <span class=\"built_in\">clone</span> https://github.com/golang/lint.git</span><br><span class=\"line\"></span><br><span class=\"line\">\tgo get golang.org/x/lint/golint</span><br><span class=\"line\"><span class=\"keyword\">fi</span></span><br></pre></td></tr></table></figure></p>\n<h4 id=\"使用\"><a href=\"#使用\" class=\"headerlink\" title=\"使用\"></a>使用</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">golint -set_exit_status $(go list ./... | grep -v /vendor/)</span><br></pre></td></tr></table></figure>\n<h3 id=\"Unit-test\"><a href=\"#Unit-test\" class=\"headerlink\" title=\"Unit test\"></a>Unit test</h3><p>单元测试</p>\n<h4 id=\"使用-1\"><a href=\"#使用-1\" class=\"headerlink\" title=\"使用\"></a>使用</h4><p>每个目录都执行 go test 方法<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">go <span class=\"built_in\">test</span> -short $(go list ./... | grep -v /vendor/)</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"Code-coverage\"><a href=\"#Code-coverage\" class=\"headerlink\" title=\"Code coverage\"></a>Code coverage</h3><p>这个可以计算单元测试覆盖率，添加已下脚本文件</p>\n<h4 id=\"使用-2\"><a href=\"#使用-2\" class=\"headerlink\" title=\"使用\"></a>使用</h4><p>/tools/coverage.sh<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#!/usr/bin/env bash</span></span><br><span class=\"line\">PKG_LIST=$(go list ./... | grep -v /vendor/) </span><br><span class=\"line\"><span class=\"keyword\">for</span> package <span class=\"keyword\">in</span> <span class=\"variable\">$&#123;PKG_LIST&#125;</span>; <span class=\"keyword\">do</span></span><br><span class=\"line\">    go <span class=\"built_in\">test</span> -covermode=count -coverprofile <span class=\"string\">\"cover/<span class=\"variable\">$&#123;package##*/&#125;</span>.cov\"</span> <span class=\"string\">\"<span class=\"variable\">$package</span>\"</span> ;</span><br><span class=\"line\"><span class=\"keyword\">done</span></span><br><span class=\"line\">tail -q -n +2 cover/*.cov &gt;&gt; cover/coverage.cov</span><br><span class=\"line\">go tool cover -func=cover/coverage.cov</span><br></pre></td></tr></table></figure></p>\n<h4 id=\"查看\"><a href=\"#查看\" class=\"headerlink\" title=\"查看\"></a>查看</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">go tool cover -html=cover/coverage.cov -o coverage.html</span><br></pre></td></tr></table></figure>\n<h3 id=\"写个makefile，来集中调用这些工具\"><a href=\"#写个makefile，来集中调用这些工具\" class=\"headerlink\" title=\"写个makefile，来集中调用这些工具\"></a>写个makefile，来集中调用这些工具</h3><h4 id=\"项目下创建Makefile文件\"><a href=\"#项目下创建Makefile文件\" class=\"headerlink\" title=\"项目下创建Makefile文件\"></a>项目下创建Makefile文件</h4><p>一些语法需要注意下：</p>\n<ul>\n<li>行首的缩进必须是tab</li>\n</ul>\n<figure class=\"highlight makefile\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">PROJECT_NAME := <span class=\"string\">\"maozhuaV4\"</span></span><br><span class=\"line\">PKG := <span class=\"string\">\"<span class=\"variable\">$(PROJECT_NAME)</span>\"</span></span><br><span class=\"line\">PKG_LIST := <span class=\"variable\">$(<span class=\"built_in\">shell</span> go list $&#123;PKG&#125;/... | grep -v /vendor/)</span></span><br><span class=\"line\">GO_FILES := <span class=\"variable\">$(<span class=\"built_in\">shell</span> find . -name '*.go' | grep -v /vendor/ | grep -v _test.go)</span></span><br><span class=\"line\">PATH  := <span class=\"variable\">$(PATH)</span>:$&#123;GOPATH&#125;/bin</span><br><span class=\"line\">SHELL := env PATH=<span class=\"variable\">$(PATH)</span> /bin/bash</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\"><span class=\"meta-keyword\">.PHONY</span>: all dep build clean test coverage coverhtml lint</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"section\">all: build</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"section\">lint: ## Lint the files</span></span><br><span class=\"line\">\t@golint -set_exit_status $&#123;PKG_LIST&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"section\">test: ## Run unittests</span></span><br><span class=\"line\">\t@go test -short $&#123;PKG_LIST&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"section\">race: dep ## Run data race detector</span></span><br><span class=\"line\">\t@go test -race -short $&#123;PKG_LIST&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"section\">msan: dep ## Run memory sanitizer</span></span><br><span class=\"line\">\t@go test -msan -short $&#123;PKG_LIST&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"section\">coverage: ## Generate global code coverage report</span></span><br><span class=\"line\">\t./tools/coverage.sh;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"section\">coverhtml: ## Generate global code coverage report in HTML</span></span><br><span class=\"line\">\t./tools/coverage.sh html;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"section\">dep: ## Get the dependencies</span></span><br><span class=\"line\">    ./tools/init.sh;</span><br><span class=\"line\">    <span class=\"comment\">## @go get -v -d ./...</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"section\">build: dep ## Build the binary file</span></span><br><span class=\"line\">\t@go build -i -v <span class=\"variable\">$(PKG)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"section\">clean: ## Remove previous build</span></span><br><span class=\"line\">\t@rm -f <span class=\"variable\">$(PROJECT_NAME)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"section\">help: ## Display this help screen</span></span><br><span class=\"line\">\t@grep -h -E '^[a-zA-Z_-]+:.*?<span class=\"comment\">## .*$$' $(MAKEFILE_LIST) | awk 'BEGIN &#123;FS = \":.*?## \"&#125;; &#123;printf \"\\033[36m%-30s\\033[0m %s\\n\", $$1, $$2&#125;'</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"使用-3\"><a href=\"#使用-3\" class=\"headerlink\" title=\"使用\"></a>使用</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">make <span class=\"built_in\">help</span></span><br><span class=\"line\">make lint</span><br><span class=\"line\">make dep</span><br><span class=\"line\">make coverage</span><br><span class=\"line\"><span class=\"comment\">## ...</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"gitlab的CI-CD\"><a href=\"#gitlab的CI-CD\" class=\"headerlink\" title=\"gitlab的CI/CD\"></a>gitlab的CI/CD</h2><p>整理好了这些工具，那怎么自动调用呢？ 如gitlab有pipelines、drone等。<br>这里使用的是gitlab。</p>\n<h3 id=\"创建-gitlab-ci-yml\"><a href=\"#创建-gitlab-ci-yml\" class=\"headerlink\" title=\"创建 .gitlab-ci.yml\"></a>创建 .gitlab-ci.yml</h3><p><a href=\"https://docs.gitlab.com/ee/ci/yaml/README.html\" target=\"_blank\" rel=\"noopener\">官方文档</a><br><a href=\"https://docs.gitlab.com/ee/ci/variables/README.html\" target=\"_blank\" rel=\"noopener\">变量</a></p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">image:</span> <span class=\"attr\">golang:1.10</span></span><br><span class=\"line\"><span class=\"attr\">cache:</span></span><br><span class=\"line\"><span class=\"attr\">  paths:</span></span><br><span class=\"line\"><span class=\"bullet\">    -</span> <span class=\"string\">/apt-cache</span></span><br><span class=\"line\"><span class=\"bullet\">    -</span> <span class=\"string\">/go/src/github.com</span></span><br><span class=\"line\"><span class=\"bullet\">    -</span> <span class=\"string\">/go/src/golang.org</span></span><br><span class=\"line\"><span class=\"bullet\">    -</span> <span class=\"string\">/go/src/google.golang.org</span></span><br><span class=\"line\"><span class=\"bullet\">    -</span> <span class=\"string\">/go/src/gopkg.in</span></span><br><span class=\"line\"><span class=\"attr\">stages:</span></span><br><span class=\"line\"><span class=\"bullet\">  -</span> <span class=\"string\">test</span></span><br><span class=\"line\"><span class=\"bullet\">  -</span> <span class=\"string\">build</span></span><br><span class=\"line\"><span class=\"attr\">before_script:</span></span><br><span class=\"line\"><span class=\"bullet\">  -</span> <span class=\"string\">mkdir</span> <span class=\"bullet\">-p</span> <span class=\"string\">/go/src/$CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME</span> <span class=\"string\">/go/src/_/builds/$CI_PROJECT_NAMESPACE</span></span><br><span class=\"line\"><span class=\"bullet\">  -</span> <span class=\"string\">cp</span> <span class=\"bullet\">-r</span> <span class=\"string\">$CI_PROJECT_DIR</span> <span class=\"string\">/go/src/$CI_PROJECT_NAME</span></span><br><span class=\"line\"><span class=\"bullet\">  -</span> <span class=\"string\">ln</span> <span class=\"bullet\">-s</span> <span class=\"string\">/go/src/$CI_PROJECT_NAME</span> <span class=\"string\">/go/src/_/builds/$CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME</span></span><br><span class=\"line\"><span class=\"bullet\">  -</span> <span class=\"string\">make</span> <span class=\"string\">dep</span></span><br><span class=\"line\"><span class=\"attr\">unit_tests:</span></span><br><span class=\"line\"><span class=\"attr\">  stage:</span> <span class=\"string\">test</span></span><br><span class=\"line\"><span class=\"attr\">  script:</span></span><br><span class=\"line\"><span class=\"bullet\">    -</span> <span class=\"string\">make</span> <span class=\"string\">test</span></span><br><span class=\"line\"><span class=\"attr\">race_detector:</span></span><br><span class=\"line\"><span class=\"attr\">  stage:</span> <span class=\"string\">test</span></span><br><span class=\"line\"><span class=\"attr\">  script:</span></span><br><span class=\"line\"><span class=\"bullet\">    -</span> <span class=\"string\">make</span> <span class=\"string\">race</span></span><br><span class=\"line\"><span class=\"comment\">#memory_sanitizer:</span></span><br><span class=\"line\"><span class=\"comment\">#  stage: test</span></span><br><span class=\"line\"><span class=\"comment\">#  script:</span></span><br><span class=\"line\"><span class=\"comment\">#    - make msan</span></span><br><span class=\"line\"><span class=\"attr\">code_coverage:</span></span><br><span class=\"line\"><span class=\"attr\">  stage:</span> <span class=\"string\">test</span></span><br><span class=\"line\"><span class=\"attr\">  script:</span></span><br><span class=\"line\"><span class=\"bullet\">    -</span> <span class=\"string\">make</span> <span class=\"string\">coverage</span></span><br><span class=\"line\"><span class=\"attr\">code_coverage_report:</span></span><br><span class=\"line\"><span class=\"attr\">  stage:</span> <span class=\"string\">test</span></span><br><span class=\"line\"><span class=\"attr\">  script:</span></span><br><span class=\"line\"><span class=\"bullet\">    -</span> <span class=\"string\">make</span> <span class=\"string\">coverhtml</span></span><br><span class=\"line\"><span class=\"attr\">  only:</span></span><br><span class=\"line\"><span class=\"bullet\">  -</span> <span class=\"string\">master</span></span><br><span class=\"line\"><span class=\"attr\">lint_code:</span></span><br><span class=\"line\"><span class=\"attr\">  stage:</span> <span class=\"string\">test</span></span><br><span class=\"line\"><span class=\"attr\">  script:</span></span><br><span class=\"line\"><span class=\"bullet\">    -</span> <span class=\"string\">make</span> <span class=\"string\">lint</span></span><br><span class=\"line\"><span class=\"attr\">build:</span></span><br><span class=\"line\"><span class=\"attr\">  stage:</span> <span class=\"string\">build</span></span><br><span class=\"line\"><span class=\"attr\">  script:</span></span><br><span class=\"line\"><span class=\"bullet\">    -</span> <span class=\"string\">make</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"安装Runner\"><a href=\"#安装Runner\" class=\"headerlink\" title=\"安装Runner\"></a><a href=\"https://docs.gitlab.com/runner/\" target=\"_blank\" rel=\"noopener\">安装Runner</a></h3><p>上述只是任务，具体在哪跑，得另行指定</p>\n<h4 id=\"k8s\"><a href=\"#k8s\" class=\"headerlink\" title=\"k8s\"></a>k8s</h4><h4 id=\"手动安装\"><a href=\"#手动安装\" class=\"headerlink\" title=\"手动安装\"></a>手动安装</h4><p>登录gitlab服务器，执行<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo wget -O /usr/<span class=\"built_in\">local</span>/bin/gitlab-runner https://gitlab-runner-downloads.s3.amazonaws.com/latest/binaries/gitlab-runner-linux-amd64</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"镜像build-push\"><a href=\"#镜像build-push\" class=\"headerlink\" title=\"镜像build push\"></a>镜像build push</h3><h4 id=\"docker-in-docker\"><a href=\"#docker-in-docker\" class=\"headerlink\" title=\"docker in docker\"></a>docker in docker</h4><p>上面的runner用的executor用的是docker，那么问题来了，要怎么把生成好的镜像推送到镜像仓库呢？</p>\n<ul>\n<li>在容器中再安装docker</li>\n<li>run的时候传入： <code>docker run -v /var/run/docker.sock:/var/run/docker.sock -v $(which docker):$(which docker) -ti google/golang /bin/bash</code></li>\n</ul>\n<p>gitlab-runner提供了<a href=\"https://docs.gitlab.com/runner/executors/docker.html#use-docker-in-docker-with-privileged-mode\" target=\"_blank\" rel=\"noopener\">方法</a></p>\n<p>1、找到配置文件<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">gitlab-runner list</span><br></pre></td></tr></table></figure></p>\n<p>/etc/gitlab-runner/config.toml 中修改<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[[runners]]</span><br><span class=\"line\">  executor = &quot;docker&quot;</span><br><span class=\"line\">  [runners.docker]</span><br><span class=\"line\">    privileged = true</span><br></pre></td></tr></table></figure></p>\n<p>2、建个镜像，把go环境也搭好，这里镜像就叫mygolang了<br>Dockerfile<br><figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">FROM</span> <span class=\"string\">docker</span></span><br><span class=\"line\"><span class=\"string\">MAINTAINER</span> <span class=\"string\">lepoch</span> <span class=\"string\">&lt;ll-xzx@qq.com&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#使用 ali 仓库地址</span></span><br><span class=\"line\"><span class=\"string\">RUN</span> <span class=\"string\">echo</span> <span class=\"bullet\">-e</span> <span class=\"string\">\"http://mirrors.aliyun.com/alpine/latest-stable/main\\n\\</span></span><br><span class=\"line\"><span class=\"string\">http://mirrors.aliyun.com/alpine/latest-stable/community\"</span> <span class=\"string\">&gt; /etc/apk/repositories</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">RUN apk update &amp;&amp; apk add curl ca-certificates wget bash go1.10 git make &amp;&amp; \\</span></span><br><span class=\"line\"><span class=\"string\">    ln -sf /usr/share/zoneinfo/Asia/Shanghai /etc/localtime &amp;&amp; \\</span></span><br><span class=\"line\"><span class=\"string\">    echo \"Asia/Shanghai\" &gt; /etc/timezone &amp;&amp; \\</span></span><br><span class=\"line\"><span class=\"string\">    rm -rf /root/.cache</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">RUN set -eux; \\</span></span><br><span class=\"line\"><span class=\"string\">    apk update; \\</span></span><br><span class=\"line\"><span class=\"string\">\tapk add --no-cache --virtual .build-deps \\</span></span><br><span class=\"line\"><span class=\"string\">\t\tbash \\</span></span><br><span class=\"line\"><span class=\"string\">\t\tgcc \\</span></span><br><span class=\"line\"><span class=\"string\">\t\tmusl-dev \\</span></span><br><span class=\"line\"><span class=\"string\">\t\topenssl \\</span></span><br><span class=\"line\"><span class=\"string\">\t; \\</span></span><br><span class=\"line\"><span class=\"string\">\texport \\</span></span><br><span class=\"line\"><span class=\"string\"># set GOROOT_BOOTSTRAP such that we can actually build Go</span></span><br><span class=\"line\"><span class=\"string\">\t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \\</span></span><br><span class=\"line\"><span class=\"string\"># ... and set \"cross-building\" related vars to the installed system's values so that we create a build targeting the proper arch</span></span><br><span class=\"line\"><span class=\"string\"># (for example, if our build host is GOARCH=amd64, but our build env/image is GOARCH=386, our build needs GOARCH=386)</span></span><br><span class=\"line\"><span class=\"string\">\t\tGOOS=\"$(go env GOOS)\" \\</span></span><br><span class=\"line\"><span class=\"string\">\t\tGOARCH=\"$(go env GOARCH)\" \\</span></span><br><span class=\"line\"><span class=\"string\">\t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \\</span></span><br><span class=\"line\"><span class=\"string\">\t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \\</span></span><br><span class=\"line\"><span class=\"string\">        CGO_ENABLED=\"0\" \\</span></span><br><span class=\"line\"><span class=\"string\">\t; \\</span></span><br><span class=\"line\"><span class=\"string\">\texport PATH=\"/usr/local/go/bin:$PATH\"; \\</span></span><br><span class=\"line\"><span class=\"string\">\tgo version</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">ENV GOPATH /go</span></span><br><span class=\"line\"><span class=\"string\">ENV PATH $GOPATH/bin:/usr/local/go/bin:$PATH</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">ENV CGO_ENABLED \"0\"</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">RUN mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" &amp;&amp; chmod -R 777 \"$GOPATH\"</span></span><br><span class=\"line\"><span class=\"string\">WORKDIR $GOPATH</span></span><br></pre></td></tr></table></figure></p>\n<p>3、修改yaml文件<br><figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">image:</span> <span class=\"string\">mygolang</span></span><br><span class=\"line\"><span class=\"comment\"># Use the OverlayFS driver for improved performance.</span></span><br><span class=\"line\"><span class=\"attr\">variables:</span></span><br><span class=\"line\"><span class=\"attr\">  DOCKER_DRIVER:</span> <span class=\"string\">overlay</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">services:</span></span><br><span class=\"line\"><span class=\"attr\">  - docker:</span><span class=\"string\">dind</span></span><br></pre></td></tr></table></figure></p>\n<p>4、build 和 push</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">build:</span></span><br><span class=\"line\"><span class=\"attr\">  stage:</span> <span class=\"string\">build</span></span><br><span class=\"line\"><span class=\"attr\">  script:</span></span><br><span class=\"line\"><span class=\"bullet\">    -</span> <span class=\"string\">docker</span> <span class=\"string\">info</span></span><br><span class=\"line\"><span class=\"bullet\">    -</span> <span class=\"string\">docker</span> <span class=\"string\">login</span> <span class=\"bullet\">-u</span> <span class=\"string\">gitlab-ci-token</span> <span class=\"bullet\">-p</span> <span class=\"string\">$CI_BUILD_TOKEN</span> <span class=\"string\">registry.maozhuar.com</span></span><br><span class=\"line\"><span class=\"bullet\">    -</span> <span class=\"string\">CGO_ENABLED=0</span> <span class=\"string\">GOOS=linux</span> <span class=\"string\">go</span> <span class=\"string\">build</span> <span class=\"bullet\">-a</span> <span class=\"bullet\">-installsuffix</span> <span class=\"string\">cgo</span> <span class=\"bullet\">-o</span> <span class=\"string\">main</span> <span class=\"string\">$CI_PROJECT_NAME/</span></span><br><span class=\"line\"><span class=\"bullet\">    -</span> <span class=\"string\">docker</span> <span class=\"string\">build</span> <span class=\"bullet\">-t</span> <span class=\"string\">registry.maozhuar.com/backenddeveloper/maozhuav4:$CI_COMMIT_REF_NAME</span> <span class=\"string\">.</span></span><br><span class=\"line\"><span class=\"bullet\">    -</span> <span class=\"string\">docker</span> <span class=\"string\">push</span> <span class=\"string\">registry.maozhuar.com/backenddeveloper/maozhuav4:$CI_COMMIT_REF_NAME</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"部署\"><a href=\"#部署\" class=\"headerlink\" title=\"部署\"></a>部署</h3><p>以单台机器来说，用ssh远程执行其脚本即可。  </p>\n<p>在要部署的机器上，执行<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">useradd --comment <span class=\"string\">'GitLab Runner'</span> --create-home gitlab-runner --shell /bin/bash</span><br><span class=\"line\">groupadd docker</span><br><span class=\"line\">usermod -aG docker gitlab-runner</span><br><span class=\"line\">systemctl restart docker</span><br></pre></td></tr></table></figure></p>\n<h4 id=\"ssh使用秘钥-https-docs-gitlab-com-ee-ci-ssh-keys-README-html\"><a href=\"#ssh使用秘钥-https-docs-gitlab-com-ee-ci-ssh-keys-README-html\" class=\"headerlink\" title=\"ssh使用秘钥 [https://docs.gitlab.com/ee/ci/ssh_keys/README.html]\"></a>ssh使用秘钥 [<a href=\"https://docs.gitlab.com/ee/ci/ssh_keys/README.html]\" target=\"_blank\" rel=\"noopener\">https://docs.gitlab.com/ee/ci/ssh_keys/README.html]</a></h4><ul>\n<li>创建秘钥对</li>\n<li>把私钥放入gitlab CI/CD的 secret key</li>\n<li>把ssh-keyscan的结果也放入 secret key</li>\n<li></li>\n</ul>\n<h3 id=\"相关网址\"><a href=\"#相关网址\" class=\"headerlink\" title=\"相关网址\"></a>相关网址</h3><ul>\n<li><a href=\"https://medium.com/pantomath/go-tools-gitlab-how-to-do-continuous-integration-like-a-boss-941a3a9ad0b6\" target=\"_blank\" rel=\"noopener\">Go tools &amp; GitLab — how to do Continuous Integration like a boss</a></li>\n<li><a href=\"https://docs.gitlab.com/runner/\" target=\"_blank\" rel=\"noopener\">Runner</a></li>\n</ul>"},{"title":"Haddop小记","date":"2017-06-12T07:00:00.000Z","_content":"\nHaddop小记\n<!-- MORE -->\n环境：腾讯云CentOS 7 x64  \n目标：安装Hadoop 2.8.0\n\n\n# 安装  \n## 安装 OpenJDK 8\n下载地址：[http://www.oracle.com/technetwork/java/javase/downloads/index.html]\n修改 vim /etc/profile\n\n```\nsudo su\ncd ~\n\nwget http://58.87.87.210/server-jre-8u131-linux-x64.tar\n\ntar -xf server-jre-8u131-linux-x64.tar\ncp -r jdk1.8.0_131 /usr/local/\n\n#修改/etc/profile\n( cat <<EOF\n\nexport JAVA_HOME=/usr/local/jdk1.8.0_131\nexport JRE_HOME=\\$JAVA_HOME/jre\nexport CLASSPATH=.:$JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jar:$JRE_HOME/lib:$CLASSPATH\nexport PATH=\\$JAVA_HOME/bin:\\$PATH\nEOF\n) >> /etc/profile\n\nsource /etc/profile\n\n```\n\n## 依赖\n```\nyum install -y ssh rsync\n```\n\n## 安装hadoop 2.8.0\n```\nwget https://mirrors.tuna.tsinghua.edu.cn/apache/hadoop/common/hadoop-2.8.0/hadoop-2.8.0.tar.gz\ntar -zxf hadoop-2.8.0.tar.gz\nmv hadoop-2.8.0 /usr/local/\n\nmkdir input\ncp etc/hadoop/*.xml input\nbin/hadoop jar share/hadoop/mapreduce/hadoop-mapreduce-examples-2.8.0.jar grep input output 'dfs[a-z.]+'\ncat output/*\n```\n\n## 使用\n### 伪分布式的hdfs目录  \n修改 etc/hadoop/core-site.xml，加入\n```\n<property>  \n        <name>hadoop.tmp.dir</name>  \n        <value>/data/hadoop/data</value>  \n        <description>A base for other temporary directories.</description>  \n</property>  \n```\n### 其他\n见[官方文档](http://hadoop.apache.org/docs/r2.8.0/hadoop-project-dist/hadoop-common/SingleCluster.html#Execution)\n\n\n# 参考\n- [http://blog.csdn.net/telnetor/article/details/6993336]\n","source":"_posts/Hadoop小记.md","raw":"---\ntitle: Haddop小记\ndate: 2017-06-12 15:00:00\ntags:\n  - Hadoop\ncategories:\n  - Hadoop\n  - 小记\n---\n\nHaddop小记\n<!-- MORE -->\n环境：腾讯云CentOS 7 x64  \n目标：安装Hadoop 2.8.0\n\n\n# 安装  \n## 安装 OpenJDK 8\n下载地址：[http://www.oracle.com/technetwork/java/javase/downloads/index.html]\n修改 vim /etc/profile\n\n```\nsudo su\ncd ~\n\nwget http://58.87.87.210/server-jre-8u131-linux-x64.tar\n\ntar -xf server-jre-8u131-linux-x64.tar\ncp -r jdk1.8.0_131 /usr/local/\n\n#修改/etc/profile\n( cat <<EOF\n\nexport JAVA_HOME=/usr/local/jdk1.8.0_131\nexport JRE_HOME=\\$JAVA_HOME/jre\nexport CLASSPATH=.:$JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jar:$JRE_HOME/lib:$CLASSPATH\nexport PATH=\\$JAVA_HOME/bin:\\$PATH\nEOF\n) >> /etc/profile\n\nsource /etc/profile\n\n```\n\n## 依赖\n```\nyum install -y ssh rsync\n```\n\n## 安装hadoop 2.8.0\n```\nwget https://mirrors.tuna.tsinghua.edu.cn/apache/hadoop/common/hadoop-2.8.0/hadoop-2.8.0.tar.gz\ntar -zxf hadoop-2.8.0.tar.gz\nmv hadoop-2.8.0 /usr/local/\n\nmkdir input\ncp etc/hadoop/*.xml input\nbin/hadoop jar share/hadoop/mapreduce/hadoop-mapreduce-examples-2.8.0.jar grep input output 'dfs[a-z.]+'\ncat output/*\n```\n\n## 使用\n### 伪分布式的hdfs目录  \n修改 etc/hadoop/core-site.xml，加入\n```\n<property>  \n        <name>hadoop.tmp.dir</name>  \n        <value>/data/hadoop/data</value>  \n        <description>A base for other temporary directories.</description>  \n</property>  \n```\n### 其他\n见[官方文档](http://hadoop.apache.org/docs/r2.8.0/hadoop-project-dist/hadoop-common/SingleCluster.html#Execution)\n\n\n# 参考\n- [http://blog.csdn.net/telnetor/article/details/6993336]\n","slug":"Hadoop小记","published":1,"updated":"2017-07-24T12:30:37.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjin2pu1g0008nrfy853vfjsa","content":"<p>Haddop小记<br><a id=\"more\"></a><br>环境：腾讯云CentOS 7 x64<br>目标：安装Hadoop 2.8.0</p>\n<h1 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h1><h2 id=\"安装-OpenJDK-8\"><a href=\"#安装-OpenJDK-8\" class=\"headerlink\" title=\"安装 OpenJDK 8\"></a>安装 OpenJDK 8</h2><p>下载地址：[<a href=\"http://www.oracle.com/technetwork/java/javase/downloads/index.html]\" target=\"_blank\" rel=\"noopener\">http://www.oracle.com/technetwork/java/javase/downloads/index.html]</a><br>修改 vim /etc/profile</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo su</span><br><span class=\"line\">cd ~</span><br><span class=\"line\"></span><br><span class=\"line\">wget http://58.87.87.210/server-jre-8u131-linux-x64.tar</span><br><span class=\"line\"></span><br><span class=\"line\">tar -xf server-jre-8u131-linux-x64.tar</span><br><span class=\"line\">cp -r jdk1.8.0_131 /usr/local/</span><br><span class=\"line\"></span><br><span class=\"line\">#修改/etc/profile</span><br><span class=\"line\">( cat &lt;&lt;EOF</span><br><span class=\"line\"></span><br><span class=\"line\">export JAVA_HOME=/usr/local/jdk1.8.0_131</span><br><span class=\"line\">export JRE_HOME=\\$JAVA_HOME/jre</span><br><span class=\"line\">export CLASSPATH=.:$JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jar:$JRE_HOME/lib:$CLASSPATH</span><br><span class=\"line\">export PATH=\\$JAVA_HOME/bin:\\$PATH</span><br><span class=\"line\">EOF</span><br><span class=\"line\">) &gt;&gt; /etc/profile</span><br><span class=\"line\"></span><br><span class=\"line\">source /etc/profile</span><br></pre></td></tr></table></figure>\n<h2 id=\"依赖\"><a href=\"#依赖\" class=\"headerlink\" title=\"依赖\"></a>依赖</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum install -y ssh rsync</span><br></pre></td></tr></table></figure>\n<h2 id=\"安装hadoop-2-8-0\"><a href=\"#安装hadoop-2-8-0\" class=\"headerlink\" title=\"安装hadoop 2.8.0\"></a>安装hadoop 2.8.0</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget https://mirrors.tuna.tsinghua.edu.cn/apache/hadoop/common/hadoop-2.8.0/hadoop-2.8.0.tar.gz</span><br><span class=\"line\">tar -zxf hadoop-2.8.0.tar.gz</span><br><span class=\"line\">mv hadoop-2.8.0 /usr/local/</span><br><span class=\"line\"></span><br><span class=\"line\">mkdir input</span><br><span class=\"line\">cp etc/hadoop/*.xml input</span><br><span class=\"line\">bin/hadoop jar share/hadoop/mapreduce/hadoop-mapreduce-examples-2.8.0.jar grep input output &apos;dfs[a-z.]+&apos;</span><br><span class=\"line\">cat output/*</span><br></pre></td></tr></table></figure>\n<h2 id=\"使用\"><a href=\"#使用\" class=\"headerlink\" title=\"使用\"></a>使用</h2><h3 id=\"伪分布式的hdfs目录\"><a href=\"#伪分布式的hdfs目录\" class=\"headerlink\" title=\"伪分布式的hdfs目录\"></a>伪分布式的hdfs目录</h3><p>修改 etc/hadoop/core-site.xml，加入<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;property&gt;  </span><br><span class=\"line\">        &lt;name&gt;hadoop.tmp.dir&lt;/name&gt;  </span><br><span class=\"line\">        &lt;value&gt;/data/hadoop/data&lt;/value&gt;  </span><br><span class=\"line\">        &lt;description&gt;A base for other temporary directories.&lt;/description&gt;  </span><br><span class=\"line\">&lt;/property&gt;</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"其他\"><a href=\"#其他\" class=\"headerlink\" title=\"其他\"></a>其他</h3><p>见<a href=\"http://hadoop.apache.org/docs/r2.8.0/hadoop-project-dist/hadoop-common/SingleCluster.html#Execution\" target=\"_blank\" rel=\"noopener\">官方文档</a></p>\n<h1 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h1><ul>\n<li>[<a href=\"http://blog.csdn.net/telnetor/article/details/6993336]\" target=\"_blank\" rel=\"noopener\">http://blog.csdn.net/telnetor/article/details/6993336]</a></li>\n</ul>\n","site":{"data":{"head":"\n<script type=\"text/javascript\" id=\"hexo.headll\">\n(function () {\n  window.addEventListener(\"load\", function () {   //添加load事件\n    $(\"body\").click(function (e) {\n        var a = new Array(\"富强\", \"民主\", \"文明\", \"和谐\", \"自由\", \"平等\", \"公正\", \"法治\", \"爱国\", \"敬业\", \"诚信\", \"友善\");\n        var a_idx=Math.floor(Math.random()*a.length);\n        var $i = $(\"<span/>\").text(a[a_idx]);\n        var x = e.pageX,y = e.pageY;\n        $i.css({\n            \"z-index\": 99999,\n            \"top\": y - 20,\n            \"left\": x,\n            \"position\": \"absolute\",\n            \"font-weight\": \"bold\",\n            \"color\": \"#ff6651\"\n        });\n        $(\"body\").append($i);\n        $i.animate({\n            \"top\": y - 180,\n            \"opacity\": 0\n        },\n        1500,\n        function () {\n            $i.remove();\n        });\n    });\n  }, false);\n})();\n</script>\n\n"}},"excerpt":"<p>Haddop小记<br>","more":"<br>环境：腾讯云CentOS 7 x64<br>目标：安装Hadoop 2.8.0</p>\n<h1 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h1><h2 id=\"安装-OpenJDK-8\"><a href=\"#安装-OpenJDK-8\" class=\"headerlink\" title=\"安装 OpenJDK 8\"></a>安装 OpenJDK 8</h2><p>下载地址：[<a href=\"http://www.oracle.com/technetwork/java/javase/downloads/index.html]\" target=\"_blank\" rel=\"noopener\">http://www.oracle.com/technetwork/java/javase/downloads/index.html]</a><br>修改 vim /etc/profile</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo su</span><br><span class=\"line\">cd ~</span><br><span class=\"line\"></span><br><span class=\"line\">wget http://58.87.87.210/server-jre-8u131-linux-x64.tar</span><br><span class=\"line\"></span><br><span class=\"line\">tar -xf server-jre-8u131-linux-x64.tar</span><br><span class=\"line\">cp -r jdk1.8.0_131 /usr/local/</span><br><span class=\"line\"></span><br><span class=\"line\">#修改/etc/profile</span><br><span class=\"line\">( cat &lt;&lt;EOF</span><br><span class=\"line\"></span><br><span class=\"line\">export JAVA_HOME=/usr/local/jdk1.8.0_131</span><br><span class=\"line\">export JRE_HOME=\\$JAVA_HOME/jre</span><br><span class=\"line\">export CLASSPATH=.:$JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jar:$JRE_HOME/lib:$CLASSPATH</span><br><span class=\"line\">export PATH=\\$JAVA_HOME/bin:\\$PATH</span><br><span class=\"line\">EOF</span><br><span class=\"line\">) &gt;&gt; /etc/profile</span><br><span class=\"line\"></span><br><span class=\"line\">source /etc/profile</span><br></pre></td></tr></table></figure>\n<h2 id=\"依赖\"><a href=\"#依赖\" class=\"headerlink\" title=\"依赖\"></a>依赖</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum install -y ssh rsync</span><br></pre></td></tr></table></figure>\n<h2 id=\"安装hadoop-2-8-0\"><a href=\"#安装hadoop-2-8-0\" class=\"headerlink\" title=\"安装hadoop 2.8.0\"></a>安装hadoop 2.8.0</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget https://mirrors.tuna.tsinghua.edu.cn/apache/hadoop/common/hadoop-2.8.0/hadoop-2.8.0.tar.gz</span><br><span class=\"line\">tar -zxf hadoop-2.8.0.tar.gz</span><br><span class=\"line\">mv hadoop-2.8.0 /usr/local/</span><br><span class=\"line\"></span><br><span class=\"line\">mkdir input</span><br><span class=\"line\">cp etc/hadoop/*.xml input</span><br><span class=\"line\">bin/hadoop jar share/hadoop/mapreduce/hadoop-mapreduce-examples-2.8.0.jar grep input output &apos;dfs[a-z.]+&apos;</span><br><span class=\"line\">cat output/*</span><br></pre></td></tr></table></figure>\n<h2 id=\"使用\"><a href=\"#使用\" class=\"headerlink\" title=\"使用\"></a>使用</h2><h3 id=\"伪分布式的hdfs目录\"><a href=\"#伪分布式的hdfs目录\" class=\"headerlink\" title=\"伪分布式的hdfs目录\"></a>伪分布式的hdfs目录</h3><p>修改 etc/hadoop/core-site.xml，加入<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;property&gt;  </span><br><span class=\"line\">        &lt;name&gt;hadoop.tmp.dir&lt;/name&gt;  </span><br><span class=\"line\">        &lt;value&gt;/data/hadoop/data&lt;/value&gt;  </span><br><span class=\"line\">        &lt;description&gt;A base for other temporary directories.&lt;/description&gt;  </span><br><span class=\"line\">&lt;/property&gt;</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"其他\"><a href=\"#其他\" class=\"headerlink\" title=\"其他\"></a>其他</h3><p>见<a href=\"http://hadoop.apache.org/docs/r2.8.0/hadoop-project-dist/hadoop-common/SingleCluster.html#Execution\" target=\"_blank\" rel=\"noopener\">官方文档</a></p>\n<h1 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h1><ul>\n<li>[<a href=\"http://blog.csdn.net/telnetor/article/details/6993336]\" target=\"_blank\" rel=\"noopener\">http://blog.csdn.net/telnetor/article/details/6993336]</a></li>\n</ul>"},{"title":"Hive小记","date":"2017-06-13T09:26:00.000Z","_content":"\nHive小记\n<!-- MORE -->\n环境：腾讯云CentOS 7 x64  \n目标：安装、使用Hadoop Hive\n\n\n# 安装  \n## 安装 OpenJDK 8\n[Hadoop小记](Hadoop小记)\n\n## 安装 Hive  \n下载网址：[http://mirror.bit.edu.cn/apache/hive/]\n```\nwget http://10.210.0.8/apache-hive-2.1.1-bin.tar.gz\ntar -xzf apache-hive-2.1.1-bin.tar.gz\nmv apache-hive-2.1.1-bin /usr/local/\n\n\n( cat <<EOF\n\nexport HIVE_HOME=/usr/local/apache-hive-2.1.1-bin\nexport PATH=$HIVE_HOME/bin:$PATH\n\nEOF\n) >> /etc/profile\n\nsource /etc/profile\n\n```\n\n## 设置 [metastore](https://cwiki.apache.org/confluence/display/Hive/AdminManual+MetastoreAdmin)\n\n### conf/hive-site.xml\n```\n<configuration>\n   <property>\n      <name>javax.jdo.option.ConnectionURL</name>\n      <value>jdbc:mysql://localhost/metastore?createDatabaseIfNotExist=true</value>\n      <description>metadata is stored in a MySQL server</description>\n   </property>\n   <property>\n      <name>javax.jdo.option.ConnectionDriverName</name>\n      <value>com.mysql.jdbc.Driver</value>\n      <description>MySQL JDBC driver class</description>\n   </property>\n   <property>\n      <name>javax.jdo.option.ConnectionUserName</name>\n      <value>hive</value>\n      <description>user name for connecting to mysql server</description>\n   </property>\n   <property>\n      <name>javax.jdo.option.ConnectionPassword</name>\n      <value>hivepassword</value>\n      <description>password for connecting to mysql server</description>\n   </property>\n</configuration>\n```\n### [jdbc](https://dev.mysql.com/downloads/connector/j/)\n```\nwget https://dev.mysql.com/get/Downloads/Connector-J/mysql-connector-java-5.1.42.zip\nunzip -o mysql-connector-java-5.1.42.zip\nmv mysql-connector-java-5.1.42/mysql-connector-java-5.1.42-bin.jar $HIVE_HOME/lib/\n```\n\n### 启动\n问题：\n```\nUnable to instantiate org.apache.hadoop.hive.ql.metadata.SessionHiveMet\n```\n\n解决：\n```\n# 初始化\nbin/schematool -dbType mysql -initSchema\n```\n\n# 使用\n```\nCREATE EXTERNAL TABLE IF NOT EXISTS maozhua_weight_production (type TINYINT, mark STRING, act TINYINT, uid INT, time int) \nROW FORMAT SERDE 'org.apache.hive.hcatalog.data.JsonSerDe'  \nLOCATION '/maozhua/production/weight';\n\n\nCREATE EXTERNAL TABLE IF NOT EXISTS maozhua_weight_testing (type TINYINT, mark STRING, act TINYINT, uid INT, time int) \nROW FORMAT SERDE 'org.apache.hive.hcatalog.data.JsonSerDe'  \nLOCATION '/maozhua/testing/weight/';\n```\n\n## 问题：递归\n```\nset hive.mapred.supports.subdirectories=true;\nset mapreduce.input.fileinputformat.input.dir.recursive=true;\n```\n\n## 问题：format Json\n\n> FAILED: Execution Error, return code 1 from org.apache.hadoop.hive.ql.exec.DDLTask. Cannot validate serde: org.apache.hive.hcatalog.data.JsonSerDe\n\nHCatalog\n```\nexport CLASSPATH=$HIVE_HOME/hcatalog/share/hcatalog:$CLASSPATH\nADD JAR /usr/local/apache-hive-2.1.1-bin/hcatalog/share/hcatalog/hive-hcatalog-core-2.1.1.jar;\n```\n\n# 参考\n- [官方文档](http://hadoop.apache.org/docs/r2.8.0/hadoop-project-dist/hadoop-common/SingleCluster.html#Execution)\n- [Hadoop 伪分布式下更换默认hadoop.tmp.dir路径](http://blog.csdn.net/telnetor/article/details/6993336)\n- [关于Hive Metastore模式杂谈](http://www.cognoschina.net/Article/122347)\n- [搭建Hive所遇过的坑](http://www.jianshu.com/p/d9cb284f842d)\n","source":"_posts/Hive小记.md","raw":"---\ntitle: Hive小记\ndate: 2017-06-13 17:26:00\ntags:\n  - Hive\ncategories:\n  - Hadoop\n  - 小记\n---\n\nHive小记\n<!-- MORE -->\n环境：腾讯云CentOS 7 x64  \n目标：安装、使用Hadoop Hive\n\n\n# 安装  \n## 安装 OpenJDK 8\n[Hadoop小记](Hadoop小记)\n\n## 安装 Hive  \n下载网址：[http://mirror.bit.edu.cn/apache/hive/]\n```\nwget http://10.210.0.8/apache-hive-2.1.1-bin.tar.gz\ntar -xzf apache-hive-2.1.1-bin.tar.gz\nmv apache-hive-2.1.1-bin /usr/local/\n\n\n( cat <<EOF\n\nexport HIVE_HOME=/usr/local/apache-hive-2.1.1-bin\nexport PATH=$HIVE_HOME/bin:$PATH\n\nEOF\n) >> /etc/profile\n\nsource /etc/profile\n\n```\n\n## 设置 [metastore](https://cwiki.apache.org/confluence/display/Hive/AdminManual+MetastoreAdmin)\n\n### conf/hive-site.xml\n```\n<configuration>\n   <property>\n      <name>javax.jdo.option.ConnectionURL</name>\n      <value>jdbc:mysql://localhost/metastore?createDatabaseIfNotExist=true</value>\n      <description>metadata is stored in a MySQL server</description>\n   </property>\n   <property>\n      <name>javax.jdo.option.ConnectionDriverName</name>\n      <value>com.mysql.jdbc.Driver</value>\n      <description>MySQL JDBC driver class</description>\n   </property>\n   <property>\n      <name>javax.jdo.option.ConnectionUserName</name>\n      <value>hive</value>\n      <description>user name for connecting to mysql server</description>\n   </property>\n   <property>\n      <name>javax.jdo.option.ConnectionPassword</name>\n      <value>hivepassword</value>\n      <description>password for connecting to mysql server</description>\n   </property>\n</configuration>\n```\n### [jdbc](https://dev.mysql.com/downloads/connector/j/)\n```\nwget https://dev.mysql.com/get/Downloads/Connector-J/mysql-connector-java-5.1.42.zip\nunzip -o mysql-connector-java-5.1.42.zip\nmv mysql-connector-java-5.1.42/mysql-connector-java-5.1.42-bin.jar $HIVE_HOME/lib/\n```\n\n### 启动\n问题：\n```\nUnable to instantiate org.apache.hadoop.hive.ql.metadata.SessionHiveMet\n```\n\n解决：\n```\n# 初始化\nbin/schematool -dbType mysql -initSchema\n```\n\n# 使用\n```\nCREATE EXTERNAL TABLE IF NOT EXISTS maozhua_weight_production (type TINYINT, mark STRING, act TINYINT, uid INT, time int) \nROW FORMAT SERDE 'org.apache.hive.hcatalog.data.JsonSerDe'  \nLOCATION '/maozhua/production/weight';\n\n\nCREATE EXTERNAL TABLE IF NOT EXISTS maozhua_weight_testing (type TINYINT, mark STRING, act TINYINT, uid INT, time int) \nROW FORMAT SERDE 'org.apache.hive.hcatalog.data.JsonSerDe'  \nLOCATION '/maozhua/testing/weight/';\n```\n\n## 问题：递归\n```\nset hive.mapred.supports.subdirectories=true;\nset mapreduce.input.fileinputformat.input.dir.recursive=true;\n```\n\n## 问题：format Json\n\n> FAILED: Execution Error, return code 1 from org.apache.hadoop.hive.ql.exec.DDLTask. Cannot validate serde: org.apache.hive.hcatalog.data.JsonSerDe\n\nHCatalog\n```\nexport CLASSPATH=$HIVE_HOME/hcatalog/share/hcatalog:$CLASSPATH\nADD JAR /usr/local/apache-hive-2.1.1-bin/hcatalog/share/hcatalog/hive-hcatalog-core-2.1.1.jar;\n```\n\n# 参考\n- [官方文档](http://hadoop.apache.org/docs/r2.8.0/hadoop-project-dist/hadoop-common/SingleCluster.html#Execution)\n- [Hadoop 伪分布式下更换默认hadoop.tmp.dir路径](http://blog.csdn.net/telnetor/article/details/6993336)\n- [关于Hive Metastore模式杂谈](http://www.cognoschina.net/Article/122347)\n- [搭建Hive所遇过的坑](http://www.jianshu.com/p/d9cb284f842d)\n","slug":"Hive小记","published":1,"updated":"2017-07-27T11:32:21.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjin2pu1h000bnrfy6fd0y7nh","content":"<p>Hive小记<br><a id=\"more\"></a><br>环境：腾讯云CentOS 7 x64<br>目标：安装、使用Hadoop Hive</p>\n<h1 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h1><h2 id=\"安装-OpenJDK-8\"><a href=\"#安装-OpenJDK-8\" class=\"headerlink\" title=\"安装 OpenJDK 8\"></a>安装 OpenJDK 8</h2><p><a href=\"Hadoop小记\">Hadoop小记</a></p>\n<h2 id=\"安装-Hive\"><a href=\"#安装-Hive\" class=\"headerlink\" title=\"安装 Hive\"></a>安装 Hive</h2><p>下载网址：[<a href=\"http://mirror.bit.edu.cn/apache/hive/]\" target=\"_blank\" rel=\"noopener\">http://mirror.bit.edu.cn/apache/hive/]</a><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget http://10.210.0.8/apache-hive-2.1.1-bin.tar.gz</span><br><span class=\"line\">tar -xzf apache-hive-2.1.1-bin.tar.gz</span><br><span class=\"line\">mv apache-hive-2.1.1-bin /usr/local/</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">( cat &lt;&lt;EOF</span><br><span class=\"line\"></span><br><span class=\"line\">export HIVE_HOME=/usr/local/apache-hive-2.1.1-bin</span><br><span class=\"line\">export PATH=$HIVE_HOME/bin:$PATH</span><br><span class=\"line\"></span><br><span class=\"line\">EOF</span><br><span class=\"line\">) &gt;&gt; /etc/profile</span><br><span class=\"line\"></span><br><span class=\"line\">source /etc/profile</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"设置-metastore\"><a href=\"#设置-metastore\" class=\"headerlink\" title=\"设置 metastore\"></a>设置 <a href=\"https://cwiki.apache.org/confluence/display/Hive/AdminManual+MetastoreAdmin\" target=\"_blank\" rel=\"noopener\">metastore</a></h2><h3 id=\"conf-hive-site-xml\"><a href=\"#conf-hive-site-xml\" class=\"headerlink\" title=\"conf/hive-site.xml\"></a>conf/hive-site.xml</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;configuration&gt;</span><br><span class=\"line\">   &lt;property&gt;</span><br><span class=\"line\">      &lt;name&gt;javax.jdo.option.ConnectionURL&lt;/name&gt;</span><br><span class=\"line\">      &lt;value&gt;jdbc:mysql://localhost/metastore?createDatabaseIfNotExist=true&lt;/value&gt;</span><br><span class=\"line\">      &lt;description&gt;metadata is stored in a MySQL server&lt;/description&gt;</span><br><span class=\"line\">   &lt;/property&gt;</span><br><span class=\"line\">   &lt;property&gt;</span><br><span class=\"line\">      &lt;name&gt;javax.jdo.option.ConnectionDriverName&lt;/name&gt;</span><br><span class=\"line\">      &lt;value&gt;com.mysql.jdbc.Driver&lt;/value&gt;</span><br><span class=\"line\">      &lt;description&gt;MySQL JDBC driver class&lt;/description&gt;</span><br><span class=\"line\">   &lt;/property&gt;</span><br><span class=\"line\">   &lt;property&gt;</span><br><span class=\"line\">      &lt;name&gt;javax.jdo.option.ConnectionUserName&lt;/name&gt;</span><br><span class=\"line\">      &lt;value&gt;hive&lt;/value&gt;</span><br><span class=\"line\">      &lt;description&gt;user name for connecting to mysql server&lt;/description&gt;</span><br><span class=\"line\">   &lt;/property&gt;</span><br><span class=\"line\">   &lt;property&gt;</span><br><span class=\"line\">      &lt;name&gt;javax.jdo.option.ConnectionPassword&lt;/name&gt;</span><br><span class=\"line\">      &lt;value&gt;hivepassword&lt;/value&gt;</span><br><span class=\"line\">      &lt;description&gt;password for connecting to mysql server&lt;/description&gt;</span><br><span class=\"line\">   &lt;/property&gt;</span><br><span class=\"line\">&lt;/configuration&gt;</span><br></pre></td></tr></table></figure>\n<h3 id=\"jdbc\"><a href=\"#jdbc\" class=\"headerlink\" title=\"jdbc\"></a><a href=\"https://dev.mysql.com/downloads/connector/j/\" target=\"_blank\" rel=\"noopener\">jdbc</a></h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget https://dev.mysql.com/get/Downloads/Connector-J/mysql-connector-java-5.1.42.zip</span><br><span class=\"line\">unzip -o mysql-connector-java-5.1.42.zip</span><br><span class=\"line\">mv mysql-connector-java-5.1.42/mysql-connector-java-5.1.42-bin.jar $HIVE_HOME/lib/</span><br></pre></td></tr></table></figure>\n<h3 id=\"启动\"><a href=\"#启动\" class=\"headerlink\" title=\"启动\"></a>启动</h3><p>问题：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Unable to instantiate org.apache.hadoop.hive.ql.metadata.SessionHiveMet</span><br></pre></td></tr></table></figure></p>\n<p>解决：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 初始化</span><br><span class=\"line\">bin/schematool -dbType mysql -initSchema</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"使用\"><a href=\"#使用\" class=\"headerlink\" title=\"使用\"></a>使用</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">CREATE EXTERNAL TABLE IF NOT EXISTS maozhua_weight_production (type TINYINT, mark STRING, act TINYINT, uid INT, time int) </span><br><span class=\"line\">ROW FORMAT SERDE &apos;org.apache.hive.hcatalog.data.JsonSerDe&apos;  </span><br><span class=\"line\">LOCATION &apos;/maozhua/production/weight&apos;;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">CREATE EXTERNAL TABLE IF NOT EXISTS maozhua_weight_testing (type TINYINT, mark STRING, act TINYINT, uid INT, time int) </span><br><span class=\"line\">ROW FORMAT SERDE &apos;org.apache.hive.hcatalog.data.JsonSerDe&apos;  </span><br><span class=\"line\">LOCATION &apos;/maozhua/testing/weight/&apos;;</span><br></pre></td></tr></table></figure>\n<h2 id=\"问题：递归\"><a href=\"#问题：递归\" class=\"headerlink\" title=\"问题：递归\"></a>问题：递归</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">set hive.mapred.supports.subdirectories=true;</span><br><span class=\"line\">set mapreduce.input.fileinputformat.input.dir.recursive=true;</span><br></pre></td></tr></table></figure>\n<h2 id=\"问题：format-Json\"><a href=\"#问题：format-Json\" class=\"headerlink\" title=\"问题：format Json\"></a>问题：format Json</h2><blockquote>\n<p>FAILED: Execution Error, return code 1 from org.apache.hadoop.hive.ql.exec.DDLTask. Cannot validate serde: org.apache.hive.hcatalog.data.JsonSerDe</p>\n</blockquote>\n<p>HCatalog<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">export CLASSPATH=$HIVE_HOME/hcatalog/share/hcatalog:$CLASSPATH</span><br><span class=\"line\">ADD JAR /usr/local/apache-hive-2.1.1-bin/hcatalog/share/hcatalog/hive-hcatalog-core-2.1.1.jar;</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h1><ul>\n<li><a href=\"http://hadoop.apache.org/docs/r2.8.0/hadoop-project-dist/hadoop-common/SingleCluster.html#Execution\" target=\"_blank\" rel=\"noopener\">官方文档</a></li>\n<li><a href=\"http://blog.csdn.net/telnetor/article/details/6993336\" target=\"_blank\" rel=\"noopener\">Hadoop 伪分布式下更换默认hadoop.tmp.dir路径</a></li>\n<li><a href=\"http://www.cognoschina.net/Article/122347\" target=\"_blank\" rel=\"noopener\">关于Hive Metastore模式杂谈</a></li>\n<li><a href=\"http://www.jianshu.com/p/d9cb284f842d\" target=\"_blank\" rel=\"noopener\">搭建Hive所遇过的坑</a></li>\n</ul>\n","site":{"data":{"head":"\n<script type=\"text/javascript\" id=\"hexo.headll\">\n(function () {\n  window.addEventListener(\"load\", function () {   //添加load事件\n    $(\"body\").click(function (e) {\n        var a = new Array(\"富强\", \"民主\", \"文明\", \"和谐\", \"自由\", \"平等\", \"公正\", \"法治\", \"爱国\", \"敬业\", \"诚信\", \"友善\");\n        var a_idx=Math.floor(Math.random()*a.length);\n        var $i = $(\"<span/>\").text(a[a_idx]);\n        var x = e.pageX,y = e.pageY;\n        $i.css({\n            \"z-index\": 99999,\n            \"top\": y - 20,\n            \"left\": x,\n            \"position\": \"absolute\",\n            \"font-weight\": \"bold\",\n            \"color\": \"#ff6651\"\n        });\n        $(\"body\").append($i);\n        $i.animate({\n            \"top\": y - 180,\n            \"opacity\": 0\n        },\n        1500,\n        function () {\n            $i.remove();\n        });\n    });\n  }, false);\n})();\n</script>\n\n"}},"excerpt":"<p>Hive小记<br>","more":"<br>环境：腾讯云CentOS 7 x64<br>目标：安装、使用Hadoop Hive</p>\n<h1 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h1><h2 id=\"安装-OpenJDK-8\"><a href=\"#安装-OpenJDK-8\" class=\"headerlink\" title=\"安装 OpenJDK 8\"></a>安装 OpenJDK 8</h2><p><a href=\"Hadoop小记\">Hadoop小记</a></p>\n<h2 id=\"安装-Hive\"><a href=\"#安装-Hive\" class=\"headerlink\" title=\"安装 Hive\"></a>安装 Hive</h2><p>下载网址：[<a href=\"http://mirror.bit.edu.cn/apache/hive/]\" target=\"_blank\" rel=\"noopener\">http://mirror.bit.edu.cn/apache/hive/]</a><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget http://10.210.0.8/apache-hive-2.1.1-bin.tar.gz</span><br><span class=\"line\">tar -xzf apache-hive-2.1.1-bin.tar.gz</span><br><span class=\"line\">mv apache-hive-2.1.1-bin /usr/local/</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">( cat &lt;&lt;EOF</span><br><span class=\"line\"></span><br><span class=\"line\">export HIVE_HOME=/usr/local/apache-hive-2.1.1-bin</span><br><span class=\"line\">export PATH=$HIVE_HOME/bin:$PATH</span><br><span class=\"line\"></span><br><span class=\"line\">EOF</span><br><span class=\"line\">) &gt;&gt; /etc/profile</span><br><span class=\"line\"></span><br><span class=\"line\">source /etc/profile</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"设置-metastore\"><a href=\"#设置-metastore\" class=\"headerlink\" title=\"设置 metastore\"></a>设置 <a href=\"https://cwiki.apache.org/confluence/display/Hive/AdminManual+MetastoreAdmin\" target=\"_blank\" rel=\"noopener\">metastore</a></h2><h3 id=\"conf-hive-site-xml\"><a href=\"#conf-hive-site-xml\" class=\"headerlink\" title=\"conf/hive-site.xml\"></a>conf/hive-site.xml</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;configuration&gt;</span><br><span class=\"line\">   &lt;property&gt;</span><br><span class=\"line\">      &lt;name&gt;javax.jdo.option.ConnectionURL&lt;/name&gt;</span><br><span class=\"line\">      &lt;value&gt;jdbc:mysql://localhost/metastore?createDatabaseIfNotExist=true&lt;/value&gt;</span><br><span class=\"line\">      &lt;description&gt;metadata is stored in a MySQL server&lt;/description&gt;</span><br><span class=\"line\">   &lt;/property&gt;</span><br><span class=\"line\">   &lt;property&gt;</span><br><span class=\"line\">      &lt;name&gt;javax.jdo.option.ConnectionDriverName&lt;/name&gt;</span><br><span class=\"line\">      &lt;value&gt;com.mysql.jdbc.Driver&lt;/value&gt;</span><br><span class=\"line\">      &lt;description&gt;MySQL JDBC driver class&lt;/description&gt;</span><br><span class=\"line\">   &lt;/property&gt;</span><br><span class=\"line\">   &lt;property&gt;</span><br><span class=\"line\">      &lt;name&gt;javax.jdo.option.ConnectionUserName&lt;/name&gt;</span><br><span class=\"line\">      &lt;value&gt;hive&lt;/value&gt;</span><br><span class=\"line\">      &lt;description&gt;user name for connecting to mysql server&lt;/description&gt;</span><br><span class=\"line\">   &lt;/property&gt;</span><br><span class=\"line\">   &lt;property&gt;</span><br><span class=\"line\">      &lt;name&gt;javax.jdo.option.ConnectionPassword&lt;/name&gt;</span><br><span class=\"line\">      &lt;value&gt;hivepassword&lt;/value&gt;</span><br><span class=\"line\">      &lt;description&gt;password for connecting to mysql server&lt;/description&gt;</span><br><span class=\"line\">   &lt;/property&gt;</span><br><span class=\"line\">&lt;/configuration&gt;</span><br></pre></td></tr></table></figure>\n<h3 id=\"jdbc\"><a href=\"#jdbc\" class=\"headerlink\" title=\"jdbc\"></a><a href=\"https://dev.mysql.com/downloads/connector/j/\" target=\"_blank\" rel=\"noopener\">jdbc</a></h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget https://dev.mysql.com/get/Downloads/Connector-J/mysql-connector-java-5.1.42.zip</span><br><span class=\"line\">unzip -o mysql-connector-java-5.1.42.zip</span><br><span class=\"line\">mv mysql-connector-java-5.1.42/mysql-connector-java-5.1.42-bin.jar $HIVE_HOME/lib/</span><br></pre></td></tr></table></figure>\n<h3 id=\"启动\"><a href=\"#启动\" class=\"headerlink\" title=\"启动\"></a>启动</h3><p>问题：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Unable to instantiate org.apache.hadoop.hive.ql.metadata.SessionHiveMet</span><br></pre></td></tr></table></figure></p>\n<p>解决：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 初始化</span><br><span class=\"line\">bin/schematool -dbType mysql -initSchema</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"使用\"><a href=\"#使用\" class=\"headerlink\" title=\"使用\"></a>使用</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">CREATE EXTERNAL TABLE IF NOT EXISTS maozhua_weight_production (type TINYINT, mark STRING, act TINYINT, uid INT, time int) </span><br><span class=\"line\">ROW FORMAT SERDE &apos;org.apache.hive.hcatalog.data.JsonSerDe&apos;  </span><br><span class=\"line\">LOCATION &apos;/maozhua/production/weight&apos;;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">CREATE EXTERNAL TABLE IF NOT EXISTS maozhua_weight_testing (type TINYINT, mark STRING, act TINYINT, uid INT, time int) </span><br><span class=\"line\">ROW FORMAT SERDE &apos;org.apache.hive.hcatalog.data.JsonSerDe&apos;  </span><br><span class=\"line\">LOCATION &apos;/maozhua/testing/weight/&apos;;</span><br></pre></td></tr></table></figure>\n<h2 id=\"问题：递归\"><a href=\"#问题：递归\" class=\"headerlink\" title=\"问题：递归\"></a>问题：递归</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">set hive.mapred.supports.subdirectories=true;</span><br><span class=\"line\">set mapreduce.input.fileinputformat.input.dir.recursive=true;</span><br></pre></td></tr></table></figure>\n<h2 id=\"问题：format-Json\"><a href=\"#问题：format-Json\" class=\"headerlink\" title=\"问题：format Json\"></a>问题：format Json</h2><blockquote>\n<p>FAILED: Execution Error, return code 1 from org.apache.hadoop.hive.ql.exec.DDLTask. Cannot validate serde: org.apache.hive.hcatalog.data.JsonSerDe</p>\n</blockquote>\n<p>HCatalog<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">export CLASSPATH=$HIVE_HOME/hcatalog/share/hcatalog:$CLASSPATH</span><br><span class=\"line\">ADD JAR /usr/local/apache-hive-2.1.1-bin/hcatalog/share/hcatalog/hive-hcatalog-core-2.1.1.jar;</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h1><ul>\n<li><a href=\"http://hadoop.apache.org/docs/r2.8.0/hadoop-project-dist/hadoop-common/SingleCluster.html#Execution\" target=\"_blank\" rel=\"noopener\">官方文档</a></li>\n<li><a href=\"http://blog.csdn.net/telnetor/article/details/6993336\" target=\"_blank\" rel=\"noopener\">Hadoop 伪分布式下更换默认hadoop.tmp.dir路径</a></li>\n<li><a href=\"http://www.cognoschina.net/Article/122347\" target=\"_blank\" rel=\"noopener\">关于Hive Metastore模式杂谈</a></li>\n<li><a href=\"http://www.jianshu.com/p/d9cb284f842d\" target=\"_blank\" rel=\"noopener\">搭建Hive所遇过的坑</a></li>\n</ul>"},{"title":"Linux代理","date":"2017-03-20T09:00:00.000Z","_content":"\n在搭建Rietveld时，碰到需要科学上网的情况。\n\n这里使用 shadowsocks + privoxy\n\n<!-- MORE -->\n# 环境\nLINUX 虚拟机\nCentOS 7\n\n# 方法1，使用宿主机的代理\n```bash\nexport http_proxy=宿主机IP:1080\nexport https_proxy=宿主机IP:1080\nexport ftp_proxy=宿主机IP:1080\nexport no_proxy=\"127.0.0.1, localhost\"\n```\n如本机\n```bash\nexport http_proxy=127.0.0.1:1080\nexport https_proxy=127.0.0.1:1080\nexport ftp_proxy=127.0.0.1:1080\nexport no_proxy=\"127.0.0.1, localhost\"\n\n```\n\n\n# 方法2，独立安装代理\n## shadowsocks python版本\n\n### shadowsocks\n\n```bash\nyum -y install epel-release\nyum install python-pip -y\npip install --upgrade pip\n\npip install shadowsocks\n\n# 配置\n( cat <<EOF\n{\n    \"server\":\"IP地址\",\n    \"server_port\":端口,\n    \"local_address\":\"127.0.0.1\",\n    \"local_port\":1080,\n    \"password\":\"密码\",\n    \"timeout\":300,\n    \"method\":\"加密方式\",\n    \"fast_open\":false\n}\nEOF\n) > /etc/shadowsocks.json\n\n# 启动\nsslocal -c /etc/shadowsocks.json -d start\n```\n\n### 问题\n1. 然而报错 Exception: libsodium not found，发现是系统没有我指定的加密算法chacha20，所需 [libsodium](https://download.libsodium.org/doc/installation/)\n\n```bash\nyum install wget -y\nyum install m2crypto gcc -y\nwget -N --no-check-certificate  https://download.libsodium.org/libsodium/releases/libsodium-1.0.10.tar.gz\ntar zfvx libsodium-1.0.10.tar.gz\ncd libsodium-1.0.10\n./configure\nmake && make install\n(cat <<EOF\n/lib\n/usr/lib64\n/usr/local/lib\nEOF\n) >> /etc/ld.so.conf\nldconfig\n```\n\n\n## privoxy\n\n```bash\nyum install privoxy -y\n\necho \"forward-socks5t   /               127.0.0.1:1080 .\" >> /etc/privoxy/config\n# 启动\nprivoxy /etc/privoxy/config\n\n```\n\n\n## 设置代理\n\n```bash\nexport http_proxy=http://127.0.0.1:8118\nexport https_proxy=http://127.0.0.1:8118\nexport ftp_proxy=http://127.0.0.1:8118\nexport no_proxy=\"127.0.0.1, localhost\"\n```\n\n# 成功\n```bash\ncurl https://google.com\n```\n\n## 简化\n\n```bash\nalias ssinit='nohup sslocal -c /etc/shadowsocks.json &>> /var/log/sslocal.log &'\nalias sson='export http_proxy=http://127.0.0.1:8118 && export https_proxy=http://127.0.0.1:8118 && systemctl start privoxy'\nalias ssoff='unset http_proxy && unset https_proxy && systemctl stop privoxy && pkill sslocal'\n```\n\n## 扩展\n### yum使用\n```bash\n#使用socket代理 \nvim /etc/yum.conf\n#http\nproxy=socks5://127.0.0.1:1080\n#https\nproxy=socks5h://127.0.0.1:1080\n```\n### yum关闭gpgcheck\n```bash\nvim /etc/yum.conf\ngpgcheck=0\n```\n","source":"_posts/Linux代理.md","raw":"---\ntitle: Linux代理\ndate: 2017-03-20 17:00:00\ntags:\n - Linux\n\ncategories:\n - Linux\n\n\n---\n\n在搭建Rietveld时，碰到需要科学上网的情况。\n\n这里使用 shadowsocks + privoxy\n\n<!-- MORE -->\n# 环境\nLINUX 虚拟机\nCentOS 7\n\n# 方法1，使用宿主机的代理\n```bash\nexport http_proxy=宿主机IP:1080\nexport https_proxy=宿主机IP:1080\nexport ftp_proxy=宿主机IP:1080\nexport no_proxy=\"127.0.0.1, localhost\"\n```\n如本机\n```bash\nexport http_proxy=127.0.0.1:1080\nexport https_proxy=127.0.0.1:1080\nexport ftp_proxy=127.0.0.1:1080\nexport no_proxy=\"127.0.0.1, localhost\"\n\n```\n\n\n# 方法2，独立安装代理\n## shadowsocks python版本\n\n### shadowsocks\n\n```bash\nyum -y install epel-release\nyum install python-pip -y\npip install --upgrade pip\n\npip install shadowsocks\n\n# 配置\n( cat <<EOF\n{\n    \"server\":\"IP地址\",\n    \"server_port\":端口,\n    \"local_address\":\"127.0.0.1\",\n    \"local_port\":1080,\n    \"password\":\"密码\",\n    \"timeout\":300,\n    \"method\":\"加密方式\",\n    \"fast_open\":false\n}\nEOF\n) > /etc/shadowsocks.json\n\n# 启动\nsslocal -c /etc/shadowsocks.json -d start\n```\n\n### 问题\n1. 然而报错 Exception: libsodium not found，发现是系统没有我指定的加密算法chacha20，所需 [libsodium](https://download.libsodium.org/doc/installation/)\n\n```bash\nyum install wget -y\nyum install m2crypto gcc -y\nwget -N --no-check-certificate  https://download.libsodium.org/libsodium/releases/libsodium-1.0.10.tar.gz\ntar zfvx libsodium-1.0.10.tar.gz\ncd libsodium-1.0.10\n./configure\nmake && make install\n(cat <<EOF\n/lib\n/usr/lib64\n/usr/local/lib\nEOF\n) >> /etc/ld.so.conf\nldconfig\n```\n\n\n## privoxy\n\n```bash\nyum install privoxy -y\n\necho \"forward-socks5t   /               127.0.0.1:1080 .\" >> /etc/privoxy/config\n# 启动\nprivoxy /etc/privoxy/config\n\n```\n\n\n## 设置代理\n\n```bash\nexport http_proxy=http://127.0.0.1:8118\nexport https_proxy=http://127.0.0.1:8118\nexport ftp_proxy=http://127.0.0.1:8118\nexport no_proxy=\"127.0.0.1, localhost\"\n```\n\n# 成功\n```bash\ncurl https://google.com\n```\n\n## 简化\n\n```bash\nalias ssinit='nohup sslocal -c /etc/shadowsocks.json &>> /var/log/sslocal.log &'\nalias sson='export http_proxy=http://127.0.0.1:8118 && export https_proxy=http://127.0.0.1:8118 && systemctl start privoxy'\nalias ssoff='unset http_proxy && unset https_proxy && systemctl stop privoxy && pkill sslocal'\n```\n\n## 扩展\n### yum使用\n```bash\n#使用socket代理 \nvim /etc/yum.conf\n#http\nproxy=socks5://127.0.0.1:1080\n#https\nproxy=socks5h://127.0.0.1:1080\n```\n### yum关闭gpgcheck\n```bash\nvim /etc/yum.conf\ngpgcheck=0\n```\n","slug":"Linux代理","published":1,"updated":"2018-04-03T06:47:42.064Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjin2pu1j000dnrfyp8r7jkik","content":"<p>在搭建Rietveld时，碰到需要科学上网的情况。</p>\n<p>这里使用 shadowsocks + privoxy</p>\n<a id=\"more\"></a>\n<h1 id=\"环境\"><a href=\"#环境\" class=\"headerlink\" title=\"环境\"></a>环境</h1><p>LINUX 虚拟机<br>CentOS 7</p>\n<h1 id=\"方法1，使用宿主机的代理\"><a href=\"#方法1，使用宿主机的代理\" class=\"headerlink\" title=\"方法1，使用宿主机的代理\"></a>方法1，使用宿主机的代理</h1><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">export</span> http_proxy=宿主机IP:1080</span><br><span class=\"line\"><span class=\"built_in\">export</span> https_proxy=宿主机IP:1080</span><br><span class=\"line\"><span class=\"built_in\">export</span> ftp_proxy=宿主机IP:1080</span><br><span class=\"line\"><span class=\"built_in\">export</span> no_proxy=<span class=\"string\">\"127.0.0.1, localhost\"</span></span><br></pre></td></tr></table></figure>\n<p>如本机<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">export</span> http_proxy=127.0.0.1:1080</span><br><span class=\"line\"><span class=\"built_in\">export</span> https_proxy=127.0.0.1:1080</span><br><span class=\"line\"><span class=\"built_in\">export</span> ftp_proxy=127.0.0.1:1080</span><br><span class=\"line\"><span class=\"built_in\">export</span> no_proxy=<span class=\"string\">\"127.0.0.1, localhost\"</span></span><br></pre></td></tr></table></figure></p>\n<h1 id=\"方法2，独立安装代理\"><a href=\"#方法2，独立安装代理\" class=\"headerlink\" title=\"方法2，独立安装代理\"></a>方法2，独立安装代理</h1><h2 id=\"shadowsocks-python版本\"><a href=\"#shadowsocks-python版本\" class=\"headerlink\" title=\"shadowsocks python版本\"></a>shadowsocks python版本</h2><h3 id=\"shadowsocks\"><a href=\"#shadowsocks\" class=\"headerlink\" title=\"shadowsocks\"></a>shadowsocks</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum -y install epel-release</span><br><span class=\"line\">yum install python-pip -y</span><br><span class=\"line\">pip install --upgrade pip</span><br><span class=\"line\"></span><br><span class=\"line\">pip install shadowsocks</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 配置</span></span><br><span class=\"line\">( cat &lt;&lt;EOF</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"string\">\"server\"</span>:<span class=\"string\">\"IP地址\"</span>,</span><br><span class=\"line\">    <span class=\"string\">\"server_port\"</span>:端口,</span><br><span class=\"line\">    <span class=\"string\">\"local_address\"</span>:<span class=\"string\">\"127.0.0.1\"</span>,</span><br><span class=\"line\">    <span class=\"string\">\"local_port\"</span>:1080,</span><br><span class=\"line\">    <span class=\"string\">\"password\"</span>:<span class=\"string\">\"密码\"</span>,</span><br><span class=\"line\">    <span class=\"string\">\"timeout\"</span>:300,</span><br><span class=\"line\">    <span class=\"string\">\"method\"</span>:<span class=\"string\">\"加密方式\"</span>,</span><br><span class=\"line\">    <span class=\"string\">\"fast_open\"</span>:<span class=\"literal\">false</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\">EOF</span><br><span class=\"line\">) &gt; /etc/shadowsocks.json</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 启动</span></span><br><span class=\"line\">sslocal -c /etc/shadowsocks.json -d start</span><br></pre></td></tr></table></figure>\n<h3 id=\"问题\"><a href=\"#问题\" class=\"headerlink\" title=\"问题\"></a>问题</h3><ol>\n<li>然而报错 Exception: libsodium not found，发现是系统没有我指定的加密算法chacha20，所需 <a href=\"https://download.libsodium.org/doc/installation/\" target=\"_blank\" rel=\"noopener\">libsodium</a></li>\n</ol>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum install wget -y</span><br><span class=\"line\">yum install m2crypto gcc -y</span><br><span class=\"line\">wget -N --no-check-certificate  https://download.libsodium.org/libsodium/releases/libsodium-1.0.10.tar.gz</span><br><span class=\"line\">tar zfvx libsodium-1.0.10.tar.gz</span><br><span class=\"line\"><span class=\"built_in\">cd</span> libsodium-1.0.10</span><br><span class=\"line\">./configure</span><br><span class=\"line\">make &amp;&amp; make install</span><br><span class=\"line\">(cat &lt;&lt;EOF</span><br><span class=\"line\">/lib</span><br><span class=\"line\">/usr/lib64</span><br><span class=\"line\">/usr/<span class=\"built_in\">local</span>/lib</span><br><span class=\"line\">EOF</span><br><span class=\"line\">) &gt;&gt; /etc/ld.so.conf</span><br><span class=\"line\">ldconfig</span><br></pre></td></tr></table></figure>\n<h2 id=\"privoxy\"><a href=\"#privoxy\" class=\"headerlink\" title=\"privoxy\"></a>privoxy</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum install privoxy -y</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">\"forward-socks5t   /               127.0.0.1:1080 .\"</span> &gt;&gt; /etc/privoxy/config</span><br><span class=\"line\"><span class=\"comment\"># 启动</span></span><br><span class=\"line\">privoxy /etc/privoxy/config</span><br></pre></td></tr></table></figure>\n<h2 id=\"设置代理\"><a href=\"#设置代理\" class=\"headerlink\" title=\"设置代理\"></a>设置代理</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">export</span> http_proxy=http://127.0.0.1:8118</span><br><span class=\"line\"><span class=\"built_in\">export</span> https_proxy=http://127.0.0.1:8118</span><br><span class=\"line\"><span class=\"built_in\">export</span> ftp_proxy=http://127.0.0.1:8118</span><br><span class=\"line\"><span class=\"built_in\">export</span> no_proxy=<span class=\"string\">\"127.0.0.1, localhost\"</span></span><br></pre></td></tr></table></figure>\n<h1 id=\"成功\"><a href=\"#成功\" class=\"headerlink\" title=\"成功\"></a>成功</h1><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">curl https://google.com</span><br></pre></td></tr></table></figure>\n<h2 id=\"简化\"><a href=\"#简化\" class=\"headerlink\" title=\"简化\"></a>简化</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">alias</span> ssinit=<span class=\"string\">'nohup sslocal -c /etc/shadowsocks.json &amp;&gt;&gt; /var/log/sslocal.log &amp;'</span></span><br><span class=\"line\"><span class=\"built_in\">alias</span> sson=<span class=\"string\">'export http_proxy=http://127.0.0.1:8118 &amp;&amp; export https_proxy=http://127.0.0.1:8118 &amp;&amp; systemctl start privoxy'</span></span><br><span class=\"line\"><span class=\"built_in\">alias</span> ssoff=<span class=\"string\">'unset http_proxy &amp;&amp; unset https_proxy &amp;&amp; systemctl stop privoxy &amp;&amp; pkill sslocal'</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"扩展\"><a href=\"#扩展\" class=\"headerlink\" title=\"扩展\"></a>扩展</h2><h3 id=\"yum使用\"><a href=\"#yum使用\" class=\"headerlink\" title=\"yum使用\"></a>yum使用</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#使用socket代理 </span></span><br><span class=\"line\">vim /etc/yum.conf</span><br><span class=\"line\"><span class=\"comment\">#http</span></span><br><span class=\"line\">proxy=socks5://127.0.0.1:1080</span><br><span class=\"line\"><span class=\"comment\">#https</span></span><br><span class=\"line\">proxy=socks5h://127.0.0.1:1080</span><br></pre></td></tr></table></figure>\n<h3 id=\"yum关闭gpgcheck\"><a href=\"#yum关闭gpgcheck\" class=\"headerlink\" title=\"yum关闭gpgcheck\"></a>yum关闭gpgcheck</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vim /etc/yum.conf</span><br><span class=\"line\">gpgcheck=0</span><br></pre></td></tr></table></figure>\n","site":{"data":{"head":"\n<script type=\"text/javascript\" id=\"hexo.headll\">\n(function () {\n  window.addEventListener(\"load\", function () {   //添加load事件\n    $(\"body\").click(function (e) {\n        var a = new Array(\"富强\", \"民主\", \"文明\", \"和谐\", \"自由\", \"平等\", \"公正\", \"法治\", \"爱国\", \"敬业\", \"诚信\", \"友善\");\n        var a_idx=Math.floor(Math.random()*a.length);\n        var $i = $(\"<span/>\").text(a[a_idx]);\n        var x = e.pageX,y = e.pageY;\n        $i.css({\n            \"z-index\": 99999,\n            \"top\": y - 20,\n            \"left\": x,\n            \"position\": \"absolute\",\n            \"font-weight\": \"bold\",\n            \"color\": \"#ff6651\"\n        });\n        $(\"body\").append($i);\n        $i.animate({\n            \"top\": y - 180,\n            \"opacity\": 0\n        },\n        1500,\n        function () {\n            $i.remove();\n        });\n    });\n  }, false);\n})();\n</script>\n\n"}},"excerpt":"<p>在搭建Rietveld时，碰到需要科学上网的情况。</p>\n<p>这里使用 shadowsocks + privoxy</p>","more":"<h1 id=\"环境\"><a href=\"#环境\" class=\"headerlink\" title=\"环境\"></a>环境</h1><p>LINUX 虚拟机<br>CentOS 7</p>\n<h1 id=\"方法1，使用宿主机的代理\"><a href=\"#方法1，使用宿主机的代理\" class=\"headerlink\" title=\"方法1，使用宿主机的代理\"></a>方法1，使用宿主机的代理</h1><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">export</span> http_proxy=宿主机IP:1080</span><br><span class=\"line\"><span class=\"built_in\">export</span> https_proxy=宿主机IP:1080</span><br><span class=\"line\"><span class=\"built_in\">export</span> ftp_proxy=宿主机IP:1080</span><br><span class=\"line\"><span class=\"built_in\">export</span> no_proxy=<span class=\"string\">\"127.0.0.1, localhost\"</span></span><br></pre></td></tr></table></figure>\n<p>如本机<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">export</span> http_proxy=127.0.0.1:1080</span><br><span class=\"line\"><span class=\"built_in\">export</span> https_proxy=127.0.0.1:1080</span><br><span class=\"line\"><span class=\"built_in\">export</span> ftp_proxy=127.0.0.1:1080</span><br><span class=\"line\"><span class=\"built_in\">export</span> no_proxy=<span class=\"string\">\"127.0.0.1, localhost\"</span></span><br></pre></td></tr></table></figure></p>\n<h1 id=\"方法2，独立安装代理\"><a href=\"#方法2，独立安装代理\" class=\"headerlink\" title=\"方法2，独立安装代理\"></a>方法2，独立安装代理</h1><h2 id=\"shadowsocks-python版本\"><a href=\"#shadowsocks-python版本\" class=\"headerlink\" title=\"shadowsocks python版本\"></a>shadowsocks python版本</h2><h3 id=\"shadowsocks\"><a href=\"#shadowsocks\" class=\"headerlink\" title=\"shadowsocks\"></a>shadowsocks</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum -y install epel-release</span><br><span class=\"line\">yum install python-pip -y</span><br><span class=\"line\">pip install --upgrade pip</span><br><span class=\"line\"></span><br><span class=\"line\">pip install shadowsocks</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 配置</span></span><br><span class=\"line\">( cat &lt;&lt;EOF</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"string\">\"server\"</span>:<span class=\"string\">\"IP地址\"</span>,</span><br><span class=\"line\">    <span class=\"string\">\"server_port\"</span>:端口,</span><br><span class=\"line\">    <span class=\"string\">\"local_address\"</span>:<span class=\"string\">\"127.0.0.1\"</span>,</span><br><span class=\"line\">    <span class=\"string\">\"local_port\"</span>:1080,</span><br><span class=\"line\">    <span class=\"string\">\"password\"</span>:<span class=\"string\">\"密码\"</span>,</span><br><span class=\"line\">    <span class=\"string\">\"timeout\"</span>:300,</span><br><span class=\"line\">    <span class=\"string\">\"method\"</span>:<span class=\"string\">\"加密方式\"</span>,</span><br><span class=\"line\">    <span class=\"string\">\"fast_open\"</span>:<span class=\"literal\">false</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\">EOF</span><br><span class=\"line\">) &gt; /etc/shadowsocks.json</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 启动</span></span><br><span class=\"line\">sslocal -c /etc/shadowsocks.json -d start</span><br></pre></td></tr></table></figure>\n<h3 id=\"问题\"><a href=\"#问题\" class=\"headerlink\" title=\"问题\"></a>问题</h3><ol>\n<li>然而报错 Exception: libsodium not found，发现是系统没有我指定的加密算法chacha20，所需 <a href=\"https://download.libsodium.org/doc/installation/\" target=\"_blank\" rel=\"noopener\">libsodium</a></li>\n</ol>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum install wget -y</span><br><span class=\"line\">yum install m2crypto gcc -y</span><br><span class=\"line\">wget -N --no-check-certificate  https://download.libsodium.org/libsodium/releases/libsodium-1.0.10.tar.gz</span><br><span class=\"line\">tar zfvx libsodium-1.0.10.tar.gz</span><br><span class=\"line\"><span class=\"built_in\">cd</span> libsodium-1.0.10</span><br><span class=\"line\">./configure</span><br><span class=\"line\">make &amp;&amp; make install</span><br><span class=\"line\">(cat &lt;&lt;EOF</span><br><span class=\"line\">/lib</span><br><span class=\"line\">/usr/lib64</span><br><span class=\"line\">/usr/<span class=\"built_in\">local</span>/lib</span><br><span class=\"line\">EOF</span><br><span class=\"line\">) &gt;&gt; /etc/ld.so.conf</span><br><span class=\"line\">ldconfig</span><br></pre></td></tr></table></figure>\n<h2 id=\"privoxy\"><a href=\"#privoxy\" class=\"headerlink\" title=\"privoxy\"></a>privoxy</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum install privoxy -y</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">\"forward-socks5t   /               127.0.0.1:1080 .\"</span> &gt;&gt; /etc/privoxy/config</span><br><span class=\"line\"><span class=\"comment\"># 启动</span></span><br><span class=\"line\">privoxy /etc/privoxy/config</span><br></pre></td></tr></table></figure>\n<h2 id=\"设置代理\"><a href=\"#设置代理\" class=\"headerlink\" title=\"设置代理\"></a>设置代理</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">export</span> http_proxy=http://127.0.0.1:8118</span><br><span class=\"line\"><span class=\"built_in\">export</span> https_proxy=http://127.0.0.1:8118</span><br><span class=\"line\"><span class=\"built_in\">export</span> ftp_proxy=http://127.0.0.1:8118</span><br><span class=\"line\"><span class=\"built_in\">export</span> no_proxy=<span class=\"string\">\"127.0.0.1, localhost\"</span></span><br></pre></td></tr></table></figure>\n<h1 id=\"成功\"><a href=\"#成功\" class=\"headerlink\" title=\"成功\"></a>成功</h1><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">curl https://google.com</span><br></pre></td></tr></table></figure>\n<h2 id=\"简化\"><a href=\"#简化\" class=\"headerlink\" title=\"简化\"></a>简化</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">alias</span> ssinit=<span class=\"string\">'nohup sslocal -c /etc/shadowsocks.json &amp;&gt;&gt; /var/log/sslocal.log &amp;'</span></span><br><span class=\"line\"><span class=\"built_in\">alias</span> sson=<span class=\"string\">'export http_proxy=http://127.0.0.1:8118 &amp;&amp; export https_proxy=http://127.0.0.1:8118 &amp;&amp; systemctl start privoxy'</span></span><br><span class=\"line\"><span class=\"built_in\">alias</span> ssoff=<span class=\"string\">'unset http_proxy &amp;&amp; unset https_proxy &amp;&amp; systemctl stop privoxy &amp;&amp; pkill sslocal'</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"扩展\"><a href=\"#扩展\" class=\"headerlink\" title=\"扩展\"></a>扩展</h2><h3 id=\"yum使用\"><a href=\"#yum使用\" class=\"headerlink\" title=\"yum使用\"></a>yum使用</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#使用socket代理 </span></span><br><span class=\"line\">vim /etc/yum.conf</span><br><span class=\"line\"><span class=\"comment\">#http</span></span><br><span class=\"line\">proxy=socks5://127.0.0.1:1080</span><br><span class=\"line\"><span class=\"comment\">#https</span></span><br><span class=\"line\">proxy=socks5h://127.0.0.1:1080</span><br></pre></td></tr></table></figure>\n<h3 id=\"yum关闭gpgcheck\"><a href=\"#yum关闭gpgcheck\" class=\"headerlink\" title=\"yum关闭gpgcheck\"></a>yum关闭gpgcheck</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vim /etc/yum.conf</span><br><span class=\"line\">gpgcheck=0</span><br></pre></td></tr></table></figure>"},{"title":"Mac使用","date":"2017-05-11T13:14:00.000Z","_content":"\nMac使用\n\n\n<!-- MORE -->\n\n# ssh登陆  \n不用每次输入完整命令、密码\n## 使用expect  \n使用iterm2终端，ssh + expect + 别名\n\n** 此种方式登陆会出现lrzsz没效果的情况！！ **\n1. yum install expect -y\n\n- ~/expect/login.sh \n```\n#! /usr/bin/expect\nset timeout 30\neval spawn [lrange $argv 1 end]\nexpect {\n        \"(yes/no)?\"\n        {send \"yes\\n\";exp_continue}\n        \"password:\"\n        {send \"[lindex $argv 0]\\n\"}\n}\ninteract\n```\n\n- ~/.bash_profile  \nexpect ~/expect/login.sh 密码 ssh 完整命令\n```\nalias lssh-vultr='expect ~/expect/login.sh 密码 ssh root@45.77.12.xxx'\n```\n\n- source ~/.bash_profile\n\n使用 lssh-vultr 直接登陆\n\n## 使用 sshpass\n\n## 使用.ssh (推荐)\n\n\n# 终端文字颜色\n1. ~/.bash_profile\n```\nalias ls='ls -G'\nalias ll='ls -l'\nalias grep='grep --color'\n```\n- source ~/.bash_profile\n","source":"_posts/Mac使用.md","raw":"---\ntitle: Mac使用\ndate: 2017-05-11T21:14:00.000Z\ntags:\n  - Mac\ncategories:\n  - Mac\n---\n\nMac使用\n\n\n<!-- MORE -->\n\n# ssh登陆  \n不用每次输入完整命令、密码\n## 使用expect  \n使用iterm2终端，ssh + expect + 别名\n\n** 此种方式登陆会出现lrzsz没效果的情况！！ **\n1. yum install expect -y\n\n- ~/expect/login.sh \n```\n#! /usr/bin/expect\nset timeout 30\neval spawn [lrange $argv 1 end]\nexpect {\n        \"(yes/no)?\"\n        {send \"yes\\n\";exp_continue}\n        \"password:\"\n        {send \"[lindex $argv 0]\\n\"}\n}\ninteract\n```\n\n- ~/.bash_profile  \nexpect ~/expect/login.sh 密码 ssh 完整命令\n```\nalias lssh-vultr='expect ~/expect/login.sh 密码 ssh root@45.77.12.xxx'\n```\n\n- source ~/.bash_profile\n\n使用 lssh-vultr 直接登陆\n\n## 使用 sshpass\n\n## 使用.ssh (推荐)\n\n\n# 终端文字颜色\n1. ~/.bash_profile\n```\nalias ls='ls -G'\nalias ll='ls -l'\nalias grep='grep --color'\n```\n- source ~/.bash_profile\n","slug":"Mac使用","published":1,"updated":"2017-05-19T17:05:37.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjin2pu1l000gnrfy03cesyyr","content":"<p>Mac使用</p>\n<a id=\"more\"></a>\n<h1 id=\"ssh登陆\"><a href=\"#ssh登陆\" class=\"headerlink\" title=\"ssh登陆\"></a>ssh登陆</h1><p>不用每次输入完整命令、密码</p>\n<h2 id=\"使用expect\"><a href=\"#使用expect\" class=\"headerlink\" title=\"使用expect\"></a>使用expect</h2><p>使用iterm2终端，ssh + expect + 别名</p>\n<p><strong> 此种方式登陆会出现lrzsz没效果的情况！！ </strong></p>\n<ol>\n<li>yum install expect -y</li>\n</ol>\n<ul>\n<li><p>~/expect/login.sh </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#! /usr/bin/expect</span><br><span class=\"line\">set timeout 30</span><br><span class=\"line\">eval spawn [lrange $argv 1 end]</span><br><span class=\"line\">expect &#123;</span><br><span class=\"line\">        &quot;(yes/no)?&quot;</span><br><span class=\"line\">        &#123;send &quot;yes\\n&quot;;exp_continue&#125;</span><br><span class=\"line\">        &quot;password:&quot;</span><br><span class=\"line\">        &#123;send &quot;[lindex $argv 0]\\n&quot;&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">interact</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>~/.bash_profile<br>expect ~/expect/login.sh 密码 ssh 完整命令</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">alias lssh-vultr=&apos;expect ~/expect/login.sh 密码 ssh root@45.77.12.xxx&apos;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>source ~/.bash_profile</p>\n</li>\n</ul>\n<p>使用 lssh-vultr 直接登陆</p>\n<h2 id=\"使用-sshpass\"><a href=\"#使用-sshpass\" class=\"headerlink\" title=\"使用 sshpass\"></a>使用 sshpass</h2><h2 id=\"使用-ssh-推荐\"><a href=\"#使用-ssh-推荐\" class=\"headerlink\" title=\"使用.ssh (推荐)\"></a>使用.ssh (推荐)</h2><h1 id=\"终端文字颜色\"><a href=\"#终端文字颜色\" class=\"headerlink\" title=\"终端文字颜色\"></a>终端文字颜色</h1><ol>\n<li>~/.bash_profile<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">alias ls=&apos;ls -G&apos;</span><br><span class=\"line\">alias ll=&apos;ls -l&apos;</span><br><span class=\"line\">alias grep=&apos;grep --color&apos;</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<ul>\n<li>source ~/.bash_profile</li>\n</ul>\n","site":{"data":{"head":"\n<script type=\"text/javascript\" id=\"hexo.headll\">\n(function () {\n  window.addEventListener(\"load\", function () {   //添加load事件\n    $(\"body\").click(function (e) {\n        var a = new Array(\"富强\", \"民主\", \"文明\", \"和谐\", \"自由\", \"平等\", \"公正\", \"法治\", \"爱国\", \"敬业\", \"诚信\", \"友善\");\n        var a_idx=Math.floor(Math.random()*a.length);\n        var $i = $(\"<span/>\").text(a[a_idx]);\n        var x = e.pageX,y = e.pageY;\n        $i.css({\n            \"z-index\": 99999,\n            \"top\": y - 20,\n            \"left\": x,\n            \"position\": \"absolute\",\n            \"font-weight\": \"bold\",\n            \"color\": \"#ff6651\"\n        });\n        $(\"body\").append($i);\n        $i.animate({\n            \"top\": y - 180,\n            \"opacity\": 0\n        },\n        1500,\n        function () {\n            $i.remove();\n        });\n    });\n  }, false);\n})();\n</script>\n\n"}},"excerpt":"<p>Mac使用</p>","more":"<h1 id=\"ssh登陆\"><a href=\"#ssh登陆\" class=\"headerlink\" title=\"ssh登陆\"></a>ssh登陆</h1><p>不用每次输入完整命令、密码</p>\n<h2 id=\"使用expect\"><a href=\"#使用expect\" class=\"headerlink\" title=\"使用expect\"></a>使用expect</h2><p>使用iterm2终端，ssh + expect + 别名</p>\n<p><strong> 此种方式登陆会出现lrzsz没效果的情况！！ </strong></p>\n<ol>\n<li>yum install expect -y</li>\n</ol>\n<ul>\n<li><p>~/expect/login.sh </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#! /usr/bin/expect</span><br><span class=\"line\">set timeout 30</span><br><span class=\"line\">eval spawn [lrange $argv 1 end]</span><br><span class=\"line\">expect &#123;</span><br><span class=\"line\">        &quot;(yes/no)?&quot;</span><br><span class=\"line\">        &#123;send &quot;yes\\n&quot;;exp_continue&#125;</span><br><span class=\"line\">        &quot;password:&quot;</span><br><span class=\"line\">        &#123;send &quot;[lindex $argv 0]\\n&quot;&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">interact</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>~/.bash_profile<br>expect ~/expect/login.sh 密码 ssh 完整命令</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">alias lssh-vultr=&apos;expect ~/expect/login.sh 密码 ssh root@45.77.12.xxx&apos;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>source ~/.bash_profile</p>\n</li>\n</ul>\n<p>使用 lssh-vultr 直接登陆</p>\n<h2 id=\"使用-sshpass\"><a href=\"#使用-sshpass\" class=\"headerlink\" title=\"使用 sshpass\"></a>使用 sshpass</h2><h2 id=\"使用-ssh-推荐\"><a href=\"#使用-ssh-推荐\" class=\"headerlink\" title=\"使用.ssh (推荐)\"></a>使用.ssh (推荐)</h2><h1 id=\"终端文字颜色\"><a href=\"#终端文字颜色\" class=\"headerlink\" title=\"终端文字颜色\"></a>终端文字颜色</h1><ol>\n<li>~/.bash_profile<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">alias ls=&apos;ls -G&apos;</span><br><span class=\"line\">alias ll=&apos;ls -l&apos;</span><br><span class=\"line\">alias grep=&apos;grep --color&apos;</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<ul>\n<li>source ~/.bash_profile</li>\n</ul>"},{"title":"NewSQL","date":"2017-05-22T08:55:00.000Z","_content":"\n\n<!-- MORE -->\n## 参考\n* [数据库功能深度解析：怎样打造一个分布式数据库](http://www.raincent.com/content-85-7363-1.html)\n* [TiDB 的正确使用姿势](https://segmentfault.com/a/1190000008643974)\n","source":"_posts/NewSQL.md","raw":"---\ntitle: NewSQL\ndate: 2017-05-22T16:55:00.000Z\ntags:\n  - mysql\n  - sql\n  - nosql\n  - 分布式数据库\n---\n\n\n<!-- MORE -->\n## 参考\n* [数据库功能深度解析：怎样打造一个分布式数据库](http://www.raincent.com/content-85-7363-1.html)\n* [TiDB 的正确使用姿势](https://segmentfault.com/a/1190000008643974)\n","slug":"NewSQL","published":1,"updated":"2018-04-18T06:41:32.876Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjin2pu1m000inrfycaym2xbo","content":"<a id=\"more\"></a>\n<h2 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h2><ul>\n<li><a href=\"http://www.raincent.com/content-85-7363-1.html\" target=\"_blank\" rel=\"noopener\">数据库功能深度解析：怎样打造一个分布式数据库</a></li>\n<li><a href=\"https://segmentfault.com/a/1190000008643974\" target=\"_blank\" rel=\"noopener\">TiDB 的正确使用姿势</a></li>\n</ul>\n","site":{"data":{"head":"\n<script type=\"text/javascript\" id=\"hexo.headll\">\n(function () {\n  window.addEventListener(\"load\", function () {   //添加load事件\n    $(\"body\").click(function (e) {\n        var a = new Array(\"富强\", \"民主\", \"文明\", \"和谐\", \"自由\", \"平等\", \"公正\", \"法治\", \"爱国\", \"敬业\", \"诚信\", \"友善\");\n        var a_idx=Math.floor(Math.random()*a.length);\n        var $i = $(\"<span/>\").text(a[a_idx]);\n        var x = e.pageX,y = e.pageY;\n        $i.css({\n            \"z-index\": 99999,\n            \"top\": y - 20,\n            \"left\": x,\n            \"position\": \"absolute\",\n            \"font-weight\": \"bold\",\n            \"color\": \"#ff6651\"\n        });\n        $(\"body\").append($i);\n        $i.animate({\n            \"top\": y - 180,\n            \"opacity\": 0\n        },\n        1500,\n        function () {\n            $i.remove();\n        });\n    });\n  }, false);\n})();\n</script>\n\n"}},"excerpt":"","more":"<h2 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h2><ul>\n<li><a href=\"http://www.raincent.com/content-85-7363-1.html\" target=\"_blank\" rel=\"noopener\">数据库功能深度解析：怎样打造一个分布式数据库</a></li>\n<li><a href=\"https://segmentfault.com/a/1190000008643974\" target=\"_blank\" rel=\"noopener\">TiDB 的正确使用姿势</a></li>\n</ul>"},{"title":"PHP性能分析工具","date":"2017-06-28T09:26:00.000Z","_content":"\nPHP性能分析工具\ntideways：\nxhgui：用于显示xhprof数据的图形界面。\n<!-- MORE -->\n环境：腾讯云CentOS 7 x64  \nphp 7.1\n\n\n## 安装\n### mongodb  \nvi /etc/yum.repos.d/mongodb-org-3.2.repo \n```\n[mongodb-org-3.2]\nname=MongoDB Repository\nbaseurl=https://repo.mongodb.org/yum/redhat/$releasever/mongodb-org/3.2/x86_64/\ngpgcheck=1\nenabled=1\ngpgkey=https://www.mongodb.org/static/pgp/server-3.2.asc\n```\n\n安装\n```\nyum -y install mongodb-org\n```\n\n启动\n```\nmkdir -p /data/mongodb/db\nmongod --dbpath=/data/mongodb/db --fork --logpath=/data/mongodb/mongodb.log\n```\n\n### xhgui\n#### 前置：mongodb扩展\n```\n# ubuntu\n# yum install libssl openssl-devel  -y\n# ln -s /usr/lib/x86_64-linux-gnu/libssl.so  /usr/lib\n# pecl install mongodb\n\n\ngit clone https://github.com/mongodb/mongo-php-driver.git\ncd mongo-php-driver\ngit submodule sync && git submodule update --init\nphpize\n./configure\nmake all -j 5\nmake install\n\n```\n在 fpm/php.ini和cli/php.ini里打开扩展，如\n```\necho \"extension=mongodb.so\" >> /usr/local/serv/php/etc/php.ini\necho \"extension=mongodb.so\" >> /usr/local/serv/php/lib/php.ini\n\n```\n#### php install.php\nphp7.1没有mcrypt扩展，php install.php执行时会可能会出现问题，其引用的require修改成“>”版本即可\n>Problem 1\n>    - Installation request for slim/slim 2.3.1 -> satisfiable by slim/slim[2.3.1].\n>    - slim/slim 2.3.1 requires ext-mcrypt * -> the requested PHP extension mcrypt is missing from your system.\n\n\n#### 安装\n```\ngit clone https://github.com/maxincai/xhgui.git profiler.maozhuar.com\ncd profiler.maozhuar.com\n\n\n```\n#### 索引\n```\nmongo\n```\n```\nuse xhprof\ndb.results.ensureIndex( { 'meta.SERVER.REQUEST_TIME' : -1 } )\ndb.results.ensureIndex( { 'profile.main().wt' : -1 } )\ndb.results.ensureIndex( { 'profile.main().mu' : -1 } )\ndb.results.ensureIndex( { 'profile.main().cpu' : -1 } )\ndb.results.ensureIndex( { 'meta.url' : 1 } )\n```\n\n#### nginx配置\n```\nserver {\n    server_name profiler.maozhuar.com;\n    root /data/www/htdocs/profiler.maozhuar.com/webroot;\n\n    location ~ \\.php {\n        fastcgi_pass   localhost:9002;\n    }\n    try_files $uri $uri/ /index.php?$query_string;\n}\n```\n\n### tideways\n> 见该安装地址，选择系统安装方式`https://tideways.io/profiler/docs/setup/installation`\n\n\n#### 配置\n```\necho \"extension=tideways.so\" >> /usr/local/serv/php/etc/php.ini\necho \"tideways.sample_rate=25\" >> /usr/local/serv/php/etc/php.ini\necho \"auto_prepend_file=/data/www/htdocs/xhgui/external/header.php\" >> /usr/local/serv/php/etc/php.ini\n```\n\n\n\n## 参考\n- [PHP性能被动分析工具之xhgui加tideways的安装实践](https://segmentfault.com/a/1190000007580819)\n- [CentOS 7 yum方式快速安装MongoDB](http://blog.csdn.net/leshami/article/details/53171375)\n","source":"_posts/PHP性能分析工具.md","raw":"---\ntitle: PHP性能分析工具\ndate: 2017-06-28 17:26:00\ntags:\n  - PHP\n  - 工具\ncategories:\n  - PHP\n---\n\nPHP性能分析工具\ntideways：\nxhgui：用于显示xhprof数据的图形界面。\n<!-- MORE -->\n环境：腾讯云CentOS 7 x64  \nphp 7.1\n\n\n## 安装\n### mongodb  \nvi /etc/yum.repos.d/mongodb-org-3.2.repo \n```\n[mongodb-org-3.2]\nname=MongoDB Repository\nbaseurl=https://repo.mongodb.org/yum/redhat/$releasever/mongodb-org/3.2/x86_64/\ngpgcheck=1\nenabled=1\ngpgkey=https://www.mongodb.org/static/pgp/server-3.2.asc\n```\n\n安装\n```\nyum -y install mongodb-org\n```\n\n启动\n```\nmkdir -p /data/mongodb/db\nmongod --dbpath=/data/mongodb/db --fork --logpath=/data/mongodb/mongodb.log\n```\n\n### xhgui\n#### 前置：mongodb扩展\n```\n# ubuntu\n# yum install libssl openssl-devel  -y\n# ln -s /usr/lib/x86_64-linux-gnu/libssl.so  /usr/lib\n# pecl install mongodb\n\n\ngit clone https://github.com/mongodb/mongo-php-driver.git\ncd mongo-php-driver\ngit submodule sync && git submodule update --init\nphpize\n./configure\nmake all -j 5\nmake install\n\n```\n在 fpm/php.ini和cli/php.ini里打开扩展，如\n```\necho \"extension=mongodb.so\" >> /usr/local/serv/php/etc/php.ini\necho \"extension=mongodb.so\" >> /usr/local/serv/php/lib/php.ini\n\n```\n#### php install.php\nphp7.1没有mcrypt扩展，php install.php执行时会可能会出现问题，其引用的require修改成“>”版本即可\n>Problem 1\n>    - Installation request for slim/slim 2.3.1 -> satisfiable by slim/slim[2.3.1].\n>    - slim/slim 2.3.1 requires ext-mcrypt * -> the requested PHP extension mcrypt is missing from your system.\n\n\n#### 安装\n```\ngit clone https://github.com/maxincai/xhgui.git profiler.maozhuar.com\ncd profiler.maozhuar.com\n\n\n```\n#### 索引\n```\nmongo\n```\n```\nuse xhprof\ndb.results.ensureIndex( { 'meta.SERVER.REQUEST_TIME' : -1 } )\ndb.results.ensureIndex( { 'profile.main().wt' : -1 } )\ndb.results.ensureIndex( { 'profile.main().mu' : -1 } )\ndb.results.ensureIndex( { 'profile.main().cpu' : -1 } )\ndb.results.ensureIndex( { 'meta.url' : 1 } )\n```\n\n#### nginx配置\n```\nserver {\n    server_name profiler.maozhuar.com;\n    root /data/www/htdocs/profiler.maozhuar.com/webroot;\n\n    location ~ \\.php {\n        fastcgi_pass   localhost:9002;\n    }\n    try_files $uri $uri/ /index.php?$query_string;\n}\n```\n\n### tideways\n> 见该安装地址，选择系统安装方式`https://tideways.io/profiler/docs/setup/installation`\n\n\n#### 配置\n```\necho \"extension=tideways.so\" >> /usr/local/serv/php/etc/php.ini\necho \"tideways.sample_rate=25\" >> /usr/local/serv/php/etc/php.ini\necho \"auto_prepend_file=/data/www/htdocs/xhgui/external/header.php\" >> /usr/local/serv/php/etc/php.ini\n```\n\n\n\n## 参考\n- [PHP性能被动分析工具之xhgui加tideways的安装实践](https://segmentfault.com/a/1190000007580819)\n- [CentOS 7 yum方式快速安装MongoDB](http://blog.csdn.net/leshami/article/details/53171375)\n","slug":"PHP性能分析工具","published":1,"updated":"2017-12-25T14:43:00.930Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjin2pu1o000nnrfylr4gd4e7","content":"<p>PHP性能分析工具<br>tideways：<br>xhgui：用于显示xhprof数据的图形界面。<br><a id=\"more\"></a><br>环境：腾讯云CentOS 7 x64<br>php 7.1</p>\n<h2 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h2><h3 id=\"mongodb\"><a href=\"#mongodb\" class=\"headerlink\" title=\"mongodb\"></a>mongodb</h3><p>vi /etc/yum.repos.d/mongodb-org-3.2.repo<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[mongodb-org-3.2]</span><br><span class=\"line\">name=MongoDB Repository</span><br><span class=\"line\">baseurl=https://repo.mongodb.org/yum/redhat/$releasever/mongodb-org/3.2/x86_64/</span><br><span class=\"line\">gpgcheck=1</span><br><span class=\"line\">enabled=1</span><br><span class=\"line\">gpgkey=https://www.mongodb.org/static/pgp/server-3.2.asc</span><br></pre></td></tr></table></figure></p>\n<p>安装<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum -y install mongodb-org</span><br></pre></td></tr></table></figure></p>\n<p>启动<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mkdir -p /data/mongodb/db</span><br><span class=\"line\">mongod --dbpath=/data/mongodb/db --fork --logpath=/data/mongodb/mongodb.log</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"xhgui\"><a href=\"#xhgui\" class=\"headerlink\" title=\"xhgui\"></a>xhgui</h3><h4 id=\"前置：mongodb扩展\"><a href=\"#前置：mongodb扩展\" class=\"headerlink\" title=\"前置：mongodb扩展\"></a>前置：mongodb扩展</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># ubuntu</span><br><span class=\"line\"># yum install libssl openssl-devel  -y</span><br><span class=\"line\"># ln -s /usr/lib/x86_64-linux-gnu/libssl.so  /usr/lib</span><br><span class=\"line\"># pecl install mongodb</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">git clone https://github.com/mongodb/mongo-php-driver.git</span><br><span class=\"line\">cd mongo-php-driver</span><br><span class=\"line\">git submodule sync &amp;&amp; git submodule update --init</span><br><span class=\"line\">phpize</span><br><span class=\"line\">./configure</span><br><span class=\"line\">make all -j 5</span><br><span class=\"line\">make install</span><br></pre></td></tr></table></figure>\n<p>在 fpm/php.ini和cli/php.ini里打开扩展，如<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">echo &quot;extension=mongodb.so&quot; &gt;&gt; /usr/local/serv/php/etc/php.ini</span><br><span class=\"line\">echo &quot;extension=mongodb.so&quot; &gt;&gt; /usr/local/serv/php/lib/php.ini</span><br></pre></td></tr></table></figure></p>\n<h4 id=\"php-install-php\"><a href=\"#php-install-php\" class=\"headerlink\" title=\"php install.php\"></a>php install.php</h4><p>php7.1没有mcrypt扩展，php install.php执行时会可能会出现问题，其引用的require修改成“&gt;”版本即可</p>\n<blockquote>\n<p>Problem 1</p>\n<ul>\n<li>Installation request for slim/slim 2.3.1 -&gt; satisfiable by slim/slim[2.3.1].</li>\n<li>slim/slim 2.3.1 requires ext-mcrypt * -&gt; the requested PHP extension mcrypt is missing from your system.</li>\n</ul>\n</blockquote>\n<h4 id=\"安装-1\"><a href=\"#安装-1\" class=\"headerlink\" title=\"安装\"></a>安装</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git clone https://github.com/maxincai/xhgui.git profiler.maozhuar.com</span><br><span class=\"line\">cd profiler.maozhuar.com</span><br></pre></td></tr></table></figure>\n<h4 id=\"索引\"><a href=\"#索引\" class=\"headerlink\" title=\"索引\"></a>索引</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mongo</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">use xhprof</span><br><span class=\"line\">db.results.ensureIndex( &#123; &apos;meta.SERVER.REQUEST_TIME&apos; : -1 &#125; )</span><br><span class=\"line\">db.results.ensureIndex( &#123; &apos;profile.main().wt&apos; : -1 &#125; )</span><br><span class=\"line\">db.results.ensureIndex( &#123; &apos;profile.main().mu&apos; : -1 &#125; )</span><br><span class=\"line\">db.results.ensureIndex( &#123; &apos;profile.main().cpu&apos; : -1 &#125; )</span><br><span class=\"line\">db.results.ensureIndex( &#123; &apos;meta.url&apos; : 1 &#125; )</span><br></pre></td></tr></table></figure>\n<h4 id=\"nginx配置\"><a href=\"#nginx配置\" class=\"headerlink\" title=\"nginx配置\"></a>nginx配置</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">server &#123;</span><br><span class=\"line\">    server_name profiler.maozhuar.com;</span><br><span class=\"line\">    root /data/www/htdocs/profiler.maozhuar.com/webroot;</span><br><span class=\"line\"></span><br><span class=\"line\">    location ~ \\.php &#123;</span><br><span class=\"line\">        fastcgi_pass   localhost:9002;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    try_files $uri $uri/ /index.php?$query_string;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"tideways\"><a href=\"#tideways\" class=\"headerlink\" title=\"tideways\"></a>tideways</h3><blockquote>\n<p>见该安装地址，选择系统安装方式<code>https://tideways.io/profiler/docs/setup/installation</code></p>\n</blockquote>\n<h4 id=\"配置\"><a href=\"#配置\" class=\"headerlink\" title=\"配置\"></a>配置</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">echo &quot;extension=tideways.so&quot; &gt;&gt; /usr/local/serv/php/etc/php.ini</span><br><span class=\"line\">echo &quot;tideways.sample_rate=25&quot; &gt;&gt; /usr/local/serv/php/etc/php.ini</span><br><span class=\"line\">echo &quot;auto_prepend_file=/data/www/htdocs/xhgui/external/header.php&quot; &gt;&gt; /usr/local/serv/php/etc/php.ini</span><br></pre></td></tr></table></figure>\n<h2 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h2><ul>\n<li><a href=\"https://segmentfault.com/a/1190000007580819\" target=\"_blank\" rel=\"noopener\">PHP性能被动分析工具之xhgui加tideways的安装实践</a></li>\n<li><a href=\"http://blog.csdn.net/leshami/article/details/53171375\" target=\"_blank\" rel=\"noopener\">CentOS 7 yum方式快速安装MongoDB</a></li>\n</ul>\n","site":{"data":{"head":"\n<script type=\"text/javascript\" id=\"hexo.headll\">\n(function () {\n  window.addEventListener(\"load\", function () {   //添加load事件\n    $(\"body\").click(function (e) {\n        var a = new Array(\"富强\", \"民主\", \"文明\", \"和谐\", \"自由\", \"平等\", \"公正\", \"法治\", \"爱国\", \"敬业\", \"诚信\", \"友善\");\n        var a_idx=Math.floor(Math.random()*a.length);\n        var $i = $(\"<span/>\").text(a[a_idx]);\n        var x = e.pageX,y = e.pageY;\n        $i.css({\n            \"z-index\": 99999,\n            \"top\": y - 20,\n            \"left\": x,\n            \"position\": \"absolute\",\n            \"font-weight\": \"bold\",\n            \"color\": \"#ff6651\"\n        });\n        $(\"body\").append($i);\n        $i.animate({\n            \"top\": y - 180,\n            \"opacity\": 0\n        },\n        1500,\n        function () {\n            $i.remove();\n        });\n    });\n  }, false);\n})();\n</script>\n\n"}},"excerpt":"<p>PHP性能分析工具<br>tideways：<br>xhgui：用于显示xhprof数据的图形界面。<br>","more":"<br>环境：腾讯云CentOS 7 x64<br>php 7.1</p>\n<h2 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h2><h3 id=\"mongodb\"><a href=\"#mongodb\" class=\"headerlink\" title=\"mongodb\"></a>mongodb</h3><p>vi /etc/yum.repos.d/mongodb-org-3.2.repo<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[mongodb-org-3.2]</span><br><span class=\"line\">name=MongoDB Repository</span><br><span class=\"line\">baseurl=https://repo.mongodb.org/yum/redhat/$releasever/mongodb-org/3.2/x86_64/</span><br><span class=\"line\">gpgcheck=1</span><br><span class=\"line\">enabled=1</span><br><span class=\"line\">gpgkey=https://www.mongodb.org/static/pgp/server-3.2.asc</span><br></pre></td></tr></table></figure></p>\n<p>安装<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum -y install mongodb-org</span><br></pre></td></tr></table></figure></p>\n<p>启动<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mkdir -p /data/mongodb/db</span><br><span class=\"line\">mongod --dbpath=/data/mongodb/db --fork --logpath=/data/mongodb/mongodb.log</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"xhgui\"><a href=\"#xhgui\" class=\"headerlink\" title=\"xhgui\"></a>xhgui</h3><h4 id=\"前置：mongodb扩展\"><a href=\"#前置：mongodb扩展\" class=\"headerlink\" title=\"前置：mongodb扩展\"></a>前置：mongodb扩展</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># ubuntu</span><br><span class=\"line\"># yum install libssl openssl-devel  -y</span><br><span class=\"line\"># ln -s /usr/lib/x86_64-linux-gnu/libssl.so  /usr/lib</span><br><span class=\"line\"># pecl install mongodb</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">git clone https://github.com/mongodb/mongo-php-driver.git</span><br><span class=\"line\">cd mongo-php-driver</span><br><span class=\"line\">git submodule sync &amp;&amp; git submodule update --init</span><br><span class=\"line\">phpize</span><br><span class=\"line\">./configure</span><br><span class=\"line\">make all -j 5</span><br><span class=\"line\">make install</span><br></pre></td></tr></table></figure>\n<p>在 fpm/php.ini和cli/php.ini里打开扩展，如<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">echo &quot;extension=mongodb.so&quot; &gt;&gt; /usr/local/serv/php/etc/php.ini</span><br><span class=\"line\">echo &quot;extension=mongodb.so&quot; &gt;&gt; /usr/local/serv/php/lib/php.ini</span><br></pre></td></tr></table></figure></p>\n<h4 id=\"php-install-php\"><a href=\"#php-install-php\" class=\"headerlink\" title=\"php install.php\"></a>php install.php</h4><p>php7.1没有mcrypt扩展，php install.php执行时会可能会出现问题，其引用的require修改成“&gt;”版本即可</p>\n<blockquote>\n<p>Problem 1</p>\n<ul>\n<li>Installation request for slim/slim 2.3.1 -&gt; satisfiable by slim/slim[2.3.1].</li>\n<li>slim/slim 2.3.1 requires ext-mcrypt * -&gt; the requested PHP extension mcrypt is missing from your system.</li>\n</ul>\n</blockquote>\n<h4 id=\"安装-1\"><a href=\"#安装-1\" class=\"headerlink\" title=\"安装\"></a>安装</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git clone https://github.com/maxincai/xhgui.git profiler.maozhuar.com</span><br><span class=\"line\">cd profiler.maozhuar.com</span><br></pre></td></tr></table></figure>\n<h4 id=\"索引\"><a href=\"#索引\" class=\"headerlink\" title=\"索引\"></a>索引</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mongo</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">use xhprof</span><br><span class=\"line\">db.results.ensureIndex( &#123; &apos;meta.SERVER.REQUEST_TIME&apos; : -1 &#125; )</span><br><span class=\"line\">db.results.ensureIndex( &#123; &apos;profile.main().wt&apos; : -1 &#125; )</span><br><span class=\"line\">db.results.ensureIndex( &#123; &apos;profile.main().mu&apos; : -1 &#125; )</span><br><span class=\"line\">db.results.ensureIndex( &#123; &apos;profile.main().cpu&apos; : -1 &#125; )</span><br><span class=\"line\">db.results.ensureIndex( &#123; &apos;meta.url&apos; : 1 &#125; )</span><br></pre></td></tr></table></figure>\n<h4 id=\"nginx配置\"><a href=\"#nginx配置\" class=\"headerlink\" title=\"nginx配置\"></a>nginx配置</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">server &#123;</span><br><span class=\"line\">    server_name profiler.maozhuar.com;</span><br><span class=\"line\">    root /data/www/htdocs/profiler.maozhuar.com/webroot;</span><br><span class=\"line\"></span><br><span class=\"line\">    location ~ \\.php &#123;</span><br><span class=\"line\">        fastcgi_pass   localhost:9002;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    try_files $uri $uri/ /index.php?$query_string;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"tideways\"><a href=\"#tideways\" class=\"headerlink\" title=\"tideways\"></a>tideways</h3><blockquote>\n<p>见该安装地址，选择系统安装方式<code>https://tideways.io/profiler/docs/setup/installation</code></p>\n</blockquote>\n<h4 id=\"配置\"><a href=\"#配置\" class=\"headerlink\" title=\"配置\"></a>配置</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">echo &quot;extension=tideways.so&quot; &gt;&gt; /usr/local/serv/php/etc/php.ini</span><br><span class=\"line\">echo &quot;tideways.sample_rate=25&quot; &gt;&gt; /usr/local/serv/php/etc/php.ini</span><br><span class=\"line\">echo &quot;auto_prepend_file=/data/www/htdocs/xhgui/external/header.php&quot; &gt;&gt; /usr/local/serv/php/etc/php.ini</span><br></pre></td></tr></table></figure>\n<h2 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h2><ul>\n<li><a href=\"https://segmentfault.com/a/1190000007580819\" target=\"_blank\" rel=\"noopener\">PHP性能被动分析工具之xhgui加tideways的安装实践</a></li>\n<li><a href=\"http://blog.csdn.net/leshami/article/details/53171375\" target=\"_blank\" rel=\"noopener\">CentOS 7 yum方式快速安装MongoDB</a></li>\n</ul>"},{"title":"Vue小记-初识","date":"2017-03-24T09:00:00.000Z","_content":"\nVue的初识笔记，语法什么的见[https://cn.vuejs.org/v2/guide/syntax.html]\n\n<!-- MORE -->\n## 什么是Vue  \n- 渐进式框架\n- 受 [MVVM模型](https://en.wikipedia.org/wiki/Model%E2%80%93view%E2%80%93viewmodel)启发\n- 操作 [虚拟DOM] (https://github.com/livoras/blog/issues/13)\n\n\n## 什么是虚拟DOM\n单个元素就已经很大，DOM很慢。  \n如果要修改某处，直接操作整个DOM可行，但会造成很多无用的性能消耗。  \nDOM可以用JavaScript对象表示出来。\n\n虚拟DOM 就是用户只操作 js 数据，由框架来实现最终的DOM **精准** 渲染。\n","source":"_posts/Vue小记-初识.md","raw":"---\ntitle: Vue小记-初识\ndate: 2017-03-24 17:00:00\ntags:\n - Vue\n - 笔记\n\ncategories:\n - Vue\n\n---\n\nVue的初识笔记，语法什么的见[https://cn.vuejs.org/v2/guide/syntax.html]\n\n<!-- MORE -->\n## 什么是Vue  \n- 渐进式框架\n- 受 [MVVM模型](https://en.wikipedia.org/wiki/Model%E2%80%93view%E2%80%93viewmodel)启发\n- 操作 [虚拟DOM] (https://github.com/livoras/blog/issues/13)\n\n\n## 什么是虚拟DOM\n单个元素就已经很大，DOM很慢。  \n如果要修改某处，直接操作整个DOM可行，但会造成很多无用的性能消耗。  \nDOM可以用JavaScript对象表示出来。\n\n虚拟DOM 就是用户只操作 js 数据，由框架来实现最终的DOM **精准** 渲染。\n","slug":"Vue小记-初识","published":1,"updated":"2017-09-19T06:41:00.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjin2pu1p000onrfydt0jcdnk","content":"<p>Vue的初识笔记，语法什么的见[<a href=\"https://cn.vuejs.org/v2/guide/syntax.html]\" target=\"_blank\" rel=\"noopener\">https://cn.vuejs.org/v2/guide/syntax.html]</a></p>\n<a id=\"more\"></a>\n<h2 id=\"什么是Vue\"><a href=\"#什么是Vue\" class=\"headerlink\" title=\"什么是Vue\"></a>什么是Vue</h2><ul>\n<li>渐进式框架</li>\n<li>受 <a href=\"https://en.wikipedia.org/wiki/Model%E2%80%93view%E2%80%93viewmodel\" target=\"_blank\" rel=\"noopener\">MVVM模型</a>启发</li>\n<li>操作 [虚拟DOM] (<a href=\"https://github.com/livoras/blog/issues/13\" target=\"_blank\" rel=\"noopener\">https://github.com/livoras/blog/issues/13</a>)</li>\n</ul>\n<h2 id=\"什么是虚拟DOM\"><a href=\"#什么是虚拟DOM\" class=\"headerlink\" title=\"什么是虚拟DOM\"></a>什么是虚拟DOM</h2><p>单个元素就已经很大，DOM很慢。<br>如果要修改某处，直接操作整个DOM可行，但会造成很多无用的性能消耗。<br>DOM可以用JavaScript对象表示出来。</p>\n<p>虚拟DOM 就是用户只操作 js 数据，由框架来实现最终的DOM <strong>精准</strong> 渲染。</p>\n","site":{"data":{"head":"\n<script type=\"text/javascript\" id=\"hexo.headll\">\n(function () {\n  window.addEventListener(\"load\", function () {   //添加load事件\n    $(\"body\").click(function (e) {\n        var a = new Array(\"富强\", \"民主\", \"文明\", \"和谐\", \"自由\", \"平等\", \"公正\", \"法治\", \"爱国\", \"敬业\", \"诚信\", \"友善\");\n        var a_idx=Math.floor(Math.random()*a.length);\n        var $i = $(\"<span/>\").text(a[a_idx]);\n        var x = e.pageX,y = e.pageY;\n        $i.css({\n            \"z-index\": 99999,\n            \"top\": y - 20,\n            \"left\": x,\n            \"position\": \"absolute\",\n            \"font-weight\": \"bold\",\n            \"color\": \"#ff6651\"\n        });\n        $(\"body\").append($i);\n        $i.animate({\n            \"top\": y - 180,\n            \"opacity\": 0\n        },\n        1500,\n        function () {\n            $i.remove();\n        });\n    });\n  }, false);\n})();\n</script>\n\n"}},"excerpt":"<p>Vue的初识笔记，语法什么的见[<a href=\"https://cn.vuejs.org/v2/guide/syntax.html]\" target=\"_blank\" rel=\"noopener\">https://cn.vuejs.org/v2/guide/syntax.html]</a></p>","more":"<h2 id=\"什么是Vue\"><a href=\"#什么是Vue\" class=\"headerlink\" title=\"什么是Vue\"></a>什么是Vue</h2><ul>\n<li>渐进式框架</li>\n<li>受 <a href=\"https://en.wikipedia.org/wiki/Model%E2%80%93view%E2%80%93viewmodel\" target=\"_blank\" rel=\"noopener\">MVVM模型</a>启发</li>\n<li>操作 [虚拟DOM] (<a href=\"https://github.com/livoras/blog/issues/13\" target=\"_blank\" rel=\"noopener\">https://github.com/livoras/blog/issues/13</a>)</li>\n</ul>\n<h2 id=\"什么是虚拟DOM\"><a href=\"#什么是虚拟DOM\" class=\"headerlink\" title=\"什么是虚拟DOM\"></a>什么是虚拟DOM</h2><p>单个元素就已经很大，DOM很慢。<br>如果要修改某处，直接操作整个DOM可行，但会造成很多无用的性能消耗。<br>DOM可以用JavaScript对象表示出来。</p>\n<p>虚拟DOM 就是用户只操作 js 数据，由框架来实现最终的DOM <strong>精准</strong> 渲染。</p>"},{"title":"docker小记","date":"2017-04-04T20:05:00.000Z","_content":"\ndocker笔记\n\n<!-- MORE -->\n\n # 容器运行后就退出，如何才能一直运行？比如centos:7镜像\n\n```\ndocker run -itd centos:7 bash\n```\n\n# 创建镜像\n\n## 本地镜像\n\n```\ndocker commit -m \"xxx\" -a \"lepoch\" a4170f6b81b3 lepoch/worker:0.1\n```\n\n>-m 注释\n-a 作者\n0b2616b0e5a8 容器ID\nouruser/sinatra:v2 镜像id:tag\n\n\n## Dockerfile\n\n源码见 [worker-dockerfile](https://github.com/lepoch/worker)\n\n```\ndocker build -t lepoch/worker:0.01 .\n```\n\n# 删除所有非运行的容器， rm -f 为强制删除\n\n```\ndocker rm `docker ps -aq`\n```\n\n# 挂载宿主机目录，并授权\n\n```\ndocker run -d -p 8001:80 -v /worker/www/:/usr/local/nginx/html --privileged=true lepoch/worker:php5.3\n```\n\n# 启动[MySQL](https://hub.docker.com/_/mysql/)，并link\n```\ndocker run --name mysql -v /worker/mysql/datadir:/var/lib/mysql --privileged=true -e MYSQL_ROOT_PASSWORD=root mysql\ndocker run -d --link=mysql -p 8002:80 -v /worker/www/:/usr/local/nginx/html --privileged=true lepoch/worker:php5.3\n```\n\n# -p 会直接打开宿主机的端口\n> 使用 docker overlay network\ndocker network create 网络名称\ndocker run --net=网络名称 mysql  \ndocker run --net=网络名称 tomcat\n\n>docker network disconnect 网络名称 tomcat\ndocker network connect 网络名称  tomcat\n","source":"_posts/docker小记.md","raw":"---\ntitle: docker小记\ndate: 2017-04-05T04:05:00.000Z\ntags:\n  - docker\n  - 笔记\ncategories:\n  - Linux\n---\n\ndocker笔记\n\n<!-- MORE -->\n\n # 容器运行后就退出，如何才能一直运行？比如centos:7镜像\n\n```\ndocker run -itd centos:7 bash\n```\n\n# 创建镜像\n\n## 本地镜像\n\n```\ndocker commit -m \"xxx\" -a \"lepoch\" a4170f6b81b3 lepoch/worker:0.1\n```\n\n>-m 注释\n-a 作者\n0b2616b0e5a8 容器ID\nouruser/sinatra:v2 镜像id:tag\n\n\n## Dockerfile\n\n源码见 [worker-dockerfile](https://github.com/lepoch/worker)\n\n```\ndocker build -t lepoch/worker:0.01 .\n```\n\n# 删除所有非运行的容器， rm -f 为强制删除\n\n```\ndocker rm `docker ps -aq`\n```\n\n# 挂载宿主机目录，并授权\n\n```\ndocker run -d -p 8001:80 -v /worker/www/:/usr/local/nginx/html --privileged=true lepoch/worker:php5.3\n```\n\n# 启动[MySQL](https://hub.docker.com/_/mysql/)，并link\n```\ndocker run --name mysql -v /worker/mysql/datadir:/var/lib/mysql --privileged=true -e MYSQL_ROOT_PASSWORD=root mysql\ndocker run -d --link=mysql -p 8002:80 -v /worker/www/:/usr/local/nginx/html --privileged=true lepoch/worker:php5.3\n```\n\n# -p 会直接打开宿主机的端口\n> 使用 docker overlay network\ndocker network create 网络名称\ndocker run --net=网络名称 mysql  \ndocker run --net=网络名称 tomcat\n\n>docker network disconnect 网络名称 tomcat\ndocker network connect 网络名称  tomcat\n","slug":"docker小记","published":1,"updated":"2017-05-19T17:05:37.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjin2pu1r000snrfyswh44rkb","content":"<p>docker笔记</p>\n<a id=\"more\"></a>\n<h1 id=\"容器运行后就退出，如何才能一直运行？比如centos-7镜像\"><a href=\"#容器运行后就退出，如何才能一直运行？比如centos-7镜像\" class=\"headerlink\" title=\"容器运行后就退出，如何才能一直运行？比如centos:7镜像\"></a>容器运行后就退出，如何才能一直运行？比如centos:7镜像</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker run -itd centos:7 bash</span><br></pre></td></tr></table></figure>\n<h1 id=\"创建镜像\"><a href=\"#创建镜像\" class=\"headerlink\" title=\"创建镜像\"></a>创建镜像</h1><h2 id=\"本地镜像\"><a href=\"#本地镜像\" class=\"headerlink\" title=\"本地镜像\"></a>本地镜像</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker commit -m &quot;xxx&quot; -a &quot;lepoch&quot; a4170f6b81b3 lepoch/worker:0.1</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>-m 注释<br>-a 作者<br>0b2616b0e5a8 容器ID<br>ouruser/sinatra:v2 镜像id:tag</p>\n</blockquote>\n<h2 id=\"Dockerfile\"><a href=\"#Dockerfile\" class=\"headerlink\" title=\"Dockerfile\"></a>Dockerfile</h2><p>源码见 <a href=\"https://github.com/lepoch/worker\" target=\"_blank\" rel=\"noopener\">worker-dockerfile</a></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker build -t lepoch/worker:0.01 .</span><br></pre></td></tr></table></figure>\n<h1 id=\"删除所有非运行的容器，-rm-f-为强制删除\"><a href=\"#删除所有非运行的容器，-rm-f-为强制删除\" class=\"headerlink\" title=\"删除所有非运行的容器， rm -f 为强制删除\"></a>删除所有非运行的容器， rm -f 为强制删除</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker rm `docker ps -aq`</span><br></pre></td></tr></table></figure>\n<h1 id=\"挂载宿主机目录，并授权\"><a href=\"#挂载宿主机目录，并授权\" class=\"headerlink\" title=\"挂载宿主机目录，并授权\"></a>挂载宿主机目录，并授权</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker run -d -p 8001:80 -v /worker/www/:/usr/local/nginx/html --privileged=true lepoch/worker:php5.3</span><br></pre></td></tr></table></figure>\n<h1 id=\"启动MySQL，并link\"><a href=\"#启动MySQL，并link\" class=\"headerlink\" title=\"启动MySQL，并link\"></a>启动<a href=\"https://hub.docker.com/_/mysql/\" target=\"_blank\" rel=\"noopener\">MySQL</a>，并link</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker run --name mysql -v /worker/mysql/datadir:/var/lib/mysql --privileged=true -e MYSQL_ROOT_PASSWORD=root mysql</span><br><span class=\"line\">docker run -d --link=mysql -p 8002:80 -v /worker/www/:/usr/local/nginx/html --privileged=true lepoch/worker:php5.3</span><br></pre></td></tr></table></figure>\n<h1 id=\"p-会直接打开宿主机的端口\"><a href=\"#p-会直接打开宿主机的端口\" class=\"headerlink\" title=\"-p 会直接打开宿主机的端口\"></a>-p 会直接打开宿主机的端口</h1><blockquote>\n<p>使用 docker overlay network<br>docker network create 网络名称<br>docker run –net=网络名称 mysql<br>docker run –net=网络名称 tomcat</p>\n</blockquote>\n<blockquote>\n<p>docker network disconnect 网络名称 tomcat<br>docker network connect 网络名称  tomcat</p>\n</blockquote>\n","site":{"data":{"head":"\n<script type=\"text/javascript\" id=\"hexo.headll\">\n(function () {\n  window.addEventListener(\"load\", function () {   //添加load事件\n    $(\"body\").click(function (e) {\n        var a = new Array(\"富强\", \"民主\", \"文明\", \"和谐\", \"自由\", \"平等\", \"公正\", \"法治\", \"爱国\", \"敬业\", \"诚信\", \"友善\");\n        var a_idx=Math.floor(Math.random()*a.length);\n        var $i = $(\"<span/>\").text(a[a_idx]);\n        var x = e.pageX,y = e.pageY;\n        $i.css({\n            \"z-index\": 99999,\n            \"top\": y - 20,\n            \"left\": x,\n            \"position\": \"absolute\",\n            \"font-weight\": \"bold\",\n            \"color\": \"#ff6651\"\n        });\n        $(\"body\").append($i);\n        $i.animate({\n            \"top\": y - 180,\n            \"opacity\": 0\n        },\n        1500,\n        function () {\n            $i.remove();\n        });\n    });\n  }, false);\n})();\n</script>\n\n"}},"excerpt":"<p>docker笔记</p>","more":"<h1 id=\"容器运行后就退出，如何才能一直运行？比如centos-7镜像\"><a href=\"#容器运行后就退出，如何才能一直运行？比如centos-7镜像\" class=\"headerlink\" title=\"容器运行后就退出，如何才能一直运行？比如centos:7镜像\"></a>容器运行后就退出，如何才能一直运行？比如centos:7镜像</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker run -itd centos:7 bash</span><br></pre></td></tr></table></figure>\n<h1 id=\"创建镜像\"><a href=\"#创建镜像\" class=\"headerlink\" title=\"创建镜像\"></a>创建镜像</h1><h2 id=\"本地镜像\"><a href=\"#本地镜像\" class=\"headerlink\" title=\"本地镜像\"></a>本地镜像</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker commit -m &quot;xxx&quot; -a &quot;lepoch&quot; a4170f6b81b3 lepoch/worker:0.1</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>-m 注释<br>-a 作者<br>0b2616b0e5a8 容器ID<br>ouruser/sinatra:v2 镜像id:tag</p>\n</blockquote>\n<h2 id=\"Dockerfile\"><a href=\"#Dockerfile\" class=\"headerlink\" title=\"Dockerfile\"></a>Dockerfile</h2><p>源码见 <a href=\"https://github.com/lepoch/worker\" target=\"_blank\" rel=\"noopener\">worker-dockerfile</a></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker build -t lepoch/worker:0.01 .</span><br></pre></td></tr></table></figure>\n<h1 id=\"删除所有非运行的容器，-rm-f-为强制删除\"><a href=\"#删除所有非运行的容器，-rm-f-为强制删除\" class=\"headerlink\" title=\"删除所有非运行的容器， rm -f 为强制删除\"></a>删除所有非运行的容器， rm -f 为强制删除</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker rm `docker ps -aq`</span><br></pre></td></tr></table></figure>\n<h1 id=\"挂载宿主机目录，并授权\"><a href=\"#挂载宿主机目录，并授权\" class=\"headerlink\" title=\"挂载宿主机目录，并授权\"></a>挂载宿主机目录，并授权</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker run -d -p 8001:80 -v /worker/www/:/usr/local/nginx/html --privileged=true lepoch/worker:php5.3</span><br></pre></td></tr></table></figure>\n<h1 id=\"启动MySQL，并link\"><a href=\"#启动MySQL，并link\" class=\"headerlink\" title=\"启动MySQL，并link\"></a>启动<a href=\"https://hub.docker.com/_/mysql/\" target=\"_blank\" rel=\"noopener\">MySQL</a>，并link</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker run --name mysql -v /worker/mysql/datadir:/var/lib/mysql --privileged=true -e MYSQL_ROOT_PASSWORD=root mysql</span><br><span class=\"line\">docker run -d --link=mysql -p 8002:80 -v /worker/www/:/usr/local/nginx/html --privileged=true lepoch/worker:php5.3</span><br></pre></td></tr></table></figure>\n<h1 id=\"p-会直接打开宿主机的端口\"><a href=\"#p-会直接打开宿主机的端口\" class=\"headerlink\" title=\"-p 会直接打开宿主机的端口\"></a>-p 会直接打开宿主机的端口</h1><blockquote>\n<p>使用 docker overlay network<br>docker network create 网络名称<br>docker run –net=网络名称 mysql<br>docker run –net=网络名称 tomcat</p>\n</blockquote>\n<blockquote>\n<p>docker network disconnect 网络名称 tomcat<br>docker network connect 网络名称  tomcat</p>\n</blockquote>"},{"title":"Go小记-初识","date":"2018-03-08T09:00:00.000Z","_content":"\n跟着官方文档，使用kubeadmin搭建kubernetes。\n\n<!-- MORE -->\n### 环境\n6台阿里云ecs，CPU： 2核    内存：4 GB  ， centOS 7.4 64位， root用户\n- k8s1    192.168.0.248\n- k8s2    192.168.0.249\n- k8s3    192.168.0.250\n- k8s4    192.168.0.251\n- k8s5    192.168.0.252\n- k8s6    192.168.0.247\n\n\n\n```\nyum install -y docker\nsystemctl enable docker && systemctl start docker\n\ncat <<EOF > /etc/yum.repos.d/kubernetes.repo\n[kubernetes]\nname=Kubernetes\nbaseurl=https://packages.cloud.google.com/yum/repos/kubernetes-el7-x86_64\nenabled=1\ngpgcheck=1\nrepo_gpgcheck=1\ngpgkey=https://packages.cloud.google.com/yum/doc/yum-key.gpg https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg\nEOF\nsetenforce 0\nyum install -y kubelet kubeadm kubectl\nsystemctl enable kubelet && systemctl start kubelet\n\ncat <<EOF >  /etc/sysctl.d/k8s.conf\nnet.bridge.bridge-nf-call-ip6tables = 1\nnet.bridge.bridge-nf-call-iptables = 1\nEOF\nsysctl --system\n\nsed -i \"s/cgroup-driver=systemd/cgroup-driver=systemd/g\" /etc/systemd/system/kubelet.service.d/10-kubeadm.conf\n\nsystemctl daemon-reload\nsystemctl restart kubelet\n\n\necho 'export KUBECONFIG=/etc/kubernetes/admin.conf' >> ~/.bash_profile\nsource ~/.bash_profile\n\n\n# kubeadm join --token 0c13a5.bf9bda1f47c070d3 192.168.0.131:6443 --discovery-token-ca-cert-hash sha256:4576241c6828d3b635bf3cab14cfce7eee7e5016502fd1cb69fbea1a7ea87ea2\n```\n\n\n\n```\nyum install -y docker\nsystemctl enable docker && systemctl start docker\n\ncat >> /etc/yum.repos.d/kubernetes.repo <<EOF\n[kubernetes]\nname=Kubernetes\nbaseurl=https://mirrors.aliyun.com/kubernetes/yum/repos/kubernetes-el7-x86_64/\nenabled=1\ngpgcheck=0\nEOF\n\nsetenforce 0\nyum install -y kubelet kubeadm kubectl\nsystemctl enable kubelet && systemctl start kubelet\n\nsed -i \"s/cgroup-driver=systemd/cgroup-driver=systemd/g\" /etc/systemd/system/kubelet.service.d/10-kubeadm.conf\n\nsystemctl daemon-reload\nsystemctl restart kubelet\n\n# kubeadm join --token 6b71c7.2816073a294e1f3d 192.168.0.131:6443 --discovery-token-ca-cert-hash sha256:f8db9e3bd9aa5e0c9b5954a54e0dbbec3d70e1133423c257ff474f479a87333a\n\n```\n\n### 安装\n#### 安装docker\n```\nyum install -y docker\nsystemctl enable docker && systemctl start docker\n```\n\n#### 安装kubeadm，kubelet和kubectl\n- kubeadm：引导群集的命令。\n- kubelet：在群集中的所有机器上运行的组件，并执行诸如启动荚和容器之类的组件。\n- kubectl：命令行util与您的群集通话。\n\n天朝网络不可达，得另寻出路\n```\ncat >> /etc/yum.repos.d/kubernetes.repo <<EOF\n[kubernetes]\nname=Kubernetes\nbaseurl=https://mirrors.aliyun.com/kubernetes/yum/repos/kubernetes-el7-x86_64/\nenabled=1\ngpgcheck=0\nEOF\n\nsetenforce 0\nyum install -y kubelet kubeadm kubectl\nsystemctl enable kubelet && systemctl start kubelet\n\n```\n\n#### 在主节点上配置kubelet使用的cgroup驱动程序  \n查看驱动：\n```\ndocker info | grep -i cgroup\ncat /etc/systemd/system/kubelet.service.d/10-kubeadm.conf\n```\n\n\n修改cgroup-driver为docker使用的驱动\n```\nsed -i \"s/cgroup-driver=systemd/cgroup-driver=systemd/g\" /etc/systemd/system/kubelet.service.d/10-kubeadm.conf\n```\n重启kubelet\n```\nsystemctl daemon-reload\nsystemctl restart kubelet\n```\n\n### 创建集群\n\n#### 初始化master  \n指定版本，不然就得翻墙。。。\n```\nkubeadm init --kubernetes-version=1.9.0 --token-ttl 0\n```\n- root用户：`export KUBECONFIG=/etc/kubernetes/admin.conf`\n","source":"_posts/kubeadmin足迹.md","raw":"---\ntitle: Go小记-初识\ndate: 2018-03-08 17:00:00\ntags:\n - kubernetes\n - k8s\n - kubeadmin\n\ncategories:\n - 运维\n\n---\n\n跟着官方文档，使用kubeadmin搭建kubernetes。\n\n<!-- MORE -->\n### 环境\n6台阿里云ecs，CPU： 2核    内存：4 GB  ， centOS 7.4 64位， root用户\n- k8s1    192.168.0.248\n- k8s2    192.168.0.249\n- k8s3    192.168.0.250\n- k8s4    192.168.0.251\n- k8s5    192.168.0.252\n- k8s6    192.168.0.247\n\n\n\n```\nyum install -y docker\nsystemctl enable docker && systemctl start docker\n\ncat <<EOF > /etc/yum.repos.d/kubernetes.repo\n[kubernetes]\nname=Kubernetes\nbaseurl=https://packages.cloud.google.com/yum/repos/kubernetes-el7-x86_64\nenabled=1\ngpgcheck=1\nrepo_gpgcheck=1\ngpgkey=https://packages.cloud.google.com/yum/doc/yum-key.gpg https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg\nEOF\nsetenforce 0\nyum install -y kubelet kubeadm kubectl\nsystemctl enable kubelet && systemctl start kubelet\n\ncat <<EOF >  /etc/sysctl.d/k8s.conf\nnet.bridge.bridge-nf-call-ip6tables = 1\nnet.bridge.bridge-nf-call-iptables = 1\nEOF\nsysctl --system\n\nsed -i \"s/cgroup-driver=systemd/cgroup-driver=systemd/g\" /etc/systemd/system/kubelet.service.d/10-kubeadm.conf\n\nsystemctl daemon-reload\nsystemctl restart kubelet\n\n\necho 'export KUBECONFIG=/etc/kubernetes/admin.conf' >> ~/.bash_profile\nsource ~/.bash_profile\n\n\n# kubeadm join --token 0c13a5.bf9bda1f47c070d3 192.168.0.131:6443 --discovery-token-ca-cert-hash sha256:4576241c6828d3b635bf3cab14cfce7eee7e5016502fd1cb69fbea1a7ea87ea2\n```\n\n\n\n```\nyum install -y docker\nsystemctl enable docker && systemctl start docker\n\ncat >> /etc/yum.repos.d/kubernetes.repo <<EOF\n[kubernetes]\nname=Kubernetes\nbaseurl=https://mirrors.aliyun.com/kubernetes/yum/repos/kubernetes-el7-x86_64/\nenabled=1\ngpgcheck=0\nEOF\n\nsetenforce 0\nyum install -y kubelet kubeadm kubectl\nsystemctl enable kubelet && systemctl start kubelet\n\nsed -i \"s/cgroup-driver=systemd/cgroup-driver=systemd/g\" /etc/systemd/system/kubelet.service.d/10-kubeadm.conf\n\nsystemctl daemon-reload\nsystemctl restart kubelet\n\n# kubeadm join --token 6b71c7.2816073a294e1f3d 192.168.0.131:6443 --discovery-token-ca-cert-hash sha256:f8db9e3bd9aa5e0c9b5954a54e0dbbec3d70e1133423c257ff474f479a87333a\n\n```\n\n### 安装\n#### 安装docker\n```\nyum install -y docker\nsystemctl enable docker && systemctl start docker\n```\n\n#### 安装kubeadm，kubelet和kubectl\n- kubeadm：引导群集的命令。\n- kubelet：在群集中的所有机器上运行的组件，并执行诸如启动荚和容器之类的组件。\n- kubectl：命令行util与您的群集通话。\n\n天朝网络不可达，得另寻出路\n```\ncat >> /etc/yum.repos.d/kubernetes.repo <<EOF\n[kubernetes]\nname=Kubernetes\nbaseurl=https://mirrors.aliyun.com/kubernetes/yum/repos/kubernetes-el7-x86_64/\nenabled=1\ngpgcheck=0\nEOF\n\nsetenforce 0\nyum install -y kubelet kubeadm kubectl\nsystemctl enable kubelet && systemctl start kubelet\n\n```\n\n#### 在主节点上配置kubelet使用的cgroup驱动程序  \n查看驱动：\n```\ndocker info | grep -i cgroup\ncat /etc/systemd/system/kubelet.service.d/10-kubeadm.conf\n```\n\n\n修改cgroup-driver为docker使用的驱动\n```\nsed -i \"s/cgroup-driver=systemd/cgroup-driver=systemd/g\" /etc/systemd/system/kubelet.service.d/10-kubeadm.conf\n```\n重启kubelet\n```\nsystemctl daemon-reload\nsystemctl restart kubelet\n```\n\n### 创建集群\n\n#### 初始化master  \n指定版本，不然就得翻墙。。。\n```\nkubeadm init --kubernetes-version=1.9.0 --token-ttl 0\n```\n- root用户：`export KUBECONFIG=/etc/kubernetes/admin.conf`\n","slug":"kubeadmin足迹","published":1,"updated":"2018-03-12T06:49:39.021Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjin2pu1t000unrfyromtyen3","content":"<p>跟着官方文档，使用kubeadmin搭建kubernetes。</p>\n<a id=\"more\"></a>\n<h3 id=\"环境\"><a href=\"#环境\" class=\"headerlink\" title=\"环境\"></a>环境</h3><p>6台阿里云ecs，CPU： 2核    内存：4 GB  ， centOS 7.4 64位， root用户</p>\n<ul>\n<li>k8s1    192.168.0.248</li>\n<li>k8s2    192.168.0.249</li>\n<li>k8s3    192.168.0.250</li>\n<li>k8s4    192.168.0.251</li>\n<li>k8s5    192.168.0.252</li>\n<li>k8s6    192.168.0.247</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum install -y docker</span><br><span class=\"line\">systemctl enable docker &amp;&amp; systemctl start docker</span><br><span class=\"line\"></span><br><span class=\"line\">cat &lt;&lt;EOF &gt; /etc/yum.repos.d/kubernetes.repo</span><br><span class=\"line\">[kubernetes]</span><br><span class=\"line\">name=Kubernetes</span><br><span class=\"line\">baseurl=https://packages.cloud.google.com/yum/repos/kubernetes-el7-x86_64</span><br><span class=\"line\">enabled=1</span><br><span class=\"line\">gpgcheck=1</span><br><span class=\"line\">repo_gpgcheck=1</span><br><span class=\"line\">gpgkey=https://packages.cloud.google.com/yum/doc/yum-key.gpg https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg</span><br><span class=\"line\">EOF</span><br><span class=\"line\">setenforce 0</span><br><span class=\"line\">yum install -y kubelet kubeadm kubectl</span><br><span class=\"line\">systemctl enable kubelet &amp;&amp; systemctl start kubelet</span><br><span class=\"line\"></span><br><span class=\"line\">cat &lt;&lt;EOF &gt;  /etc/sysctl.d/k8s.conf</span><br><span class=\"line\">net.bridge.bridge-nf-call-ip6tables = 1</span><br><span class=\"line\">net.bridge.bridge-nf-call-iptables = 1</span><br><span class=\"line\">EOF</span><br><span class=\"line\">sysctl --system</span><br><span class=\"line\"></span><br><span class=\"line\">sed -i &quot;s/cgroup-driver=systemd/cgroup-driver=systemd/g&quot; /etc/systemd/system/kubelet.service.d/10-kubeadm.conf</span><br><span class=\"line\"></span><br><span class=\"line\">systemctl daemon-reload</span><br><span class=\"line\">systemctl restart kubelet</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">echo &apos;export KUBECONFIG=/etc/kubernetes/admin.conf&apos; &gt;&gt; ~/.bash_profile</span><br><span class=\"line\">source ~/.bash_profile</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"># kubeadm join --token 0c13a5.bf9bda1f47c070d3 192.168.0.131:6443 --discovery-token-ca-cert-hash sha256:4576241c6828d3b635bf3cab14cfce7eee7e5016502fd1cb69fbea1a7ea87ea2</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum install -y docker</span><br><span class=\"line\">systemctl enable docker &amp;&amp; systemctl start docker</span><br><span class=\"line\"></span><br><span class=\"line\">cat &gt;&gt; /etc/yum.repos.d/kubernetes.repo &lt;&lt;EOF</span><br><span class=\"line\">[kubernetes]</span><br><span class=\"line\">name=Kubernetes</span><br><span class=\"line\">baseurl=https://mirrors.aliyun.com/kubernetes/yum/repos/kubernetes-el7-x86_64/</span><br><span class=\"line\">enabled=1</span><br><span class=\"line\">gpgcheck=0</span><br><span class=\"line\">EOF</span><br><span class=\"line\"></span><br><span class=\"line\">setenforce 0</span><br><span class=\"line\">yum install -y kubelet kubeadm kubectl</span><br><span class=\"line\">systemctl enable kubelet &amp;&amp; systemctl start kubelet</span><br><span class=\"line\"></span><br><span class=\"line\">sed -i &quot;s/cgroup-driver=systemd/cgroup-driver=systemd/g&quot; /etc/systemd/system/kubelet.service.d/10-kubeadm.conf</span><br><span class=\"line\"></span><br><span class=\"line\">systemctl daemon-reload</span><br><span class=\"line\">systemctl restart kubelet</span><br><span class=\"line\"></span><br><span class=\"line\"># kubeadm join --token 6b71c7.2816073a294e1f3d 192.168.0.131:6443 --discovery-token-ca-cert-hash sha256:f8db9e3bd9aa5e0c9b5954a54e0dbbec3d70e1133423c257ff474f479a87333a</span><br></pre></td></tr></table></figure>\n<h3 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h3><h4 id=\"安装docker\"><a href=\"#安装docker\" class=\"headerlink\" title=\"安装docker\"></a>安装docker</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum install -y docker</span><br><span class=\"line\">systemctl enable docker &amp;&amp; systemctl start docker</span><br></pre></td></tr></table></figure>\n<h4 id=\"安装kubeadm，kubelet和kubectl\"><a href=\"#安装kubeadm，kubelet和kubectl\" class=\"headerlink\" title=\"安装kubeadm，kubelet和kubectl\"></a>安装kubeadm，kubelet和kubectl</h4><ul>\n<li>kubeadm：引导群集的命令。</li>\n<li>kubelet：在群集中的所有机器上运行的组件，并执行诸如启动荚和容器之类的组件。</li>\n<li>kubectl：命令行util与您的群集通话。</li>\n</ul>\n<p>天朝网络不可达，得另寻出路<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cat &gt;&gt; /etc/yum.repos.d/kubernetes.repo &lt;&lt;EOF</span><br><span class=\"line\">[kubernetes]</span><br><span class=\"line\">name=Kubernetes</span><br><span class=\"line\">baseurl=https://mirrors.aliyun.com/kubernetes/yum/repos/kubernetes-el7-x86_64/</span><br><span class=\"line\">enabled=1</span><br><span class=\"line\">gpgcheck=0</span><br><span class=\"line\">EOF</span><br><span class=\"line\"></span><br><span class=\"line\">setenforce 0</span><br><span class=\"line\">yum install -y kubelet kubeadm kubectl</span><br><span class=\"line\">systemctl enable kubelet &amp;&amp; systemctl start kubelet</span><br></pre></td></tr></table></figure></p>\n<h4 id=\"在主节点上配置kubelet使用的cgroup驱动程序\"><a href=\"#在主节点上配置kubelet使用的cgroup驱动程序\" class=\"headerlink\" title=\"在主节点上配置kubelet使用的cgroup驱动程序\"></a>在主节点上配置kubelet使用的cgroup驱动程序</h4><p>查看驱动：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker info | grep -i cgroup</span><br><span class=\"line\">cat /etc/systemd/system/kubelet.service.d/10-kubeadm.conf</span><br></pre></td></tr></table></figure></p>\n<p>修改cgroup-driver为docker使用的驱动<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sed -i &quot;s/cgroup-driver=systemd/cgroup-driver=systemd/g&quot; /etc/systemd/system/kubelet.service.d/10-kubeadm.conf</span><br></pre></td></tr></table></figure></p>\n<p>重启kubelet<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">systemctl daemon-reload</span><br><span class=\"line\">systemctl restart kubelet</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"创建集群\"><a href=\"#创建集群\" class=\"headerlink\" title=\"创建集群\"></a>创建集群</h3><h4 id=\"初始化master\"><a href=\"#初始化master\" class=\"headerlink\" title=\"初始化master\"></a>初始化master</h4><p>指定版本，不然就得翻墙。。。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">kubeadm init --kubernetes-version=1.9.0 --token-ttl 0</span><br></pre></td></tr></table></figure></p>\n<ul>\n<li>root用户：<code>export KUBECONFIG=/etc/kubernetes/admin.conf</code></li>\n</ul>\n","site":{"data":{"head":"\n<script type=\"text/javascript\" id=\"hexo.headll\">\n(function () {\n  window.addEventListener(\"load\", function () {   //添加load事件\n    $(\"body\").click(function (e) {\n        var a = new Array(\"富强\", \"民主\", \"文明\", \"和谐\", \"自由\", \"平等\", \"公正\", \"法治\", \"爱国\", \"敬业\", \"诚信\", \"友善\");\n        var a_idx=Math.floor(Math.random()*a.length);\n        var $i = $(\"<span/>\").text(a[a_idx]);\n        var x = e.pageX,y = e.pageY;\n        $i.css({\n            \"z-index\": 99999,\n            \"top\": y - 20,\n            \"left\": x,\n            \"position\": \"absolute\",\n            \"font-weight\": \"bold\",\n            \"color\": \"#ff6651\"\n        });\n        $(\"body\").append($i);\n        $i.animate({\n            \"top\": y - 180,\n            \"opacity\": 0\n        },\n        1500,\n        function () {\n            $i.remove();\n        });\n    });\n  }, false);\n})();\n</script>\n\n"}},"excerpt":"<p>跟着官方文档，使用kubeadmin搭建kubernetes。</p>","more":"<h3 id=\"环境\"><a href=\"#环境\" class=\"headerlink\" title=\"环境\"></a>环境</h3><p>6台阿里云ecs，CPU： 2核    内存：4 GB  ， centOS 7.4 64位， root用户</p>\n<ul>\n<li>k8s1    192.168.0.248</li>\n<li>k8s2    192.168.0.249</li>\n<li>k8s3    192.168.0.250</li>\n<li>k8s4    192.168.0.251</li>\n<li>k8s5    192.168.0.252</li>\n<li>k8s6    192.168.0.247</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum install -y docker</span><br><span class=\"line\">systemctl enable docker &amp;&amp; systemctl start docker</span><br><span class=\"line\"></span><br><span class=\"line\">cat &lt;&lt;EOF &gt; /etc/yum.repos.d/kubernetes.repo</span><br><span class=\"line\">[kubernetes]</span><br><span class=\"line\">name=Kubernetes</span><br><span class=\"line\">baseurl=https://packages.cloud.google.com/yum/repos/kubernetes-el7-x86_64</span><br><span class=\"line\">enabled=1</span><br><span class=\"line\">gpgcheck=1</span><br><span class=\"line\">repo_gpgcheck=1</span><br><span class=\"line\">gpgkey=https://packages.cloud.google.com/yum/doc/yum-key.gpg https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg</span><br><span class=\"line\">EOF</span><br><span class=\"line\">setenforce 0</span><br><span class=\"line\">yum install -y kubelet kubeadm kubectl</span><br><span class=\"line\">systemctl enable kubelet &amp;&amp; systemctl start kubelet</span><br><span class=\"line\"></span><br><span class=\"line\">cat &lt;&lt;EOF &gt;  /etc/sysctl.d/k8s.conf</span><br><span class=\"line\">net.bridge.bridge-nf-call-ip6tables = 1</span><br><span class=\"line\">net.bridge.bridge-nf-call-iptables = 1</span><br><span class=\"line\">EOF</span><br><span class=\"line\">sysctl --system</span><br><span class=\"line\"></span><br><span class=\"line\">sed -i &quot;s/cgroup-driver=systemd/cgroup-driver=systemd/g&quot; /etc/systemd/system/kubelet.service.d/10-kubeadm.conf</span><br><span class=\"line\"></span><br><span class=\"line\">systemctl daemon-reload</span><br><span class=\"line\">systemctl restart kubelet</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">echo &apos;export KUBECONFIG=/etc/kubernetes/admin.conf&apos; &gt;&gt; ~/.bash_profile</span><br><span class=\"line\">source ~/.bash_profile</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"># kubeadm join --token 0c13a5.bf9bda1f47c070d3 192.168.0.131:6443 --discovery-token-ca-cert-hash sha256:4576241c6828d3b635bf3cab14cfce7eee7e5016502fd1cb69fbea1a7ea87ea2</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum install -y docker</span><br><span class=\"line\">systemctl enable docker &amp;&amp; systemctl start docker</span><br><span class=\"line\"></span><br><span class=\"line\">cat &gt;&gt; /etc/yum.repos.d/kubernetes.repo &lt;&lt;EOF</span><br><span class=\"line\">[kubernetes]</span><br><span class=\"line\">name=Kubernetes</span><br><span class=\"line\">baseurl=https://mirrors.aliyun.com/kubernetes/yum/repos/kubernetes-el7-x86_64/</span><br><span class=\"line\">enabled=1</span><br><span class=\"line\">gpgcheck=0</span><br><span class=\"line\">EOF</span><br><span class=\"line\"></span><br><span class=\"line\">setenforce 0</span><br><span class=\"line\">yum install -y kubelet kubeadm kubectl</span><br><span class=\"line\">systemctl enable kubelet &amp;&amp; systemctl start kubelet</span><br><span class=\"line\"></span><br><span class=\"line\">sed -i &quot;s/cgroup-driver=systemd/cgroup-driver=systemd/g&quot; /etc/systemd/system/kubelet.service.d/10-kubeadm.conf</span><br><span class=\"line\"></span><br><span class=\"line\">systemctl daemon-reload</span><br><span class=\"line\">systemctl restart kubelet</span><br><span class=\"line\"></span><br><span class=\"line\"># kubeadm join --token 6b71c7.2816073a294e1f3d 192.168.0.131:6443 --discovery-token-ca-cert-hash sha256:f8db9e3bd9aa5e0c9b5954a54e0dbbec3d70e1133423c257ff474f479a87333a</span><br></pre></td></tr></table></figure>\n<h3 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h3><h4 id=\"安装docker\"><a href=\"#安装docker\" class=\"headerlink\" title=\"安装docker\"></a>安装docker</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum install -y docker</span><br><span class=\"line\">systemctl enable docker &amp;&amp; systemctl start docker</span><br></pre></td></tr></table></figure>\n<h4 id=\"安装kubeadm，kubelet和kubectl\"><a href=\"#安装kubeadm，kubelet和kubectl\" class=\"headerlink\" title=\"安装kubeadm，kubelet和kubectl\"></a>安装kubeadm，kubelet和kubectl</h4><ul>\n<li>kubeadm：引导群集的命令。</li>\n<li>kubelet：在群集中的所有机器上运行的组件，并执行诸如启动荚和容器之类的组件。</li>\n<li>kubectl：命令行util与您的群集通话。</li>\n</ul>\n<p>天朝网络不可达，得另寻出路<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cat &gt;&gt; /etc/yum.repos.d/kubernetes.repo &lt;&lt;EOF</span><br><span class=\"line\">[kubernetes]</span><br><span class=\"line\">name=Kubernetes</span><br><span class=\"line\">baseurl=https://mirrors.aliyun.com/kubernetes/yum/repos/kubernetes-el7-x86_64/</span><br><span class=\"line\">enabled=1</span><br><span class=\"line\">gpgcheck=0</span><br><span class=\"line\">EOF</span><br><span class=\"line\"></span><br><span class=\"line\">setenforce 0</span><br><span class=\"line\">yum install -y kubelet kubeadm kubectl</span><br><span class=\"line\">systemctl enable kubelet &amp;&amp; systemctl start kubelet</span><br></pre></td></tr></table></figure></p>\n<h4 id=\"在主节点上配置kubelet使用的cgroup驱动程序\"><a href=\"#在主节点上配置kubelet使用的cgroup驱动程序\" class=\"headerlink\" title=\"在主节点上配置kubelet使用的cgroup驱动程序\"></a>在主节点上配置kubelet使用的cgroup驱动程序</h4><p>查看驱动：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker info | grep -i cgroup</span><br><span class=\"line\">cat /etc/systemd/system/kubelet.service.d/10-kubeadm.conf</span><br></pre></td></tr></table></figure></p>\n<p>修改cgroup-driver为docker使用的驱动<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sed -i &quot;s/cgroup-driver=systemd/cgroup-driver=systemd/g&quot; /etc/systemd/system/kubelet.service.d/10-kubeadm.conf</span><br></pre></td></tr></table></figure></p>\n<p>重启kubelet<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">systemctl daemon-reload</span><br><span class=\"line\">systemctl restart kubelet</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"创建集群\"><a href=\"#创建集群\" class=\"headerlink\" title=\"创建集群\"></a>创建集群</h3><h4 id=\"初始化master\"><a href=\"#初始化master\" class=\"headerlink\" title=\"初始化master\"></a>初始化master</h4><p>指定版本，不然就得翻墙。。。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">kubeadm init --kubernetes-version=1.9.0 --token-ttl 0</span><br></pre></td></tr></table></figure></p>\n<ul>\n<li>root用户：<code>export KUBECONFIG=/etc/kubernetes/admin.conf</code></li>\n</ul>"},{"title":"laravel","date":"2017-05-24T07:04:07.000Z","_content":"\nlaravel 笔记\n<!-- MORE -->\n\n# homestead\n这是个vagrant使用的盒子，其中包含开发使用的各种环境。\n## 添加 yar 扩展\n登陆到虚拟机后\n```\nsudo su\napt-get update\napt-get install -y libcurl3-dev\n\nwget http://pecl.php.net/get/yar-2.0.2.tgz\ntar -zxf yar-2.0.2.tgz\ncd yar-2.0.2\nphpize\n./configure\nmake && make install\n\necho \"extension=yar.so\" >> /etc/php/7.1/fpm/php.ini\n/etc/init.d/php7.1-fpm reload\n\n\nyum install autoconf -y\ncd /usr/local/serv/src\nwget http://pecl.php.net/get/redis-3.1.2.tgz\ntar -zxf redis-3.1.2.tgz\ncd redis-3.1.2\nphpize\n./configure\nmake && make install\n\necho \"extension=redis.so\" >> /etc/php/7.1/fpm/php.ini\n/etc/init.d/php7.1-fpm reload\n```\n","source":"_posts/laravel.md","raw":"---\ntitle: laravel\ndate: 2017-05-24 15:04:07\ntags:\n - PHP\n\ncategories:\n - PHP\n - laravel\n\n---\n\nlaravel 笔记\n<!-- MORE -->\n\n# homestead\n这是个vagrant使用的盒子，其中包含开发使用的各种环境。\n## 添加 yar 扩展\n登陆到虚拟机后\n```\nsudo su\napt-get update\napt-get install -y libcurl3-dev\n\nwget http://pecl.php.net/get/yar-2.0.2.tgz\ntar -zxf yar-2.0.2.tgz\ncd yar-2.0.2\nphpize\n./configure\nmake && make install\n\necho \"extension=yar.so\" >> /etc/php/7.1/fpm/php.ini\n/etc/init.d/php7.1-fpm reload\n\n\nyum install autoconf -y\ncd /usr/local/serv/src\nwget http://pecl.php.net/get/redis-3.1.2.tgz\ntar -zxf redis-3.1.2.tgz\ncd redis-3.1.2\nphpize\n./configure\nmake && make install\n\necho \"extension=redis.so\" >> /etc/php/7.1/fpm/php.ini\n/etc/init.d/php7.1-fpm reload\n```\n","slug":"laravel","published":1,"updated":"2018-06-20T11:25:37.762Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjin2pu1u000znrfy462qwpyy","content":"<p>laravel 笔记<br><a id=\"more\"></a></p>\n<h1 id=\"homestead\"><a href=\"#homestead\" class=\"headerlink\" title=\"homestead\"></a>homestead</h1><p>这是个vagrant使用的盒子，其中包含开发使用的各种环境。</p>\n<h2 id=\"添加-yar-扩展\"><a href=\"#添加-yar-扩展\" class=\"headerlink\" title=\"添加 yar 扩展\"></a>添加 yar 扩展</h2><p>登陆到虚拟机后<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo su</span><br><span class=\"line\">apt-get update</span><br><span class=\"line\">apt-get install -y libcurl3-dev</span><br><span class=\"line\"></span><br><span class=\"line\">wget http://pecl.php.net/get/yar-2.0.2.tgz</span><br><span class=\"line\">tar -zxf yar-2.0.2.tgz</span><br><span class=\"line\">cd yar-2.0.2</span><br><span class=\"line\">phpize</span><br><span class=\"line\">./configure</span><br><span class=\"line\">make &amp;&amp; make install</span><br><span class=\"line\"></span><br><span class=\"line\">echo &quot;extension=yar.so&quot; &gt;&gt; /etc/php/7.1/fpm/php.ini</span><br><span class=\"line\">/etc/init.d/php7.1-fpm reload</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">yum install autoconf -y</span><br><span class=\"line\">cd /usr/local/serv/src</span><br><span class=\"line\">wget http://pecl.php.net/get/redis-3.1.2.tgz</span><br><span class=\"line\">tar -zxf redis-3.1.2.tgz</span><br><span class=\"line\">cd redis-3.1.2</span><br><span class=\"line\">phpize</span><br><span class=\"line\">./configure</span><br><span class=\"line\">make &amp;&amp; make install</span><br><span class=\"line\"></span><br><span class=\"line\">echo &quot;extension=redis.so&quot; &gt;&gt; /etc/php/7.1/fpm/php.ini</span><br><span class=\"line\">/etc/init.d/php7.1-fpm reload</span><br></pre></td></tr></table></figure></p>\n","site":{"data":{"head":"\n<script type=\"text/javascript\" id=\"hexo.headll\">\n(function () {\n  window.addEventListener(\"load\", function () {   //添加load事件\n    $(\"body\").click(function (e) {\n        var a = new Array(\"富强\", \"民主\", \"文明\", \"和谐\", \"自由\", \"平等\", \"公正\", \"法治\", \"爱国\", \"敬业\", \"诚信\", \"友善\");\n        var a_idx=Math.floor(Math.random()*a.length);\n        var $i = $(\"<span/>\").text(a[a_idx]);\n        var x = e.pageX,y = e.pageY;\n        $i.css({\n            \"z-index\": 99999,\n            \"top\": y - 20,\n            \"left\": x,\n            \"position\": \"absolute\",\n            \"font-weight\": \"bold\",\n            \"color\": \"#ff6651\"\n        });\n        $(\"body\").append($i);\n        $i.animate({\n            \"top\": y - 180,\n            \"opacity\": 0\n        },\n        1500,\n        function () {\n            $i.remove();\n        });\n    });\n  }, false);\n})();\n</script>\n\n"}},"excerpt":"<p>laravel 笔记<br>","more":"</p>\n<h1 id=\"homestead\"><a href=\"#homestead\" class=\"headerlink\" title=\"homestead\"></a>homestead</h1><p>这是个vagrant使用的盒子，其中包含开发使用的各种环境。</p>\n<h2 id=\"添加-yar-扩展\"><a href=\"#添加-yar-扩展\" class=\"headerlink\" title=\"添加 yar 扩展\"></a>添加 yar 扩展</h2><p>登陆到虚拟机后<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo su</span><br><span class=\"line\">apt-get update</span><br><span class=\"line\">apt-get install -y libcurl3-dev</span><br><span class=\"line\"></span><br><span class=\"line\">wget http://pecl.php.net/get/yar-2.0.2.tgz</span><br><span class=\"line\">tar -zxf yar-2.0.2.tgz</span><br><span class=\"line\">cd yar-2.0.2</span><br><span class=\"line\">phpize</span><br><span class=\"line\">./configure</span><br><span class=\"line\">make &amp;&amp; make install</span><br><span class=\"line\"></span><br><span class=\"line\">echo &quot;extension=yar.so&quot; &gt;&gt; /etc/php/7.1/fpm/php.ini</span><br><span class=\"line\">/etc/init.d/php7.1-fpm reload</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">yum install autoconf -y</span><br><span class=\"line\">cd /usr/local/serv/src</span><br><span class=\"line\">wget http://pecl.php.net/get/redis-3.1.2.tgz</span><br><span class=\"line\">tar -zxf redis-3.1.2.tgz</span><br><span class=\"line\">cd redis-3.1.2</span><br><span class=\"line\">phpize</span><br><span class=\"line\">./configure</span><br><span class=\"line\">make &amp;&amp; make install</span><br><span class=\"line\"></span><br><span class=\"line\">echo &quot;extension=redis.so&quot; &gt;&gt; /etc/php/7.1/fpm/php.ini</span><br><span class=\"line\">/etc/init.d/php7.1-fpm reload</span><br></pre></td></tr></table></figure></p>"},{"title":"sed","date":"2017-03-23T16:00:00.000Z","_content":"\nsed 使用笔记\n\n<!-- MORE -->\n# 简介\n一个文本处理工具。\n\n# 常用选项\n>  -n∶使用安静(silent)模式。在一般 sed 的用法中，所有来自 STDIN的资料一般都会被列出到萤幕上。但如果加上 -n 参数后，则只有经过sed 特殊处理的那一行(或者动作)才会被列出来。  \n -e∶直接在指令列模式上进行 sed 的动作编辑；  \n -f∶直接将 sed 的动作写在一个档案内， -f filename 则可以执行 filename 内的sed 动作；  \n -r∶sed 的动作支援的是延伸型正规表示法的语法。(预设是基础正规表示法语法)  \n -i∶直接修改读取的档案内容。  \n\n# 常用命令\n> a 在当前行下面插入文本。    \n i 在当前行上面插入文本。  \n c 把选定的行改为新的文本。  \n d 删除，删除选择的行。  \n D 删除模板块的第一行。  \n s 替换指定字符  \n h 拷贝模板块的内容到内存中的缓冲区。  \n H 追加模板块的内容到内存中的缓冲区。  \n g 获得内存缓冲区的内容，并替代当前模板块中的文本。  \n G 获得内存缓冲区的内容，并追加到当前模板块文本的后面。  \n l 列表不能打印字符的清单。  \n n 读取下一个输入行，用下一个命令处理新的行而不是用第一个命令。  \n N 追加下一个输入行到模板块后面并在二者间嵌入一个新行，改变当前行号码。  \n p 打印模板块的行。  \n P(大写) 打印模板块的第一行。  \n q 退出Sed。  \n b lable 分支到脚本中带有标记的地方，如果分支不存在则分支到脚本的末尾。  \n r file 从file中读行。  \n t label if分支，从最后一行开始，条件一旦满足或者T，t命令，将导致分支到带有标号的命令处，或者到脚本的末尾。  \n T label 错误分支，从最后一行开始，一旦发生错误或者T，t命令，将导致分支到带有标号的命令处，或者到脚本的末尾。  \n w file 写并追加模板块到file末尾。  \n W file 写并追加模板块的第一行到file末尾。  \n ! 表示后面的命令对所有没有被选定的行发生作用。  \n = 打印当前行号码。  \n \\# 把注释扩展到下一个换行符以前。  \n\n\n# 栗子\n## 首行尾添加字符，直接修改文件\n使用 -i 选项， s命令  \n`sed -i '1s/$/&123' file`\n\n## 去除指定字符串\"\"#zlib zlibmodule.c\" 的首个字符  \n使用s命令，sed '/匹配字符串/s/替换源字符串/替换目标字符串/g'  \n`sed '/#zlib zlibmodule.c/s/.//' file`\n\n## 去除指定字符串 \"#_ssl _ssl.c\" 所在行与之后的2行的特定字符 \"#\"\n使用 /匹配字符串/,+2， 表示取得匹配字符串和之后的两行  \n{代码块}  \n`sed '/#_ssl _ssl.c/,+2{s/#//}' file`\n\n## game_app.sql\nsed -i '/character_set_client/s/.*//' game_app.sql\nsed -i '/DEFAULT CHARSET=utf8/s/DEFAULT CHARSET=utf8 /DEFAULT CHARSET=utf8mb4 /' game_app.sql\nsed -i '/DEFAULT CHARSET=utf8/s/DEFAULT CHARSET=utf8;/DEFAULT CHARSET=utf8mb4;/' game_app.sql\n","source":"_posts/sed.md","raw":"---\ntitle: sed\ndate: 2017-03-24 00:00:00\ntags:\n - Linux\n - 笔记\n\ncategories:\n - Linux\n\n\n---\n\nsed 使用笔记\n\n<!-- MORE -->\n# 简介\n一个文本处理工具。\n\n# 常用选项\n>  -n∶使用安静(silent)模式。在一般 sed 的用法中，所有来自 STDIN的资料一般都会被列出到萤幕上。但如果加上 -n 参数后，则只有经过sed 特殊处理的那一行(或者动作)才会被列出来。  \n -e∶直接在指令列模式上进行 sed 的动作编辑；  \n -f∶直接将 sed 的动作写在一个档案内， -f filename 则可以执行 filename 内的sed 动作；  \n -r∶sed 的动作支援的是延伸型正规表示法的语法。(预设是基础正规表示法语法)  \n -i∶直接修改读取的档案内容。  \n\n# 常用命令\n> a 在当前行下面插入文本。    \n i 在当前行上面插入文本。  \n c 把选定的行改为新的文本。  \n d 删除，删除选择的行。  \n D 删除模板块的第一行。  \n s 替换指定字符  \n h 拷贝模板块的内容到内存中的缓冲区。  \n H 追加模板块的内容到内存中的缓冲区。  \n g 获得内存缓冲区的内容，并替代当前模板块中的文本。  \n G 获得内存缓冲区的内容，并追加到当前模板块文本的后面。  \n l 列表不能打印字符的清单。  \n n 读取下一个输入行，用下一个命令处理新的行而不是用第一个命令。  \n N 追加下一个输入行到模板块后面并在二者间嵌入一个新行，改变当前行号码。  \n p 打印模板块的行。  \n P(大写) 打印模板块的第一行。  \n q 退出Sed。  \n b lable 分支到脚本中带有标记的地方，如果分支不存在则分支到脚本的末尾。  \n r file 从file中读行。  \n t label if分支，从最后一行开始，条件一旦满足或者T，t命令，将导致分支到带有标号的命令处，或者到脚本的末尾。  \n T label 错误分支，从最后一行开始，一旦发生错误或者T，t命令，将导致分支到带有标号的命令处，或者到脚本的末尾。  \n w file 写并追加模板块到file末尾。  \n W file 写并追加模板块的第一行到file末尾。  \n ! 表示后面的命令对所有没有被选定的行发生作用。  \n = 打印当前行号码。  \n \\# 把注释扩展到下一个换行符以前。  \n\n\n# 栗子\n## 首行尾添加字符，直接修改文件\n使用 -i 选项， s命令  \n`sed -i '1s/$/&123' file`\n\n## 去除指定字符串\"\"#zlib zlibmodule.c\" 的首个字符  \n使用s命令，sed '/匹配字符串/s/替换源字符串/替换目标字符串/g'  \n`sed '/#zlib zlibmodule.c/s/.//' file`\n\n## 去除指定字符串 \"#_ssl _ssl.c\" 所在行与之后的2行的特定字符 \"#\"\n使用 /匹配字符串/,+2， 表示取得匹配字符串和之后的两行  \n{代码块}  \n`sed '/#_ssl _ssl.c/,+2{s/#//}' file`\n\n## game_app.sql\nsed -i '/character_set_client/s/.*//' game_app.sql\nsed -i '/DEFAULT CHARSET=utf8/s/DEFAULT CHARSET=utf8 /DEFAULT CHARSET=utf8mb4 /' game_app.sql\nsed -i '/DEFAULT CHARSET=utf8/s/DEFAULT CHARSET=utf8;/DEFAULT CHARSET=utf8mb4;/' game_app.sql\n","slug":"sed","published":1,"updated":"2017-07-03T06:22:02.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjin2pu1v0012nrfy3n3dxy0x","content":"<p>sed 使用笔记</p>\n<a id=\"more\"></a>\n<h1 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h1><p>一个文本处理工具。</p>\n<h1 id=\"常用选项\"><a href=\"#常用选项\" class=\"headerlink\" title=\"常用选项\"></a>常用选项</h1><blockquote>\n<p> -n∶使用安静(silent)模式。在一般 sed 的用法中，所有来自 STDIN的资料一般都会被列出到萤幕上。但如果加上 -n 参数后，则只有经过sed 特殊处理的那一行(或者动作)才会被列出来。<br> -e∶直接在指令列模式上进行 sed 的动作编辑；<br> -f∶直接将 sed 的动作写在一个档案内， -f filename 则可以执行 filename 内的sed 动作；<br> -r∶sed 的动作支援的是延伸型正规表示法的语法。(预设是基础正规表示法语法)<br> -i∶直接修改读取的档案内容。  </p>\n</blockquote>\n<h1 id=\"常用命令\"><a href=\"#常用命令\" class=\"headerlink\" title=\"常用命令\"></a>常用命令</h1><blockquote>\n<p>a 在当前行下面插入文本。<br> i 在当前行上面插入文本。<br> c 把选定的行改为新的文本。<br> d 删除，删除选择的行。<br> D 删除模板块的第一行。<br> s 替换指定字符<br> h 拷贝模板块的内容到内存中的缓冲区。<br> H 追加模板块的内容到内存中的缓冲区。<br> g 获得内存缓冲区的内容，并替代当前模板块中的文本。<br> G 获得内存缓冲区的内容，并追加到当前模板块文本的后面。<br> l 列表不能打印字符的清单。<br> n 读取下一个输入行，用下一个命令处理新的行而不是用第一个命令。<br> N 追加下一个输入行到模板块后面并在二者间嵌入一个新行，改变当前行号码。<br> p 打印模板块的行。<br> P(大写) 打印模板块的第一行。<br> q 退出Sed。<br> b lable 分支到脚本中带有标记的地方，如果分支不存在则分支到脚本的末尾。<br> r file 从file中读行。<br> t label if分支，从最后一行开始，条件一旦满足或者T，t命令，将导致分支到带有标号的命令处，或者到脚本的末尾。<br> T label 错误分支，从最后一行开始，一旦发生错误或者T，t命令，将导致分支到带有标号的命令处，或者到脚本的末尾。<br> w file 写并追加模板块到file末尾。<br> W file 写并追加模板块的第一行到file末尾。<br> ! 表示后面的命令对所有没有被选定的行发生作用。<br> = 打印当前行号码。<br> # 把注释扩展到下一个换行符以前。  </p>\n</blockquote>\n<h1 id=\"栗子\"><a href=\"#栗子\" class=\"headerlink\" title=\"栗子\"></a>栗子</h1><h2 id=\"首行尾添加字符，直接修改文件\"><a href=\"#首行尾添加字符，直接修改文件\" class=\"headerlink\" title=\"首行尾添加字符，直接修改文件\"></a>首行尾添加字符，直接修改文件</h2><p>使用 -i 选项， s命令<br><code>sed -i &#39;1s/$/&amp;123&#39; file</code></p>\n<h2 id=\"去除指定字符串””-zlib-zlibmodule-c”-的首个字符\"><a href=\"#去除指定字符串””-zlib-zlibmodule-c”-的首个字符\" class=\"headerlink\" title=\"去除指定字符串””#zlib zlibmodule.c” 的首个字符\"></a>去除指定字符串””#zlib zlibmodule.c” 的首个字符</h2><p>使用s命令，sed ‘/匹配字符串/s/替换源字符串/替换目标字符串/g’<br><code>sed &#39;/#zlib zlibmodule.c/s/.//&#39; file</code></p>\n<h2 id=\"去除指定字符串-“-ssl-ssl-c”-所在行与之后的2行的特定字符-“-”\"><a href=\"#去除指定字符串-“-ssl-ssl-c”-所在行与之后的2行的特定字符-“-”\" class=\"headerlink\" title=\"去除指定字符串 “#_ssl _ssl.c” 所在行与之后的2行的特定字符 “#”\"></a>去除指定字符串 “#_ssl _ssl.c” 所在行与之后的2行的特定字符 “#”</h2><p>使用 /匹配字符串/,+2， 表示取得匹配字符串和之后的两行<br>{代码块}<br><code>sed &#39;/#_ssl _ssl.c/,+2{s/#//}&#39; file</code></p>\n<h2 id=\"game-app-sql\"><a href=\"#game-app-sql\" class=\"headerlink\" title=\"game_app.sql\"></a>game_app.sql</h2><p>sed -i ‘/character_set_client/s/.*//‘ game_app.sql<br>sed -i ‘/DEFAULT CHARSET=utf8/s/DEFAULT CHARSET=utf8 /DEFAULT CHARSET=utf8mb4 /‘ game_app.sql<br>sed -i ‘/DEFAULT CHARSET=utf8/s/DEFAULT CHARSET=utf8;/DEFAULT CHARSET=utf8mb4;/‘ game_app.sql</p>\n","site":{"data":{"head":"\n<script type=\"text/javascript\" id=\"hexo.headll\">\n(function () {\n  window.addEventListener(\"load\", function () {   //添加load事件\n    $(\"body\").click(function (e) {\n        var a = new Array(\"富强\", \"民主\", \"文明\", \"和谐\", \"自由\", \"平等\", \"公正\", \"法治\", \"爱国\", \"敬业\", \"诚信\", \"友善\");\n        var a_idx=Math.floor(Math.random()*a.length);\n        var $i = $(\"<span/>\").text(a[a_idx]);\n        var x = e.pageX,y = e.pageY;\n        $i.css({\n            \"z-index\": 99999,\n            \"top\": y - 20,\n            \"left\": x,\n            \"position\": \"absolute\",\n            \"font-weight\": \"bold\",\n            \"color\": \"#ff6651\"\n        });\n        $(\"body\").append($i);\n        $i.animate({\n            \"top\": y - 180,\n            \"opacity\": 0\n        },\n        1500,\n        function () {\n            $i.remove();\n        });\n    });\n  }, false);\n})();\n</script>\n\n"}},"excerpt":"<p>sed 使用笔记</p>","more":"<h1 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h1><p>一个文本处理工具。</p>\n<h1 id=\"常用选项\"><a href=\"#常用选项\" class=\"headerlink\" title=\"常用选项\"></a>常用选项</h1><blockquote>\n<p> -n∶使用安静(silent)模式。在一般 sed 的用法中，所有来自 STDIN的资料一般都会被列出到萤幕上。但如果加上 -n 参数后，则只有经过sed 特殊处理的那一行(或者动作)才会被列出来。<br> -e∶直接在指令列模式上进行 sed 的动作编辑；<br> -f∶直接将 sed 的动作写在一个档案内， -f filename 则可以执行 filename 内的sed 动作；<br> -r∶sed 的动作支援的是延伸型正规表示法的语法。(预设是基础正规表示法语法)<br> -i∶直接修改读取的档案内容。  </p>\n</blockquote>\n<h1 id=\"常用命令\"><a href=\"#常用命令\" class=\"headerlink\" title=\"常用命令\"></a>常用命令</h1><blockquote>\n<p>a 在当前行下面插入文本。<br> i 在当前行上面插入文本。<br> c 把选定的行改为新的文本。<br> d 删除，删除选择的行。<br> D 删除模板块的第一行。<br> s 替换指定字符<br> h 拷贝模板块的内容到内存中的缓冲区。<br> H 追加模板块的内容到内存中的缓冲区。<br> g 获得内存缓冲区的内容，并替代当前模板块中的文本。<br> G 获得内存缓冲区的内容，并追加到当前模板块文本的后面。<br> l 列表不能打印字符的清单。<br> n 读取下一个输入行，用下一个命令处理新的行而不是用第一个命令。<br> N 追加下一个输入行到模板块后面并在二者间嵌入一个新行，改变当前行号码。<br> p 打印模板块的行。<br> P(大写) 打印模板块的第一行。<br> q 退出Sed。<br> b lable 分支到脚本中带有标记的地方，如果分支不存在则分支到脚本的末尾。<br> r file 从file中读行。<br> t label if分支，从最后一行开始，条件一旦满足或者T，t命令，将导致分支到带有标号的命令处，或者到脚本的末尾。<br> T label 错误分支，从最后一行开始，一旦发生错误或者T，t命令，将导致分支到带有标号的命令处，或者到脚本的末尾。<br> w file 写并追加模板块到file末尾。<br> W file 写并追加模板块的第一行到file末尾。<br> ! 表示后面的命令对所有没有被选定的行发生作用。<br> = 打印当前行号码。<br> # 把注释扩展到下一个换行符以前。  </p>\n</blockquote>\n<h1 id=\"栗子\"><a href=\"#栗子\" class=\"headerlink\" title=\"栗子\"></a>栗子</h1><h2 id=\"首行尾添加字符，直接修改文件\"><a href=\"#首行尾添加字符，直接修改文件\" class=\"headerlink\" title=\"首行尾添加字符，直接修改文件\"></a>首行尾添加字符，直接修改文件</h2><p>使用 -i 选项， s命令<br><code>sed -i &#39;1s/$/&amp;123&#39; file</code></p>\n<h2 id=\"去除指定字符串””-zlib-zlibmodule-c”-的首个字符\"><a href=\"#去除指定字符串””-zlib-zlibmodule-c”-的首个字符\" class=\"headerlink\" title=\"去除指定字符串””#zlib zlibmodule.c” 的首个字符\"></a>去除指定字符串””#zlib zlibmodule.c” 的首个字符</h2><p>使用s命令，sed ‘/匹配字符串/s/替换源字符串/替换目标字符串/g’<br><code>sed &#39;/#zlib zlibmodule.c/s/.//&#39; file</code></p>\n<h2 id=\"去除指定字符串-“-ssl-ssl-c”-所在行与之后的2行的特定字符-“-”\"><a href=\"#去除指定字符串-“-ssl-ssl-c”-所在行与之后的2行的特定字符-“-”\" class=\"headerlink\" title=\"去除指定字符串 “#_ssl _ssl.c” 所在行与之后的2行的特定字符 “#”\"></a>去除指定字符串 “#_ssl _ssl.c” 所在行与之后的2行的特定字符 “#”</h2><p>使用 /匹配字符串/,+2， 表示取得匹配字符串和之后的两行<br>{代码块}<br><code>sed &#39;/#_ssl _ssl.c/,+2{s/#//}&#39; file</code></p>\n<h2 id=\"game-app-sql\"><a href=\"#game-app-sql\" class=\"headerlink\" title=\"game_app.sql\"></a>game_app.sql</h2><p>sed -i ‘/character_set_client/s/.*//‘ game_app.sql<br>sed -i ‘/DEFAULT CHARSET=utf8/s/DEFAULT CHARSET=utf8 /DEFAULT CHARSET=utf8mb4 /‘ game_app.sql<br>sed -i ‘/DEFAULT CHARSET=utf8/s/DEFAULT CHARSET=utf8;/DEFAULT CHARSET=utf8mb4;/‘ game_app.sql</p>"},{"title":"supervisor小记","date":"2017-03-31T13:14:00.000Z","_content":"\nsupervisor小记\n\n<!-- MORE -->\n\n# 配置\n## 期待的退出状态\n","source":"_posts/supervisor小记.md","raw":"---\ntitle: supervisor小记\ndate: 2017-03-31T21:14:00.000Z\ntags:\n  - supervisor\n  - 笔记\ncategories:\n  - Linux\n---\n\nsupervisor小记\n\n<!-- MORE -->\n\n# 配置\n## 期待的退出状态\n","slug":"supervisor小记","published":1,"updated":"2017-05-19T17:05:37.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjin2pu1y0015nrfy6l9h6qdj","content":"<p>supervisor小记</p>\n<a id=\"more\"></a>\n<h1 id=\"配置\"><a href=\"#配置\" class=\"headerlink\" title=\"配置\"></a>配置</h1><h2 id=\"期待的退出状态\"><a href=\"#期待的退出状态\" class=\"headerlink\" title=\"期待的退出状态\"></a>期待的退出状态</h2>","site":{"data":{"head":"\n<script type=\"text/javascript\" id=\"hexo.headll\">\n(function () {\n  window.addEventListener(\"load\", function () {   //添加load事件\n    $(\"body\").click(function (e) {\n        var a = new Array(\"富强\", \"民主\", \"文明\", \"和谐\", \"自由\", \"平等\", \"公正\", \"法治\", \"爱国\", \"敬业\", \"诚信\", \"友善\");\n        var a_idx=Math.floor(Math.random()*a.length);\n        var $i = $(\"<span/>\").text(a[a_idx]);\n        var x = e.pageX,y = e.pageY;\n        $i.css({\n            \"z-index\": 99999,\n            \"top\": y - 20,\n            \"left\": x,\n            \"position\": \"absolute\",\n            \"font-weight\": \"bold\",\n            \"color\": \"#ff6651\"\n        });\n        $(\"body\").append($i);\n        $i.animate({\n            \"top\": y - 180,\n            \"opacity\": 0\n        },\n        1500,\n        function () {\n            $i.remove();\n        });\n    });\n  }, false);\n})();\n</script>\n\n"}},"excerpt":"<p>supervisor小记</p>","more":"<h1 id=\"配置\"><a href=\"#配置\" class=\"headerlink\" title=\"配置\"></a>配置</h1><h2 id=\"期待的退出状态\"><a href=\"#期待的退出状态\" class=\"headerlink\" title=\"期待的退出状态\"></a>期待的退出状态</h2>"},{"title":"win7安装vbox","date":"2017-03-31T13:14:00.000Z","_content":"\nwin7下安装virtual box笔记\n\n<!-- MORE -->\n\n# virtual box创建CentOS虚拟机\n# win7下使用SSH登录虚拟机\n## 使用NAT方式  \n使用端口转发，把宿主机的端口，转到虚拟机上去， 如下图  \n![img](/img/win7安装vbox/vbox_nat_setting.png)\n\n# win7 与虚拟机的共享文件夹\n## 安装增强功能\n```\nyum install -y gcc gcc-devel gcc-c++ gcc-c++-devel make kernel kernel-devel bzip2\nmkdir /mnt/cdrom\nmount /dev/cdrom /mnt/cdrom\ncd /mnt/cdrom\n./VBoxLinuxAdditions.run\n```\n\n然后就各种yes，回车了。\n\n## 配置共享文件夹  \n在虚拟机设置，共享文件夹，新增得到共享文件夹名称。\n```\nsudo mount -t vboxsf 共享文件夹名称（在设置页面设置的） 挂载的目录\n```\n","source":"_posts/win7安装vbox.md","raw":"---\ntitle: win7安装vbox\ndate: 2017-03-31T21:14:00.000Z\ntags:\n  - vbox\n  - 笔记\ncategories:\n  - Linux\n---\n\nwin7下安装virtual box笔记\n\n<!-- MORE -->\n\n# virtual box创建CentOS虚拟机\n# win7下使用SSH登录虚拟机\n## 使用NAT方式  \n使用端口转发，把宿主机的端口，转到虚拟机上去， 如下图  \n![img](/img/win7安装vbox/vbox_nat_setting.png)\n\n# win7 与虚拟机的共享文件夹\n## 安装增强功能\n```\nyum install -y gcc gcc-devel gcc-c++ gcc-c++-devel make kernel kernel-devel bzip2\nmkdir /mnt/cdrom\nmount /dev/cdrom /mnt/cdrom\ncd /mnt/cdrom\n./VBoxLinuxAdditions.run\n```\n\n然后就各种yes，回车了。\n\n## 配置共享文件夹  \n在虚拟机设置，共享文件夹，新增得到共享文件夹名称。\n```\nsudo mount -t vboxsf 共享文件夹名称（在设置页面设置的） 挂载的目录\n```\n","slug":"win7安装vbox","published":1,"updated":"2017-05-19T17:05:37.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjin2pu1z0018nrfy6xn25d1c","content":"<p>win7下安装virtual box笔记</p>\n<a id=\"more\"></a>\n<h1 id=\"virtual-box创建CentOS虚拟机\"><a href=\"#virtual-box创建CentOS虚拟机\" class=\"headerlink\" title=\"virtual box创建CentOS虚拟机\"></a>virtual box创建CentOS虚拟机</h1><h1 id=\"win7下使用SSH登录虚拟机\"><a href=\"#win7下使用SSH登录虚拟机\" class=\"headerlink\" title=\"win7下使用SSH登录虚拟机\"></a>win7下使用SSH登录虚拟机</h1><h2 id=\"使用NAT方式\"><a href=\"#使用NAT方式\" class=\"headerlink\" title=\"使用NAT方式\"></a>使用NAT方式</h2><p>使用端口转发，把宿主机的端口，转到虚拟机上去， 如下图<br><img src=\"/img/win7安装vbox/vbox_nat_setting.png\" alt=\"img\"></p>\n<h1 id=\"win7-与虚拟机的共享文件夹\"><a href=\"#win7-与虚拟机的共享文件夹\" class=\"headerlink\" title=\"win7 与虚拟机的共享文件夹\"></a>win7 与虚拟机的共享文件夹</h1><h2 id=\"安装增强功能\"><a href=\"#安装增强功能\" class=\"headerlink\" title=\"安装增强功能\"></a>安装增强功能</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum install -y gcc gcc-devel gcc-c++ gcc-c++-devel make kernel kernel-devel bzip2</span><br><span class=\"line\">mkdir /mnt/cdrom</span><br><span class=\"line\">mount /dev/cdrom /mnt/cdrom</span><br><span class=\"line\">cd /mnt/cdrom</span><br><span class=\"line\">./VBoxLinuxAdditions.run</span><br></pre></td></tr></table></figure>\n<p>然后就各种yes，回车了。</p>\n<h2 id=\"配置共享文件夹\"><a href=\"#配置共享文件夹\" class=\"headerlink\" title=\"配置共享文件夹\"></a>配置共享文件夹</h2><p>在虚拟机设置，共享文件夹，新增得到共享文件夹名称。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo mount -t vboxsf 共享文件夹名称（在设置页面设置的） 挂载的目录</span><br></pre></td></tr></table></figure></p>\n","site":{"data":{"head":"\n<script type=\"text/javascript\" id=\"hexo.headll\">\n(function () {\n  window.addEventListener(\"load\", function () {   //添加load事件\n    $(\"body\").click(function (e) {\n        var a = new Array(\"富强\", \"民主\", \"文明\", \"和谐\", \"自由\", \"平等\", \"公正\", \"法治\", \"爱国\", \"敬业\", \"诚信\", \"友善\");\n        var a_idx=Math.floor(Math.random()*a.length);\n        var $i = $(\"<span/>\").text(a[a_idx]);\n        var x = e.pageX,y = e.pageY;\n        $i.css({\n            \"z-index\": 99999,\n            \"top\": y - 20,\n            \"left\": x,\n            \"position\": \"absolute\",\n            \"font-weight\": \"bold\",\n            \"color\": \"#ff6651\"\n        });\n        $(\"body\").append($i);\n        $i.animate({\n            \"top\": y - 180,\n            \"opacity\": 0\n        },\n        1500,\n        function () {\n            $i.remove();\n        });\n    });\n  }, false);\n})();\n</script>\n\n"}},"excerpt":"<p>win7下安装virtual box笔记</p>","more":"<h1 id=\"virtual-box创建CentOS虚拟机\"><a href=\"#virtual-box创建CentOS虚拟机\" class=\"headerlink\" title=\"virtual box创建CentOS虚拟机\"></a>virtual box创建CentOS虚拟机</h1><h1 id=\"win7下使用SSH登录虚拟机\"><a href=\"#win7下使用SSH登录虚拟机\" class=\"headerlink\" title=\"win7下使用SSH登录虚拟机\"></a>win7下使用SSH登录虚拟机</h1><h2 id=\"使用NAT方式\"><a href=\"#使用NAT方式\" class=\"headerlink\" title=\"使用NAT方式\"></a>使用NAT方式</h2><p>使用端口转发，把宿主机的端口，转到虚拟机上去， 如下图<br><img src=\"/img/win7安装vbox/vbox_nat_setting.png\" alt=\"img\"></p>\n<h1 id=\"win7-与虚拟机的共享文件夹\"><a href=\"#win7-与虚拟机的共享文件夹\" class=\"headerlink\" title=\"win7 与虚拟机的共享文件夹\"></a>win7 与虚拟机的共享文件夹</h1><h2 id=\"安装增强功能\"><a href=\"#安装增强功能\" class=\"headerlink\" title=\"安装增强功能\"></a>安装增强功能</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum install -y gcc gcc-devel gcc-c++ gcc-c++-devel make kernel kernel-devel bzip2</span><br><span class=\"line\">mkdir /mnt/cdrom</span><br><span class=\"line\">mount /dev/cdrom /mnt/cdrom</span><br><span class=\"line\">cd /mnt/cdrom</span><br><span class=\"line\">./VBoxLinuxAdditions.run</span><br></pre></td></tr></table></figure>\n<p>然后就各种yes，回车了。</p>\n<h2 id=\"配置共享文件夹\"><a href=\"#配置共享文件夹\" class=\"headerlink\" title=\"配置共享文件夹\"></a>配置共享文件夹</h2><p>在虚拟机设置，共享文件夹，新增得到共享文件夹名称。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo mount -t vboxsf 共享文件夹名称（在设置页面设置的） 挂载的目录</span><br></pre></td></tr></table></figure></p>"},{"title":"yum安装MySQL","date":"2017-03-23T16:00:00.000Z","_content":"\nyum 安装 MySQL\n\n<!-- MORE -->\n环境：\nCentOS7\nVBox\n\n```\nwget http://dev.mysql.com/get/mysql57-community-release-el7-7.noarch.rpm\nyum localinstall -y mysql57-community-release-el7-7.noarch.rpm\nyum install -y mysql-community-server\nsystemctl start mysqld.service\n\n# 密码：\ngrep 'password' /var/log/mysqld.log | awk '{print $NF}'\nmysql -u root -p`grep 'password' /var/log/mysqld.log | awk '{print $NF}'`\n\n# 重设密码\nset global validate_password_policy=0;\nset global validate_password_length=4;\nset password for 'root'@'localhost'=password('root');\nflush privileges;\n\n```\n","source":"_posts/yum安装MySQL.md","raw":"---\ntitle: yum安装MySQL\ndate: 2017-03-24 00:00:00\ntags:\n - MySQL\n\ncategories:\n - MySQL\n\n\n---\n\nyum 安装 MySQL\n\n<!-- MORE -->\n环境：\nCentOS7\nVBox\n\n```\nwget http://dev.mysql.com/get/mysql57-community-release-el7-7.noarch.rpm\nyum localinstall -y mysql57-community-release-el7-7.noarch.rpm\nyum install -y mysql-community-server\nsystemctl start mysqld.service\n\n# 密码：\ngrep 'password' /var/log/mysqld.log | awk '{print $NF}'\nmysql -u root -p`grep 'password' /var/log/mysqld.log | awk '{print $NF}'`\n\n# 重设密码\nset global validate_password_policy=0;\nset global validate_password_length=4;\nset password for 'root'@'localhost'=password('root');\nflush privileges;\n\n```\n","slug":"yum安装MySQL","published":1,"updated":"2017-05-19T17:05:37.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjin2pu20001anrfy8ypjuzsb","content":"<p>yum 安装 MySQL</p>\n<a id=\"more\"></a>\n<p>环境：<br>CentOS7<br>VBox</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget http://dev.mysql.com/get/mysql57-community-release-el7-7.noarch.rpm</span><br><span class=\"line\">yum localinstall -y mysql57-community-release-el7-7.noarch.rpm</span><br><span class=\"line\">yum install -y mysql-community-server</span><br><span class=\"line\">systemctl start mysqld.service</span><br><span class=\"line\"></span><br><span class=\"line\"># 密码：</span><br><span class=\"line\">grep &apos;password&apos; /var/log/mysqld.log | awk &apos;&#123;print $NF&#125;&apos;</span><br><span class=\"line\">mysql -u root -p`grep &apos;password&apos; /var/log/mysqld.log | awk &apos;&#123;print $NF&#125;&apos;`</span><br><span class=\"line\"></span><br><span class=\"line\"># 重设密码</span><br><span class=\"line\">set global validate_password_policy=0;</span><br><span class=\"line\">set global validate_password_length=4;</span><br><span class=\"line\">set password for &apos;root&apos;@&apos;localhost&apos;=password(&apos;root&apos;);</span><br><span class=\"line\">flush privileges;</span><br></pre></td></tr></table></figure>\n","site":{"data":{"head":"\n<script type=\"text/javascript\" id=\"hexo.headll\">\n(function () {\n  window.addEventListener(\"load\", function () {   //添加load事件\n    $(\"body\").click(function (e) {\n        var a = new Array(\"富强\", \"民主\", \"文明\", \"和谐\", \"自由\", \"平等\", \"公正\", \"法治\", \"爱国\", \"敬业\", \"诚信\", \"友善\");\n        var a_idx=Math.floor(Math.random()*a.length);\n        var $i = $(\"<span/>\").text(a[a_idx]);\n        var x = e.pageX,y = e.pageY;\n        $i.css({\n            \"z-index\": 99999,\n            \"top\": y - 20,\n            \"left\": x,\n            \"position\": \"absolute\",\n            \"font-weight\": \"bold\",\n            \"color\": \"#ff6651\"\n        });\n        $(\"body\").append($i);\n        $i.animate({\n            \"top\": y - 180,\n            \"opacity\": 0\n        },\n        1500,\n        function () {\n            $i.remove();\n        });\n    });\n  }, false);\n})();\n</script>\n\n"}},"excerpt":"<p>yum 安装 MySQL</p>","more":"<p>环境：<br>CentOS7<br>VBox</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget http://dev.mysql.com/get/mysql57-community-release-el7-7.noarch.rpm</span><br><span class=\"line\">yum localinstall -y mysql57-community-release-el7-7.noarch.rpm</span><br><span class=\"line\">yum install -y mysql-community-server</span><br><span class=\"line\">systemctl start mysqld.service</span><br><span class=\"line\"></span><br><span class=\"line\"># 密码：</span><br><span class=\"line\">grep &apos;password&apos; /var/log/mysqld.log | awk &apos;&#123;print $NF&#125;&apos;</span><br><span class=\"line\">mysql -u root -p`grep &apos;password&apos; /var/log/mysqld.log | awk &apos;&#123;print $NF&#125;&apos;`</span><br><span class=\"line\"></span><br><span class=\"line\"># 重设密码</span><br><span class=\"line\">set global validate_password_policy=0;</span><br><span class=\"line\">set global validate_password_length=4;</span><br><span class=\"line\">set password for &apos;root&apos;@&apos;localhost&apos;=password(&apos;root&apos;);</span><br><span class=\"line\">flush privileges;</span><br></pre></td></tr></table></figure>"},{"title":"升级python","date":"2017-03-24T09:00:00.000Z","_content":"\n升级CentOS 自带的 python 2.7.5 到 2.7.11\n\n<!-- MORE -->\n# 环境\nLINUX 虚拟机\nCentOS 7\n\n# 升级 [python](https://www.python.org/)\n\n```\n# 先装 zlib\nyum install -y zlib1g-dev zlib zlib-devel openssl-devel\n\nwget https://www.python.org/ftp/python/2.7.11/Python-2.7.11.tgz\ntar -zxf Python-2.7.11.tgz\ncd Python-2.7.11\n\n\n\n# 安装\nmkdir /usr/local/python-2.7.11\n./configure --prefix=/usr/local/python-2.7.11\n\n# moudle @TODO\nsed -i '/#zlib zlibmodule.c/s/.//' Modules/Setup\nsed -i '/#_ssl _ssl.c/,+2{s/#//}' Modules/Setup\n\n\nmake && make install\n```\n\n# 扩展\n## _sqlite\n`yum install sqlite-devel -y`\n重新编译安装\n\n\n# 替换默认的 python 命令  __慎重__\n因新装的python module会导致yum等系统命令问题。\n```\nmv /bin/python /bin/python_old  \nmv /usr/bin/python /usr/bin/python_old  \n\nln -s /usr/local/python-2.7.11/bin/python2.7 /bin/python\nln -s /usr/local/python-2.7.11/bin/python2.7 /usr/bin/python\n```\n\n## 重装pip，已知所需module：zlib, ssl\n```\nwget https://bootstrap.pypa.io/get-pip.py\npython get-pip.py\n```\n\n## yum 修复\n### 第一种，指向yum到原来的python， 这种简单些\n```\nsed -i '1s/$/&_old/' /usr/bin/yum\nsed -i '1s/$/&_old/' /usr/libexec/urlgrabber-ext-down\n```\n### 第二种，[重装yum](http://jingyan.baidu.com/article/ed2a5d1f5a9fbe09f6be17ea.html)\n","source":"_posts/升级python.md","raw":"---\ntitle: 升级python\ndate: 2017-03-24 17:00:00\ntags:\n - Linux\n - CentOS\n\ncategories:\n - Linux\n\n\n---\n\n升级CentOS 自带的 python 2.7.5 到 2.7.11\n\n<!-- MORE -->\n# 环境\nLINUX 虚拟机\nCentOS 7\n\n# 升级 [python](https://www.python.org/)\n\n```\n# 先装 zlib\nyum install -y zlib1g-dev zlib zlib-devel openssl-devel\n\nwget https://www.python.org/ftp/python/2.7.11/Python-2.7.11.tgz\ntar -zxf Python-2.7.11.tgz\ncd Python-2.7.11\n\n\n\n# 安装\nmkdir /usr/local/python-2.7.11\n./configure --prefix=/usr/local/python-2.7.11\n\n# moudle @TODO\nsed -i '/#zlib zlibmodule.c/s/.//' Modules/Setup\nsed -i '/#_ssl _ssl.c/,+2{s/#//}' Modules/Setup\n\n\nmake && make install\n```\n\n# 扩展\n## _sqlite\n`yum install sqlite-devel -y`\n重新编译安装\n\n\n# 替换默认的 python 命令  __慎重__\n因新装的python module会导致yum等系统命令问题。\n```\nmv /bin/python /bin/python_old  \nmv /usr/bin/python /usr/bin/python_old  \n\nln -s /usr/local/python-2.7.11/bin/python2.7 /bin/python\nln -s /usr/local/python-2.7.11/bin/python2.7 /usr/bin/python\n```\n\n## 重装pip，已知所需module：zlib, ssl\n```\nwget https://bootstrap.pypa.io/get-pip.py\npython get-pip.py\n```\n\n## yum 修复\n### 第一种，指向yum到原来的python， 这种简单些\n```\nsed -i '1s/$/&_old/' /usr/bin/yum\nsed -i '1s/$/&_old/' /usr/libexec/urlgrabber-ext-down\n```\n### 第二种，[重装yum](http://jingyan.baidu.com/article/ed2a5d1f5a9fbe09f6be17ea.html)\n","slug":"升级python","published":1,"updated":"2017-05-19T17:05:37.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjin2pu21001fnrfynciwbj5l","content":"<p>升级CentOS 自带的 python 2.7.5 到 2.7.11</p>\n<a id=\"more\"></a>\n<h1 id=\"环境\"><a href=\"#环境\" class=\"headerlink\" title=\"环境\"></a>环境</h1><p>LINUX 虚拟机<br>CentOS 7</p>\n<h1 id=\"升级-python\"><a href=\"#升级-python\" class=\"headerlink\" title=\"升级 python\"></a>升级 <a href=\"https://www.python.org/\" target=\"_blank\" rel=\"noopener\">python</a></h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 先装 zlib</span><br><span class=\"line\">yum install -y zlib1g-dev zlib zlib-devel openssl-devel</span><br><span class=\"line\"></span><br><span class=\"line\">wget https://www.python.org/ftp/python/2.7.11/Python-2.7.11.tgz</span><br><span class=\"line\">tar -zxf Python-2.7.11.tgz</span><br><span class=\"line\">cd Python-2.7.11</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"># 安装</span><br><span class=\"line\">mkdir /usr/local/python-2.7.11</span><br><span class=\"line\">./configure --prefix=/usr/local/python-2.7.11</span><br><span class=\"line\"></span><br><span class=\"line\"># moudle @TODO</span><br><span class=\"line\">sed -i &apos;/#zlib zlibmodule.c/s/.//&apos; Modules/Setup</span><br><span class=\"line\">sed -i &apos;/#_ssl _ssl.c/,+2&#123;s/#//&#125;&apos; Modules/Setup</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">make &amp;&amp; make install</span><br></pre></td></tr></table></figure>\n<h1 id=\"扩展\"><a href=\"#扩展\" class=\"headerlink\" title=\"扩展\"></a>扩展</h1><h2 id=\"sqlite\"><a href=\"#sqlite\" class=\"headerlink\" title=\"_sqlite\"></a>_sqlite</h2><p><code>yum install sqlite-devel -y</code><br>重新编译安装</p>\n<h1 id=\"替换默认的-python-命令-慎重\"><a href=\"#替换默认的-python-命令-慎重\" class=\"headerlink\" title=\"替换默认的 python 命令  慎重\"></a>替换默认的 python 命令  <strong>慎重</strong></h1><p>因新装的python module会导致yum等系统命令问题。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mv /bin/python /bin/python_old  </span><br><span class=\"line\">mv /usr/bin/python /usr/bin/python_old  </span><br><span class=\"line\"></span><br><span class=\"line\">ln -s /usr/local/python-2.7.11/bin/python2.7 /bin/python</span><br><span class=\"line\">ln -s /usr/local/python-2.7.11/bin/python2.7 /usr/bin/python</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"重装pip，已知所需module：zlib-ssl\"><a href=\"#重装pip，已知所需module：zlib-ssl\" class=\"headerlink\" title=\"重装pip，已知所需module：zlib, ssl\"></a>重装pip，已知所需module：zlib, ssl</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget https://bootstrap.pypa.io/get-pip.py</span><br><span class=\"line\">python get-pip.py</span><br></pre></td></tr></table></figure>\n<h2 id=\"yum-修复\"><a href=\"#yum-修复\" class=\"headerlink\" title=\"yum 修复\"></a>yum 修复</h2><h3 id=\"第一种，指向yum到原来的python，-这种简单些\"><a href=\"#第一种，指向yum到原来的python，-这种简单些\" class=\"headerlink\" title=\"第一种，指向yum到原来的python， 这种简单些\"></a>第一种，指向yum到原来的python， 这种简单些</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sed -i &apos;1s/$/&amp;_old/&apos; /usr/bin/yum</span><br><span class=\"line\">sed -i &apos;1s/$/&amp;_old/&apos; /usr/libexec/urlgrabber-ext-down</span><br></pre></td></tr></table></figure>\n<h3 id=\"第二种，重装yum\"><a href=\"#第二种，重装yum\" class=\"headerlink\" title=\"第二种，重装yum\"></a>第二种，<a href=\"http://jingyan.baidu.com/article/ed2a5d1f5a9fbe09f6be17ea.html\" target=\"_blank\" rel=\"noopener\">重装yum</a></h3>","site":{"data":{"head":"\n<script type=\"text/javascript\" id=\"hexo.headll\">\n(function () {\n  window.addEventListener(\"load\", function () {   //添加load事件\n    $(\"body\").click(function (e) {\n        var a = new Array(\"富强\", \"民主\", \"文明\", \"和谐\", \"自由\", \"平等\", \"公正\", \"法治\", \"爱国\", \"敬业\", \"诚信\", \"友善\");\n        var a_idx=Math.floor(Math.random()*a.length);\n        var $i = $(\"<span/>\").text(a[a_idx]);\n        var x = e.pageX,y = e.pageY;\n        $i.css({\n            \"z-index\": 99999,\n            \"top\": y - 20,\n            \"left\": x,\n            \"position\": \"absolute\",\n            \"font-weight\": \"bold\",\n            \"color\": \"#ff6651\"\n        });\n        $(\"body\").append($i);\n        $i.animate({\n            \"top\": y - 180,\n            \"opacity\": 0\n        },\n        1500,\n        function () {\n            $i.remove();\n        });\n    });\n  }, false);\n})();\n</script>\n\n"}},"excerpt":"<p>升级CentOS 自带的 python 2.7.5 到 2.7.11</p>","more":"<h1 id=\"环境\"><a href=\"#环境\" class=\"headerlink\" title=\"环境\"></a>环境</h1><p>LINUX 虚拟机<br>CentOS 7</p>\n<h1 id=\"升级-python\"><a href=\"#升级-python\" class=\"headerlink\" title=\"升级 python\"></a>升级 <a href=\"https://www.python.org/\" target=\"_blank\" rel=\"noopener\">python</a></h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 先装 zlib</span><br><span class=\"line\">yum install -y zlib1g-dev zlib zlib-devel openssl-devel</span><br><span class=\"line\"></span><br><span class=\"line\">wget https://www.python.org/ftp/python/2.7.11/Python-2.7.11.tgz</span><br><span class=\"line\">tar -zxf Python-2.7.11.tgz</span><br><span class=\"line\">cd Python-2.7.11</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"># 安装</span><br><span class=\"line\">mkdir /usr/local/python-2.7.11</span><br><span class=\"line\">./configure --prefix=/usr/local/python-2.7.11</span><br><span class=\"line\"></span><br><span class=\"line\"># moudle @TODO</span><br><span class=\"line\">sed -i &apos;/#zlib zlibmodule.c/s/.//&apos; Modules/Setup</span><br><span class=\"line\">sed -i &apos;/#_ssl _ssl.c/,+2&#123;s/#//&#125;&apos; Modules/Setup</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">make &amp;&amp; make install</span><br></pre></td></tr></table></figure>\n<h1 id=\"扩展\"><a href=\"#扩展\" class=\"headerlink\" title=\"扩展\"></a>扩展</h1><h2 id=\"sqlite\"><a href=\"#sqlite\" class=\"headerlink\" title=\"_sqlite\"></a>_sqlite</h2><p><code>yum install sqlite-devel -y</code><br>重新编译安装</p>\n<h1 id=\"替换默认的-python-命令-慎重\"><a href=\"#替换默认的-python-命令-慎重\" class=\"headerlink\" title=\"替换默认的 python 命令  慎重\"></a>替换默认的 python 命令  <strong>慎重</strong></h1><p>因新装的python module会导致yum等系统命令问题。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mv /bin/python /bin/python_old  </span><br><span class=\"line\">mv /usr/bin/python /usr/bin/python_old  </span><br><span class=\"line\"></span><br><span class=\"line\">ln -s /usr/local/python-2.7.11/bin/python2.7 /bin/python</span><br><span class=\"line\">ln -s /usr/local/python-2.7.11/bin/python2.7 /usr/bin/python</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"重装pip，已知所需module：zlib-ssl\"><a href=\"#重装pip，已知所需module：zlib-ssl\" class=\"headerlink\" title=\"重装pip，已知所需module：zlib, ssl\"></a>重装pip，已知所需module：zlib, ssl</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget https://bootstrap.pypa.io/get-pip.py</span><br><span class=\"line\">python get-pip.py</span><br></pre></td></tr></table></figure>\n<h2 id=\"yum-修复\"><a href=\"#yum-修复\" class=\"headerlink\" title=\"yum 修复\"></a>yum 修复</h2><h3 id=\"第一种，指向yum到原来的python，-这种简单些\"><a href=\"#第一种，指向yum到原来的python，-这种简单些\" class=\"headerlink\" title=\"第一种，指向yum到原来的python， 这种简单些\"></a>第一种，指向yum到原来的python， 这种简单些</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sed -i &apos;1s/$/&amp;_old/&apos; /usr/bin/yum</span><br><span class=\"line\">sed -i &apos;1s/$/&amp;_old/&apos; /usr/libexec/urlgrabber-ext-down</span><br></pre></td></tr></table></figure>\n<h3 id=\"第二种，重装yum\"><a href=\"#第二种，重装yum\" class=\"headerlink\" title=\"第二种，重装yum\"></a>第二种，<a href=\"http://jingyan.baidu.com/article/ed2a5d1f5a9fbe09f6be17ea.html\" target=\"_blank\" rel=\"noopener\">重装yum</a></h3>"},{"title":"模式-单例模式","date":"2018-06-15T08:35:00.000Z","_content":"\n设计模式之单例模式\n\n<!-- MORE -->\n\n## 简介\n> 保证一个类仅有一个实例，并提供一个访问它的全局访问点。\n\n## 关键点\n- 一个实例\n- 全局，多线程、协程\n- 一个访问点\n\n## 类图\n![](http://www.plantuml.com/plantuml/svg/SoWkIImgAStDuGh9BCb9LL1wsZlroRxkPoiMFjtJhyJ5bPoJM5oi49oPbvwJMfAVfr3DfQ2WMmtKL9APN8iadfa75CjBJWL9nySdvmEvHQN99HgQ2bOAPVcPAK1nRRYszDGIJwXwX89QBeVKl1IWIm00)\n\n## 实现\n### PHP\n- 只需要实现单线程的单例\n- 注意__clone()\n\n#### 定义\n```PHP\nclass Singleton {\n    private static $instance;\n    private function __construct() { }\n    private function __clone() { }\n    public static function getInstance() {\n        if (!isset(self::$instance)) {\n            self::$instance = new self();\n        }\n        return self::$instance;\n    }\n}\n```\n\n#### 使用\n```PHP\n$single1 = Singleton::getInstance();\n$single2 = Singleton::getInstance();\n\necho $single1 === $single2;\n```\n\n#### 结果\n```\n1\n```\n\n## 生成图的代码\n### 单例模式\n```plantuml\n@startuml\nTitle \"单例模式\"\n\nclass Singleton {\n  -{static} Singleton instance\n  -__construct() : void\n  +{static} getInstance() : void\n}\n\n@enduml\n```\n","source":"_posts/模式-单例模式.md","raw":"---\ntitle: 模式-单例模式\ndate: 2018-06-15T16:35:00.000Z\ntags:\n  - 模式\n  - 笔记\ncategories:\n  - 模式\n---\n\n设计模式之单例模式\n\n<!-- MORE -->\n\n## 简介\n> 保证一个类仅有一个实例，并提供一个访问它的全局访问点。\n\n## 关键点\n- 一个实例\n- 全局，多线程、协程\n- 一个访问点\n\n## 类图\n![](http://www.plantuml.com/plantuml/svg/SoWkIImgAStDuGh9BCb9LL1wsZlroRxkPoiMFjtJhyJ5bPoJM5oi49oPbvwJMfAVfr3DfQ2WMmtKL9APN8iadfa75CjBJWL9nySdvmEvHQN99HgQ2bOAPVcPAK1nRRYszDGIJwXwX89QBeVKl1IWIm00)\n\n## 实现\n### PHP\n- 只需要实现单线程的单例\n- 注意__clone()\n\n#### 定义\n```PHP\nclass Singleton {\n    private static $instance;\n    private function __construct() { }\n    private function __clone() { }\n    public static function getInstance() {\n        if (!isset(self::$instance)) {\n            self::$instance = new self();\n        }\n        return self::$instance;\n    }\n}\n```\n\n#### 使用\n```PHP\n$single1 = Singleton::getInstance();\n$single2 = Singleton::getInstance();\n\necho $single1 === $single2;\n```\n\n#### 结果\n```\n1\n```\n\n## 生成图的代码\n### 单例模式\n```plantuml\n@startuml\nTitle \"单例模式\"\n\nclass Singleton {\n  -{static} Singleton instance\n  -__construct() : void\n  +{static} getInstance() : void\n}\n\n@enduml\n```\n","slug":"模式-单例模式","published":1,"updated":"2018-06-20T10:33:30.167Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjin2pu22001hnrfykk6dwz7p","content":"<p>设计模式之单例模式</p>\n<a id=\"more\"></a>\n<h2 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h2><blockquote>\n<p>保证一个类仅有一个实例，并提供一个访问它的全局访问点。</p>\n</blockquote>\n<h2 id=\"关键点\"><a href=\"#关键点\" class=\"headerlink\" title=\"关键点\"></a>关键点</h2><ul>\n<li>一个实例</li>\n<li>全局，多线程、协程</li>\n<li>一个访问点</li>\n</ul>\n<h2 id=\"类图\"><a href=\"#类图\" class=\"headerlink\" title=\"类图\"></a>类图</h2><p><img src=\"http://www.plantuml.com/plantuml/svg/SoWkIImgAStDuGh9BCb9LL1wsZlroRxkPoiMFjtJhyJ5bPoJM5oi49oPbvwJMfAVfr3DfQ2WMmtKL9APN8iadfa75CjBJWL9nySdvmEvHQN99HgQ2bOAPVcPAK1nRRYszDGIJwXwX89QBeVKl1IWIm00\" alt=\"\"></p>\n<h2 id=\"实现\"><a href=\"#实现\" class=\"headerlink\" title=\"实现\"></a>实现</h2><h3 id=\"PHP\"><a href=\"#PHP\" class=\"headerlink\" title=\"PHP\"></a>PHP</h3><ul>\n<li>只需要实现单线程的单例</li>\n<li>注意__clone()</li>\n</ul>\n<h4 id=\"定义\"><a href=\"#定义\" class=\"headerlink\" title=\"定义\"></a>定义</h4><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Singleton</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> $instance;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__construct</span><span class=\"params\">()</span> </span>&#123; &#125;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__clone</span><span class=\"params\">()</span> </span>&#123; &#125;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">getInstance</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!<span class=\"keyword\">isset</span>(<span class=\"keyword\">self</span>::$instance)) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">self</span>::$instance = <span class=\"keyword\">new</span> <span class=\"keyword\">self</span>();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">self</span>::$instance;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"使用\"><a href=\"#使用\" class=\"headerlink\" title=\"使用\"></a>使用</h4><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$single1 = Singleton::getInstance();</span><br><span class=\"line\">$single2 = Singleton::getInstance();</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">echo</span> $single1 === $single2;</span><br></pre></td></tr></table></figure>\n<h4 id=\"结果\"><a href=\"#结果\" class=\"headerlink\" title=\"结果\"></a>结果</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1</span><br></pre></td></tr></table></figure>\n<h2 id=\"生成图的代码\"><a href=\"#生成图的代码\" class=\"headerlink\" title=\"生成图的代码\"></a>生成图的代码</h2><h3 id=\"单例模式\"><a href=\"#单例模式\" class=\"headerlink\" title=\"单例模式\"></a>单例模式</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">@startuml</span><br><span class=\"line\">Title &quot;单例模式&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">class Singleton &#123;</span><br><span class=\"line\">  -&#123;static&#125; Singleton instance</span><br><span class=\"line\">  -__construct() : void</span><br><span class=\"line\">  +&#123;static&#125; getInstance() : void</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">@enduml</span><br></pre></td></tr></table></figure>\n","site":{"data":{"head":"\n<script type=\"text/javascript\" id=\"hexo.headll\">\n(function () {\n  window.addEventListener(\"load\", function () {   //添加load事件\n    $(\"body\").click(function (e) {\n        var a = new Array(\"富强\", \"民主\", \"文明\", \"和谐\", \"自由\", \"平等\", \"公正\", \"法治\", \"爱国\", \"敬业\", \"诚信\", \"友善\");\n        var a_idx=Math.floor(Math.random()*a.length);\n        var $i = $(\"<span/>\").text(a[a_idx]);\n        var x = e.pageX,y = e.pageY;\n        $i.css({\n            \"z-index\": 99999,\n            \"top\": y - 20,\n            \"left\": x,\n            \"position\": \"absolute\",\n            \"font-weight\": \"bold\",\n            \"color\": \"#ff6651\"\n        });\n        $(\"body\").append($i);\n        $i.animate({\n            \"top\": y - 180,\n            \"opacity\": 0\n        },\n        1500,\n        function () {\n            $i.remove();\n        });\n    });\n  }, false);\n})();\n</script>\n\n"}},"excerpt":"<p>设计模式之单例模式</p>","more":"<h2 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h2><blockquote>\n<p>保证一个类仅有一个实例，并提供一个访问它的全局访问点。</p>\n</blockquote>\n<h2 id=\"关键点\"><a href=\"#关键点\" class=\"headerlink\" title=\"关键点\"></a>关键点</h2><ul>\n<li>一个实例</li>\n<li>全局，多线程、协程</li>\n<li>一个访问点</li>\n</ul>\n<h2 id=\"类图\"><a href=\"#类图\" class=\"headerlink\" title=\"类图\"></a>类图</h2><p><img src=\"http://www.plantuml.com/plantuml/svg/SoWkIImgAStDuGh9BCb9LL1wsZlroRxkPoiMFjtJhyJ5bPoJM5oi49oPbvwJMfAVfr3DfQ2WMmtKL9APN8iadfa75CjBJWL9nySdvmEvHQN99HgQ2bOAPVcPAK1nRRYszDGIJwXwX89QBeVKl1IWIm00\" alt=\"\"></p>\n<h2 id=\"实现\"><a href=\"#实现\" class=\"headerlink\" title=\"实现\"></a>实现</h2><h3 id=\"PHP\"><a href=\"#PHP\" class=\"headerlink\" title=\"PHP\"></a>PHP</h3><ul>\n<li>只需要实现单线程的单例</li>\n<li>注意__clone()</li>\n</ul>\n<h4 id=\"定义\"><a href=\"#定义\" class=\"headerlink\" title=\"定义\"></a>定义</h4><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Singleton</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> $instance;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__construct</span><span class=\"params\">()</span> </span>&#123; &#125;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__clone</span><span class=\"params\">()</span> </span>&#123; &#125;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">getInstance</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!<span class=\"keyword\">isset</span>(<span class=\"keyword\">self</span>::$instance)) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">self</span>::$instance = <span class=\"keyword\">new</span> <span class=\"keyword\">self</span>();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">self</span>::$instance;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"使用\"><a href=\"#使用\" class=\"headerlink\" title=\"使用\"></a>使用</h4><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$single1 = Singleton::getInstance();</span><br><span class=\"line\">$single2 = Singleton::getInstance();</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">echo</span> $single1 === $single2;</span><br></pre></td></tr></table></figure>\n<h4 id=\"结果\"><a href=\"#结果\" class=\"headerlink\" title=\"结果\"></a>结果</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1</span><br></pre></td></tr></table></figure>\n<h2 id=\"生成图的代码\"><a href=\"#生成图的代码\" class=\"headerlink\" title=\"生成图的代码\"></a>生成图的代码</h2><h3 id=\"单例模式\"><a href=\"#单例模式\" class=\"headerlink\" title=\"单例模式\"></a>单例模式</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">@startuml</span><br><span class=\"line\">Title &quot;单例模式&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">class Singleton &#123;</span><br><span class=\"line\">  -&#123;static&#125; Singleton instance</span><br><span class=\"line\">  -__construct() : void</span><br><span class=\"line\">  +&#123;static&#125; getInstance() : void</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">@enduml</span><br></pre></td></tr></table></figure>"},{"title":"模式-备忘录模式","date":"2018-06-13T08:35:00.000Z","_content":"\n设计模式之备忘录模式\n<!-- MORE -->\n\n## 简介\n在不破坏封装性的前提下，捕获一个对象的内部状态，并在该对象之外保存这个状态。这样之后就可将该对象回复到原先保存的状态。\n\n## 关键点\n- 需要维护或记录历史状态\n- 其状态只是众多状态的一小部分\n\n## 类图\n![](http://www.plantuml.com/plantuml/svg/VLBDIZCn5DtdAK9NYamVGCfG40GNuiONY6qimPa4ajYD2hMrdo226t-AkugBsRJ-B0h5IXz6qvbP-GhUCEqa6x_TpJdtddlkcQahJQG-ZYEqptH4SSKyNvhvm7pUBPAXcTrK46f4H2cy5J7AzUgr9rcBSQA5n2S8umrGqHHlOgKbuosBD2G5Q9V6C2NMre5RrZlRbfPKmN39bvnjR0lMH6S8CQwfF2GDwaPnhOOT78PBFwi6vyKMvN8GumBy7GYjHGoK6GrCDt57c9TfzZOq__fvBqaVBzAhoQ9p_ZExjgtJIJvuNuoUJ7_o_N5VT6RZUVum_kfq4ULDRBNBc8WacXnHQQq4SU6WE1YYeUs_4r6a_VyuYY-0Wo3quWS-U-sbjub7EnEEzIQgrT3RlAm0FVLX9o62mCFhS33yBRy0)\n\n## 实现\n### PHP\nMemento 需要完成的功能：\n> 存储Originator对象内部的状态，\n> 并防止其他对象访问。\n\n而php的对象，其属性没法有不同的权限。\n下面是白盒备忘录的实现。\n\n- 定义\n\n```PHP\ninterface MementoIF\n{\n    public function getState();\n}\n\nclass Memento implements MementoIF\n{\n    public $state;\n\n    public function __construct($state)\n    {\n        $this->state;\n    }\n\n    public function getState()\n    {\n        return $this->state;\n    }\n}\n\nclass Originator\n{\n    public $state;\n\n    public function createMemento()\n    : MementoIF\n    {\n        return new Memento($this->state);\n    }\n\n    public function restoreMemento(MementoIF $mem)\n    : void\n    {\n        $this->state = $mem->getState();\n    }\n}\n\nclass Caretaker\n{\n    private $memento;\n    public function saveMemento(MementoIF $mem) {\n        $this->memento = $mem;\n    }\n    public function retrieveMemento() {\n        return $this->memento;\n    }\n}\n```\n\n- 使用\n\n```PHP\n$ori = new Originator();\n$ori->state = 'on';\n\n// 备份\n$care = new Caretaker();\n$care->saveMemento($ori->createMemento());\n\n// 其他操作\n$ori->state = 'off';\n\n// 还原\n$ori->restoreMemento($care->retrieveMemento());\n```\n\n## 图的生成代码\n### 备忘录模式\n```plantuml\n@startuml\nTitle \"备忘录模式\"\n\nclass Client\n\nclass Originator {\n  +state : string\n  +createMemento() : MementoIF\n  +restoreMemento(MementoIF) : void\n}\n\ninterface MementoIF << interface >>\n\nclass Memento{\n  +state\n  +Memento()\n}\nnote bottom\n  存储Originator对象内部的状态，\n  并防止其他对象访问。\nend note\n\nclass Carataker{\n  -memento\n  +retrieveMemento() : MementoIF\n  +saveMemento(MementoIF) : void\n}\n\nClient --> Originator : 调用\nClient --> Carataker : 调用\nOriginator ..> MementoIF\nMemento ..|> MementoIF\nCarataker o-- MementoIF\n\n\n\n@enduml\n```\n","source":"_posts/模式-备忘录模式.md","raw":"---\ntitle: 模式-备忘录模式\ndate: 2018-06-13T16:35:00.000Z\ntags:\n  - 模式\n  - 笔记\ncategories:\n  - 模式\n---\n\n设计模式之备忘录模式\n<!-- MORE -->\n\n## 简介\n在不破坏封装性的前提下，捕获一个对象的内部状态，并在该对象之外保存这个状态。这样之后就可将该对象回复到原先保存的状态。\n\n## 关键点\n- 需要维护或记录历史状态\n- 其状态只是众多状态的一小部分\n\n## 类图\n![](http://www.plantuml.com/plantuml/svg/VLBDIZCn5DtdAK9NYamVGCfG40GNuiONY6qimPa4ajYD2hMrdo226t-AkugBsRJ-B0h5IXz6qvbP-GhUCEqa6x_TpJdtddlkcQahJQG-ZYEqptH4SSKyNvhvm7pUBPAXcTrK46f4H2cy5J7AzUgr9rcBSQA5n2S8umrGqHHlOgKbuosBD2G5Q9V6C2NMre5RrZlRbfPKmN39bvnjR0lMH6S8CQwfF2GDwaPnhOOT78PBFwi6vyKMvN8GumBy7GYjHGoK6GrCDt57c9TfzZOq__fvBqaVBzAhoQ9p_ZExjgtJIJvuNuoUJ7_o_N5VT6RZUVum_kfq4ULDRBNBc8WacXnHQQq4SU6WE1YYeUs_4r6a_VyuYY-0Wo3quWS-U-sbjub7EnEEzIQgrT3RlAm0FVLX9o62mCFhS33yBRy0)\n\n## 实现\n### PHP\nMemento 需要完成的功能：\n> 存储Originator对象内部的状态，\n> 并防止其他对象访问。\n\n而php的对象，其属性没法有不同的权限。\n下面是白盒备忘录的实现。\n\n- 定义\n\n```PHP\ninterface MementoIF\n{\n    public function getState();\n}\n\nclass Memento implements MementoIF\n{\n    public $state;\n\n    public function __construct($state)\n    {\n        $this->state;\n    }\n\n    public function getState()\n    {\n        return $this->state;\n    }\n}\n\nclass Originator\n{\n    public $state;\n\n    public function createMemento()\n    : MementoIF\n    {\n        return new Memento($this->state);\n    }\n\n    public function restoreMemento(MementoIF $mem)\n    : void\n    {\n        $this->state = $mem->getState();\n    }\n}\n\nclass Caretaker\n{\n    private $memento;\n    public function saveMemento(MementoIF $mem) {\n        $this->memento = $mem;\n    }\n    public function retrieveMemento() {\n        return $this->memento;\n    }\n}\n```\n\n- 使用\n\n```PHP\n$ori = new Originator();\n$ori->state = 'on';\n\n// 备份\n$care = new Caretaker();\n$care->saveMemento($ori->createMemento());\n\n// 其他操作\n$ori->state = 'off';\n\n// 还原\n$ori->restoreMemento($care->retrieveMemento());\n```\n\n## 图的生成代码\n### 备忘录模式\n```plantuml\n@startuml\nTitle \"备忘录模式\"\n\nclass Client\n\nclass Originator {\n  +state : string\n  +createMemento() : MementoIF\n  +restoreMemento(MementoIF) : void\n}\n\ninterface MementoIF << interface >>\n\nclass Memento{\n  +state\n  +Memento()\n}\nnote bottom\n  存储Originator对象内部的状态，\n  并防止其他对象访问。\nend note\n\nclass Carataker{\n  -memento\n  +retrieveMemento() : MementoIF\n  +saveMemento(MementoIF) : void\n}\n\nClient --> Originator : 调用\nClient --> Carataker : 调用\nOriginator ..> MementoIF\nMemento ..|> MementoIF\nCarataker o-- MementoIF\n\n\n\n@enduml\n```\n","slug":"模式-备忘录模式","published":1,"updated":"2018-06-20T10:33:20.600Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjin2pu24001lnrfy1h6a5qmn","content":"<p>设计模式之备忘录模式<br><a id=\"more\"></a></p>\n<h2 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h2><p>在不破坏封装性的前提下，捕获一个对象的内部状态，并在该对象之外保存这个状态。这样之后就可将该对象回复到原先保存的状态。</p>\n<h2 id=\"关键点\"><a href=\"#关键点\" class=\"headerlink\" title=\"关键点\"></a>关键点</h2><ul>\n<li>需要维护或记录历史状态</li>\n<li>其状态只是众多状态的一小部分</li>\n</ul>\n<h2 id=\"类图\"><a href=\"#类图\" class=\"headerlink\" title=\"类图\"></a>类图</h2><p><img src=\"http://www.plantuml.com/plantuml/svg/VLBDIZCn5DtdAK9NYamVGCfG40GNuiONY6qimPa4ajYD2hMrdo226t-AkugBsRJ-B0h5IXz6qvbP-GhUCEqa6x_TpJdtddlkcQahJQG-ZYEqptH4SSKyNvhvm7pUBPAXcTrK46f4H2cy5J7AzUgr9rcBSQA5n2S8umrGqHHlOgKbuosBD2G5Q9V6C2NMre5RrZlRbfPKmN39bvnjR0lMH6S8CQwfF2GDwaPnhOOT78PBFwi6vyKMvN8GumBy7GYjHGoK6GrCDt57c9TfzZOq__fvBqaVBzAhoQ9p_ZExjgtJIJvuNuoUJ7_o_N5VT6RZUVum_kfq4ULDRBNBc8WacXnHQQq4SU6WE1YYeUs_4r6a_VyuYY-0Wo3quWS-U-sbjub7EnEEzIQgrT3RlAm0FVLX9o62mCFhS33yBRy0\" alt=\"\"></p>\n<h2 id=\"实现\"><a href=\"#实现\" class=\"headerlink\" title=\"实现\"></a>实现</h2><h3 id=\"PHP\"><a href=\"#PHP\" class=\"headerlink\" title=\"PHP\"></a>PHP</h3><p>Memento 需要完成的功能：</p>\n<blockquote>\n<p>存储Originator对象内部的状态，<br>并防止其他对象访问。</p>\n</blockquote>\n<p>而php的对象，其属性没法有不同的权限。<br>下面是白盒备忘录的实现。</p>\n<ul>\n<li>定义</li>\n</ul>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">interface</span> <span class=\"title\">MementoIF</span></span></span><br><span class=\"line\"><span class=\"class\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">getState</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Memento</span> <span class=\"keyword\">implements</span> <span class=\"title\">MementoIF</span></span></span><br><span class=\"line\"><span class=\"class\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> $state;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__construct</span><span class=\"params\">($state)</span></span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">$this</span>-&gt;state;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">getState</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">$this</span>-&gt;state;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Originator</span></span></span><br><span class=\"line\"><span class=\"class\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> $state;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">createMemento</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\">    : <span class=\"title\">MementoIF</span></span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> Memento(<span class=\"keyword\">$this</span>-&gt;state);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">restoreMemento</span><span class=\"params\">(MementoIF $mem)</span></span></span><br><span class=\"line\"><span class=\"function\">    : <span class=\"title\">void</span></span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">$this</span>-&gt;state = $mem-&gt;getState();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Caretaker</span></span></span><br><span class=\"line\"><span class=\"class\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> $memento;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">saveMemento</span><span class=\"params\">(MementoIF $mem)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">$this</span>-&gt;memento = $mem;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">retrieveMemento</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">$this</span>-&gt;memento;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>使用</li>\n</ul>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ori = <span class=\"keyword\">new</span> Originator();</span><br><span class=\"line\">$ori-&gt;state = <span class=\"string\">'on'</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 备份</span></span><br><span class=\"line\">$care = <span class=\"keyword\">new</span> Caretaker();</span><br><span class=\"line\">$care-&gt;saveMemento($ori-&gt;createMemento());</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 其他操作</span></span><br><span class=\"line\">$ori-&gt;state = <span class=\"string\">'off'</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 还原</span></span><br><span class=\"line\">$ori-&gt;restoreMemento($care-&gt;retrieveMemento());</span><br></pre></td></tr></table></figure>\n<h2 id=\"图的生成代码\"><a href=\"#图的生成代码\" class=\"headerlink\" title=\"图的生成代码\"></a>图的生成代码</h2><h3 id=\"备忘录模式\"><a href=\"#备忘录模式\" class=\"headerlink\" title=\"备忘录模式\"></a>备忘录模式</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">@startuml</span><br><span class=\"line\">Title &quot;备忘录模式&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">class Client</span><br><span class=\"line\"></span><br><span class=\"line\">class Originator &#123;</span><br><span class=\"line\">  +state : string</span><br><span class=\"line\">  +createMemento() : MementoIF</span><br><span class=\"line\">  +restoreMemento(MementoIF) : void</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">interface MementoIF &lt;&lt; interface &gt;&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">class Memento&#123;</span><br><span class=\"line\">  +state</span><br><span class=\"line\">  +Memento()</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">note bottom</span><br><span class=\"line\">  存储Originator对象内部的状态，</span><br><span class=\"line\">  并防止其他对象访问。</span><br><span class=\"line\">end note</span><br><span class=\"line\"></span><br><span class=\"line\">class Carataker&#123;</span><br><span class=\"line\">  -memento</span><br><span class=\"line\">  +retrieveMemento() : MementoIF</span><br><span class=\"line\">  +saveMemento(MementoIF) : void</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">Client --&gt; Originator : 调用</span><br><span class=\"line\">Client --&gt; Carataker : 调用</span><br><span class=\"line\">Originator ..&gt; MementoIF</span><br><span class=\"line\">Memento ..|&gt; MementoIF</span><br><span class=\"line\">Carataker o-- MementoIF</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">@enduml</span><br></pre></td></tr></table></figure>\n","site":{"data":{"head":"\n<script type=\"text/javascript\" id=\"hexo.headll\">\n(function () {\n  window.addEventListener(\"load\", function () {   //添加load事件\n    $(\"body\").click(function (e) {\n        var a = new Array(\"富强\", \"民主\", \"文明\", \"和谐\", \"自由\", \"平等\", \"公正\", \"法治\", \"爱国\", \"敬业\", \"诚信\", \"友善\");\n        var a_idx=Math.floor(Math.random()*a.length);\n        var $i = $(\"<span/>\").text(a[a_idx]);\n        var x = e.pageX,y = e.pageY;\n        $i.css({\n            \"z-index\": 99999,\n            \"top\": y - 20,\n            \"left\": x,\n            \"position\": \"absolute\",\n            \"font-weight\": \"bold\",\n            \"color\": \"#ff6651\"\n        });\n        $(\"body\").append($i);\n        $i.animate({\n            \"top\": y - 180,\n            \"opacity\": 0\n        },\n        1500,\n        function () {\n            $i.remove();\n        });\n    });\n  }, false);\n})();\n</script>\n\n"}},"excerpt":"<p>设计模式之备忘录模式<br>","more":"</p>\n<h2 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h2><p>在不破坏封装性的前提下，捕获一个对象的内部状态，并在该对象之外保存这个状态。这样之后就可将该对象回复到原先保存的状态。</p>\n<h2 id=\"关键点\"><a href=\"#关键点\" class=\"headerlink\" title=\"关键点\"></a>关键点</h2><ul>\n<li>需要维护或记录历史状态</li>\n<li>其状态只是众多状态的一小部分</li>\n</ul>\n<h2 id=\"类图\"><a href=\"#类图\" class=\"headerlink\" title=\"类图\"></a>类图</h2><p><img src=\"http://www.plantuml.com/plantuml/svg/VLBDIZCn5DtdAK9NYamVGCfG40GNuiONY6qimPa4ajYD2hMrdo226t-AkugBsRJ-B0h5IXz6qvbP-GhUCEqa6x_TpJdtddlkcQahJQG-ZYEqptH4SSKyNvhvm7pUBPAXcTrK46f4H2cy5J7AzUgr9rcBSQA5n2S8umrGqHHlOgKbuosBD2G5Q9V6C2NMre5RrZlRbfPKmN39bvnjR0lMH6S8CQwfF2GDwaPnhOOT78PBFwi6vyKMvN8GumBy7GYjHGoK6GrCDt57c9TfzZOq__fvBqaVBzAhoQ9p_ZExjgtJIJvuNuoUJ7_o_N5VT6RZUVum_kfq4ULDRBNBc8WacXnHQQq4SU6WE1YYeUs_4r6a_VyuYY-0Wo3quWS-U-sbjub7EnEEzIQgrT3RlAm0FVLX9o62mCFhS33yBRy0\" alt=\"\"></p>\n<h2 id=\"实现\"><a href=\"#实现\" class=\"headerlink\" title=\"实现\"></a>实现</h2><h3 id=\"PHP\"><a href=\"#PHP\" class=\"headerlink\" title=\"PHP\"></a>PHP</h3><p>Memento 需要完成的功能：</p>\n<blockquote>\n<p>存储Originator对象内部的状态，<br>并防止其他对象访问。</p>\n</blockquote>\n<p>而php的对象，其属性没法有不同的权限。<br>下面是白盒备忘录的实现。</p>\n<ul>\n<li>定义</li>\n</ul>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">interface</span> <span class=\"title\">MementoIF</span></span></span><br><span class=\"line\"><span class=\"class\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">getState</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Memento</span> <span class=\"keyword\">implements</span> <span class=\"title\">MementoIF</span></span></span><br><span class=\"line\"><span class=\"class\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> $state;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__construct</span><span class=\"params\">($state)</span></span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">$this</span>-&gt;state;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">getState</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">$this</span>-&gt;state;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Originator</span></span></span><br><span class=\"line\"><span class=\"class\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> $state;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">createMemento</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\">    : <span class=\"title\">MementoIF</span></span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> Memento(<span class=\"keyword\">$this</span>-&gt;state);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">restoreMemento</span><span class=\"params\">(MementoIF $mem)</span></span></span><br><span class=\"line\"><span class=\"function\">    : <span class=\"title\">void</span></span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">$this</span>-&gt;state = $mem-&gt;getState();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Caretaker</span></span></span><br><span class=\"line\"><span class=\"class\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> $memento;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">saveMemento</span><span class=\"params\">(MementoIF $mem)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">$this</span>-&gt;memento = $mem;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">retrieveMemento</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">$this</span>-&gt;memento;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>使用</li>\n</ul>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ori = <span class=\"keyword\">new</span> Originator();</span><br><span class=\"line\">$ori-&gt;state = <span class=\"string\">'on'</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 备份</span></span><br><span class=\"line\">$care = <span class=\"keyword\">new</span> Caretaker();</span><br><span class=\"line\">$care-&gt;saveMemento($ori-&gt;createMemento());</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 其他操作</span></span><br><span class=\"line\">$ori-&gt;state = <span class=\"string\">'off'</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 还原</span></span><br><span class=\"line\">$ori-&gt;restoreMemento($care-&gt;retrieveMemento());</span><br></pre></td></tr></table></figure>\n<h2 id=\"图的生成代码\"><a href=\"#图的生成代码\" class=\"headerlink\" title=\"图的生成代码\"></a>图的生成代码</h2><h3 id=\"备忘录模式\"><a href=\"#备忘录模式\" class=\"headerlink\" title=\"备忘录模式\"></a>备忘录模式</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">@startuml</span><br><span class=\"line\">Title &quot;备忘录模式&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">class Client</span><br><span class=\"line\"></span><br><span class=\"line\">class Originator &#123;</span><br><span class=\"line\">  +state : string</span><br><span class=\"line\">  +createMemento() : MementoIF</span><br><span class=\"line\">  +restoreMemento(MementoIF) : void</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">interface MementoIF &lt;&lt; interface &gt;&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">class Memento&#123;</span><br><span class=\"line\">  +state</span><br><span class=\"line\">  +Memento()</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">note bottom</span><br><span class=\"line\">  存储Originator对象内部的状态，</span><br><span class=\"line\">  并防止其他对象访问。</span><br><span class=\"line\">end note</span><br><span class=\"line\"></span><br><span class=\"line\">class Carataker&#123;</span><br><span class=\"line\">  -memento</span><br><span class=\"line\">  +retrieveMemento() : MementoIF</span><br><span class=\"line\">  +saveMemento(MementoIF) : void</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">Client --&gt; Originator : 调用</span><br><span class=\"line\">Client --&gt; Carataker : 调用</span><br><span class=\"line\">Originator ..&gt; MementoIF</span><br><span class=\"line\">Memento ..|&gt; MementoIF</span><br><span class=\"line\">Carataker o-- MementoIF</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">@enduml</span><br></pre></td></tr></table></figure>"},{"title":"模式-桥接模式","date":"2018-06-15T08:35:00.000Z","_content":"\n设计模式之桥接模式\n<!-- MORE -->\n\n## 简介\n> 将抽象部分与它的实现部分分离，使他们都可以独立地变化。\n\n也就是如果实现系统，可以多维度分类，那就能让他们独立变化，以减少耦合。\n\n**多组合**，**少继承** 的体现。\n\n## 关键点\n- 可多维度分类\n- 多维度分类可以变化\n- 可用聚合表示\n\n## 类图\n![](http://www.plantuml.com/plantuml/svg/TP1DJeOm48RtSue9Autf5GpWohqNg31ga_wGTbWXLz0pi23n45v7pl5f2gRmbUKCpyFxTih0qdDlD3mfreJ5CitBnxnyJJ_VdmL0esK8-A0LMTuFyZcmbmrZt5Rhg9p50H3lXWqOqNNavT-NcriOrxzuUb6MsYjjpnvJ7asdoP1bvyzJVg4ehtsTRRnaIjmgoaVZNAXF18Z7GE7LwniBSP_U0I3pID5tGhmVk6p5ZKoMER3EWf0C_-tSBhKas_P6Nm00)\n\n## 实现\n### PHP\n\n#### 定义\n##### 抽象者\n```PHP\nabstract class Abstraction {\n    /**\n     * @var Implementor\n     */\n    protected $implementor;\n\n    public function setImplementor(Implementor $imp) {\n        $this->implementor = $imp;\n    }\n    abstract public function operation();\n}\n\nclass RefinedAbstraction extends Abstraction {\n\n    public function operation()\n    {\n        $this->implementor->operationImp();\n    }\n}\n```\n\n##### 实现者\n```PHP\nabstract class Implementor {\n    abstract public function operationImp();\n}\nclass ConcreteImplementorA extends Implementor {\n\n    public function operationImp()\n    {\n        echo '具体实现者A', PHP_EOL;\n    }\n}\nclass ConcreteImplementorB extends Implementor {\n\n    public function operationImp()\n    {\n        echo '具体实现者B', PHP_EOL;\n    }\n}\n```\n\n#### 使用\n```PHP\n$ab = new RefinedAbstraction();\n$ab->setImplementor(new ConcreteImplementorA());\n$ab->operation();\n\n$ab->setImplementor(new ConcreteImplementorB());\n$ab->operation();\n```\n\n#### 结果\n```\n具体实现者A\n具体实现者B\n\n```\n\n## 具体例子 🌰\n### 题\n画图，存在三种图形，三种颜色\n- 正方形、长方形、圆形\n- 红、绿、蓝\n\n### 使用继承的方式\n#### 形状\n![](http://www.plantuml.com/plantuml/svg/SoWkIImgAStDuGh9BCb9LL1widlfqxsBddTjUx9ZrxC5Ev_FQdc-U_cpplrAN5pFrYv-DcqdK5P1jxH0Lm6YZElbrFrOH9_EQKCNudg-Qv4nH0GYo_LyztvKWHUJvw88WFKOGKGWza2reOX1TQA8mJGRGWI1JaTeHeWXD6E8EQJcfG231G00)\n\n#### 颜色\n![](http://www.plantuml.com/plantuml/svg/SoWkIImgAStDuGh9BCb9LL1widlfoqLpNdHkUh9ZrxC5Ev_FQdc-U_cpplrAN5pFTorIq2qjq5M0AE1wldi_2l_5vBaeVAvdQnS_cxRpwTv5nX1ne0AkbrFtOuWzdTE6Ae3GQGGH15g5q8aGW-f4223fD8G80XsDq8aG0-b45N18pKi1XWC0)\n\n#### 问题\n很明显，如果再添加形状或者颜色，那会疯掉。\n\n### 以组合或者聚合的方式\n![](http://www.plantuml.com/plantuml/svg/SoWkIImgAStDuGh9BCb9LL1widlfyzqjJoTqFEkOzgAXzKNZB23x-QoMPzDsFjtJhyJ5zNpN8WNTqW9TXPUBvhpetCJrVFT-5FwBoNDH-5pFrYu6QTuBrGPaFE_QnlLowduiea_djA49GIrCoI_FqrLuldloitbpG5QYYe0iHHL1s8eg3h4NKnnaCwQWGsfU2Z1i0000)\n\n使用时，把颜色和图形进行组合。\nok，下面咱们来用桥接模式实现这套方案\n\n### 类图\n![](http://www.plantuml.com/plantuml/svg/2yaioKbLK7goU-dptIrF9tGywvZseg7rHUCi8Flvh9PdqtO-tTCFP3njtVvax-Jd6tS_dRrFYOihCQcuf2WnkKGXEIUnk5WXE2En85MXcaj1GLaXEJydlqZ1Ii4PH0D5j1MAKql070qm2L6W2LHHbf-P0bPG3JEkLY6bAB5S0ovPomKrlx0qiGXYWJOE9K6foIM9UUav-5KvPnOburA2uIk8SwlHdLYGc9bNWiq1AH2rk1Iu5wMcvk5NufHJcefB1HSq47HB2tHrQ-mWOSu5ypQwECYZ6890rIam8MZyW1s59WPo1PeG5oGiT8ioqpDAT7NpeGOwfEQbbERc0000)\n\n### PHP\n#### 定义\n##### 抽象者\n```PHP\nabstract class Shape {\n    /**\n     * @var Color\n     */\n    protected $color;\n    public function setColor(Color $color) {\n        $this->color = $color;\n    }\n    abstract public function draw() : void;\n}\nclass Square extends Shape {\n\n    public function draw()\n    : void\n    {\n        echo '正方形，';\n        $this->color->paint();\n        echo PHP_EOL;\n    }\n}\nclass Rectangle extends Shape {\n\n    public function draw()\n    : void\n    {\n        echo '长方形，';\n        $this->color->paint();\n        echo PHP_EOL;\n    }\n}\nclass Circle extends Shape {\n\n    public function draw()\n    : void\n    {\n        echo '圆形，';\n        $this->color->paint();\n        echo PHP_EOL;\n    }\n}\n```\n##### 实现者\n```PHP\nabstract class Color {\n    abstract public function paint() : void;\n}\nclass Red extends Color {\n\n    public function paint()\n    : void\n    {\n        echo '红色';\n    }\n}\nclass Green extends Color {\n\n    public function paint()\n    : void\n    {\n        echo '绿色';\n    }\n}\nclass Blue extends Color {\n\n    public function paint()\n    : void\n    {\n        echo '蓝色';\n    }\n}\n```\n#### 使用\n```PHP\n$shape = new Circle();\n$shape->setColor(new Red());\n$shape->draw();\n\n$shape = new Square();\n$shape->setColor(new Green());\n$shape->draw();\n\n$shape = new Rectangle();\n$shape->setColor(new Blue());\n$shape->draw();\n```\n#### 结果\n```\n圆形，红色\n正方形，绿色\n长方形，蓝色\n\n```\n\n## 生成图的代码\n### 桥接模式\n```plantuml\n@startuml\nTitle \"桥接模式\"\n\nclass Client\nabstract class Abstraction {\n  +{abstract} operation()\n}\nclass refinedAbstraction {\n  +operation()\n}\n\nabstract class Implementor {\n  +{abstract} operationImp()\n}\n\nclass ConcrateImplementorA {\n  +operationImp()\n}\nclass ConcrateImplementorB {\n  +operationImp()\n}\n\nClient -right--> Abstraction\n\nrefinedAbstraction -up--|> Abstraction\n\nConcrateImplementorA -up--|> Implementor\nConcrateImplementorB -up--|> Implementor\n\nImplementor -left<--o Abstraction\nAbstraction -righto--> Implemento\n\n\n@enduml\n```\n\n### 以形状为根的继承\n```plantuml\n@startuml\nTitle \"以形状为根的继承\"\n\n正方形 -up- 形状\n长方形 -up- 形状\n圆形 -up- 形状\n\n红3 -up- 圆形\n绿3 -up- 圆形\n蓝3 -up- 圆形\n\n红2 -up- 长方形\n绿2 -up- 长方形\n蓝2 -up- 长方形\n\n红1 -up- 正方形\n绿1 -up- 正方形\n蓝1 -up- 正方形\n@enduml\n```\n\n### 以颜色为根的继承\n```plantuml\n@startuml\nTitle \"以颜色为根的继承\"\n\n红 -up- 颜色\n绿 -up- 颜色\n蓝 -up- 颜色\n\n正方形3 -up- 蓝\n长方形3 -up- 蓝\n圆形3 -up- 蓝\n\n正方形2 -up- 绿\n长方形2 -up- 绿\n圆形2 -up- 绿\n\n正方形1 -up- 红\n长方形1 -up- 红\n圆形1 -up- 红\n@enduml\n```\n\n### 以组合或者聚合的方式\n```plantuml\n@startuml\nTitle \"以组合或者聚合的方式\"\n\n红 -up- 颜色\n绿 -up- 颜色\n蓝 -up- 颜色\n\n正方形 -up- 形状\n长方形 -up- 形状\n圆形 -up- 形状\n\n红 -down- 结果\n绿 -down- 结果\n蓝 -down- 结果\n正方形 -down- 结果\n长方形 -down- 结果\n圆形 -down- 结果\n@enduml\n```\n\n### 以组合或者聚合的方式的具体类图\n```plantuml\nTitle \"以组合或者聚合的方式的具体类图\"\n\nabstract class Shape {\n  # color : Color\n  + setColor(Color color) : void\n  + {abstract} draw() : void\n}\nclass Square {\n  + draw() : void\n}\nclass Rectangle {\n  + draw() : void\n}\nclass Circle {\n  + draw() : void\n}\n\nabstract class Color {\n  + {abstract} paint() : void\n}\nclass Red {\n  + paint() : void\n}\nclass Green {\n  + paint() : void\n}\nclass Blue {\n  + paint() : void\n}\n\nSquare -up--|> Shape\nRectangle -up--|> Shape\nCircle -up--|> Shape\n\nRed -up--|> Color\nGreen -up--|> Color\nBlue -up--|> Color\n\nColor -right--o Shape\n@enduml\n```\n\n## 参考\n[设计模式读书笔记—–桥接模式](http://cmsblogs.com/?p=357)\n","source":"_posts/模式-桥接模式.md","raw":"---\ntitle: 模式-桥接模式\ndate: 2018-06-15T16:35:00.000Z\ntags:\n  - 模式\n  - 笔记\ncategories:\n  - 模式\n---\n\n设计模式之桥接模式\n<!-- MORE -->\n\n## 简介\n> 将抽象部分与它的实现部分分离，使他们都可以独立地变化。\n\n也就是如果实现系统，可以多维度分类，那就能让他们独立变化，以减少耦合。\n\n**多组合**，**少继承** 的体现。\n\n## 关键点\n- 可多维度分类\n- 多维度分类可以变化\n- 可用聚合表示\n\n## 类图\n![](http://www.plantuml.com/plantuml/svg/TP1DJeOm48RtSue9Autf5GpWohqNg31ga_wGTbWXLz0pi23n45v7pl5f2gRmbUKCpyFxTih0qdDlD3mfreJ5CitBnxnyJJ_VdmL0esK8-A0LMTuFyZcmbmrZt5Rhg9p50H3lXWqOqNNavT-NcriOrxzuUb6MsYjjpnvJ7asdoP1bvyzJVg4ehtsTRRnaIjmgoaVZNAXF18Z7GE7LwniBSP_U0I3pID5tGhmVk6p5ZKoMER3EWf0C_-tSBhKas_P6Nm00)\n\n## 实现\n### PHP\n\n#### 定义\n##### 抽象者\n```PHP\nabstract class Abstraction {\n    /**\n     * @var Implementor\n     */\n    protected $implementor;\n\n    public function setImplementor(Implementor $imp) {\n        $this->implementor = $imp;\n    }\n    abstract public function operation();\n}\n\nclass RefinedAbstraction extends Abstraction {\n\n    public function operation()\n    {\n        $this->implementor->operationImp();\n    }\n}\n```\n\n##### 实现者\n```PHP\nabstract class Implementor {\n    abstract public function operationImp();\n}\nclass ConcreteImplementorA extends Implementor {\n\n    public function operationImp()\n    {\n        echo '具体实现者A', PHP_EOL;\n    }\n}\nclass ConcreteImplementorB extends Implementor {\n\n    public function operationImp()\n    {\n        echo '具体实现者B', PHP_EOL;\n    }\n}\n```\n\n#### 使用\n```PHP\n$ab = new RefinedAbstraction();\n$ab->setImplementor(new ConcreteImplementorA());\n$ab->operation();\n\n$ab->setImplementor(new ConcreteImplementorB());\n$ab->operation();\n```\n\n#### 结果\n```\n具体实现者A\n具体实现者B\n\n```\n\n## 具体例子 🌰\n### 题\n画图，存在三种图形，三种颜色\n- 正方形、长方形、圆形\n- 红、绿、蓝\n\n### 使用继承的方式\n#### 形状\n![](http://www.plantuml.com/plantuml/svg/SoWkIImgAStDuGh9BCb9LL1widlfqxsBddTjUx9ZrxC5Ev_FQdc-U_cpplrAN5pFrYv-DcqdK5P1jxH0Lm6YZElbrFrOH9_EQKCNudg-Qv4nH0GYo_LyztvKWHUJvw88WFKOGKGWza2reOX1TQA8mJGRGWI1JaTeHeWXD6E8EQJcfG231G00)\n\n#### 颜色\n![](http://www.plantuml.com/plantuml/svg/SoWkIImgAStDuGh9BCb9LL1widlfoqLpNdHkUh9ZrxC5Ev_FQdc-U_cpplrAN5pFTorIq2qjq5M0AE1wldi_2l_5vBaeVAvdQnS_cxRpwTv5nX1ne0AkbrFtOuWzdTE6Ae3GQGGH15g5q8aGW-f4223fD8G80XsDq8aG0-b45N18pKi1XWC0)\n\n#### 问题\n很明显，如果再添加形状或者颜色，那会疯掉。\n\n### 以组合或者聚合的方式\n![](http://www.plantuml.com/plantuml/svg/SoWkIImgAStDuGh9BCb9LL1widlfyzqjJoTqFEkOzgAXzKNZB23x-QoMPzDsFjtJhyJ5zNpN8WNTqW9TXPUBvhpetCJrVFT-5FwBoNDH-5pFrYu6QTuBrGPaFE_QnlLowduiea_djA49GIrCoI_FqrLuldloitbpG5QYYe0iHHL1s8eg3h4NKnnaCwQWGsfU2Z1i0000)\n\n使用时，把颜色和图形进行组合。\nok，下面咱们来用桥接模式实现这套方案\n\n### 类图\n![](http://www.plantuml.com/plantuml/svg/2yaioKbLK7goU-dptIrF9tGywvZseg7rHUCi8Flvh9PdqtO-tTCFP3njtVvax-Jd6tS_dRrFYOihCQcuf2WnkKGXEIUnk5WXE2En85MXcaj1GLaXEJydlqZ1Ii4PH0D5j1MAKql070qm2L6W2LHHbf-P0bPG3JEkLY6bAB5S0ovPomKrlx0qiGXYWJOE9K6foIM9UUav-5KvPnOburA2uIk8SwlHdLYGc9bNWiq1AH2rk1Iu5wMcvk5NufHJcefB1HSq47HB2tHrQ-mWOSu5ypQwECYZ6890rIam8MZyW1s59WPo1PeG5oGiT8ioqpDAT7NpeGOwfEQbbERc0000)\n\n### PHP\n#### 定义\n##### 抽象者\n```PHP\nabstract class Shape {\n    /**\n     * @var Color\n     */\n    protected $color;\n    public function setColor(Color $color) {\n        $this->color = $color;\n    }\n    abstract public function draw() : void;\n}\nclass Square extends Shape {\n\n    public function draw()\n    : void\n    {\n        echo '正方形，';\n        $this->color->paint();\n        echo PHP_EOL;\n    }\n}\nclass Rectangle extends Shape {\n\n    public function draw()\n    : void\n    {\n        echo '长方形，';\n        $this->color->paint();\n        echo PHP_EOL;\n    }\n}\nclass Circle extends Shape {\n\n    public function draw()\n    : void\n    {\n        echo '圆形，';\n        $this->color->paint();\n        echo PHP_EOL;\n    }\n}\n```\n##### 实现者\n```PHP\nabstract class Color {\n    abstract public function paint() : void;\n}\nclass Red extends Color {\n\n    public function paint()\n    : void\n    {\n        echo '红色';\n    }\n}\nclass Green extends Color {\n\n    public function paint()\n    : void\n    {\n        echo '绿色';\n    }\n}\nclass Blue extends Color {\n\n    public function paint()\n    : void\n    {\n        echo '蓝色';\n    }\n}\n```\n#### 使用\n```PHP\n$shape = new Circle();\n$shape->setColor(new Red());\n$shape->draw();\n\n$shape = new Square();\n$shape->setColor(new Green());\n$shape->draw();\n\n$shape = new Rectangle();\n$shape->setColor(new Blue());\n$shape->draw();\n```\n#### 结果\n```\n圆形，红色\n正方形，绿色\n长方形，蓝色\n\n```\n\n## 生成图的代码\n### 桥接模式\n```plantuml\n@startuml\nTitle \"桥接模式\"\n\nclass Client\nabstract class Abstraction {\n  +{abstract} operation()\n}\nclass refinedAbstraction {\n  +operation()\n}\n\nabstract class Implementor {\n  +{abstract} operationImp()\n}\n\nclass ConcrateImplementorA {\n  +operationImp()\n}\nclass ConcrateImplementorB {\n  +operationImp()\n}\n\nClient -right--> Abstraction\n\nrefinedAbstraction -up--|> Abstraction\n\nConcrateImplementorA -up--|> Implementor\nConcrateImplementorB -up--|> Implementor\n\nImplementor -left<--o Abstraction\nAbstraction -righto--> Implemento\n\n\n@enduml\n```\n\n### 以形状为根的继承\n```plantuml\n@startuml\nTitle \"以形状为根的继承\"\n\n正方形 -up- 形状\n长方形 -up- 形状\n圆形 -up- 形状\n\n红3 -up- 圆形\n绿3 -up- 圆形\n蓝3 -up- 圆形\n\n红2 -up- 长方形\n绿2 -up- 长方形\n蓝2 -up- 长方形\n\n红1 -up- 正方形\n绿1 -up- 正方形\n蓝1 -up- 正方形\n@enduml\n```\n\n### 以颜色为根的继承\n```plantuml\n@startuml\nTitle \"以颜色为根的继承\"\n\n红 -up- 颜色\n绿 -up- 颜色\n蓝 -up- 颜色\n\n正方形3 -up- 蓝\n长方形3 -up- 蓝\n圆形3 -up- 蓝\n\n正方形2 -up- 绿\n长方形2 -up- 绿\n圆形2 -up- 绿\n\n正方形1 -up- 红\n长方形1 -up- 红\n圆形1 -up- 红\n@enduml\n```\n\n### 以组合或者聚合的方式\n```plantuml\n@startuml\nTitle \"以组合或者聚合的方式\"\n\n红 -up- 颜色\n绿 -up- 颜色\n蓝 -up- 颜色\n\n正方形 -up- 形状\n长方形 -up- 形状\n圆形 -up- 形状\n\n红 -down- 结果\n绿 -down- 结果\n蓝 -down- 结果\n正方形 -down- 结果\n长方形 -down- 结果\n圆形 -down- 结果\n@enduml\n```\n\n### 以组合或者聚合的方式的具体类图\n```plantuml\nTitle \"以组合或者聚合的方式的具体类图\"\n\nabstract class Shape {\n  # color : Color\n  + setColor(Color color) : void\n  + {abstract} draw() : void\n}\nclass Square {\n  + draw() : void\n}\nclass Rectangle {\n  + draw() : void\n}\nclass Circle {\n  + draw() : void\n}\n\nabstract class Color {\n  + {abstract} paint() : void\n}\nclass Red {\n  + paint() : void\n}\nclass Green {\n  + paint() : void\n}\nclass Blue {\n  + paint() : void\n}\n\nSquare -up--|> Shape\nRectangle -up--|> Shape\nCircle -up--|> Shape\n\nRed -up--|> Color\nGreen -up--|> Color\nBlue -up--|> Color\n\nColor -right--o Shape\n@enduml\n```\n\n## 参考\n[设计模式读书笔记—–桥接模式](http://cmsblogs.com/?p=357)\n","slug":"模式-桥接模式","published":1,"updated":"2018-06-20T11:23:43.056Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjin2pu25001onrfyhj7u2lg6","content":"<p>设计模式之桥接模式<br><a id=\"more\"></a></p>\n<h2 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h2><blockquote>\n<p>将抽象部分与它的实现部分分离，使他们都可以独立地变化。</p>\n</blockquote>\n<p>也就是如果实现系统，可以多维度分类，那就能让他们独立变化，以减少耦合。</p>\n<p><strong>多组合</strong>，<strong>少继承</strong> 的体现。</p>\n<h2 id=\"关键点\"><a href=\"#关键点\" class=\"headerlink\" title=\"关键点\"></a>关键点</h2><ul>\n<li>可多维度分类</li>\n<li>多维度分类可以变化</li>\n<li>可用聚合表示</li>\n</ul>\n<h2 id=\"类图\"><a href=\"#类图\" class=\"headerlink\" title=\"类图\"></a>类图</h2><p><img src=\"http://www.plantuml.com/plantuml/svg/TP1DJeOm48RtSue9Autf5GpWohqNg31ga_wGTbWXLz0pi23n45v7pl5f2gRmbUKCpyFxTih0qdDlD3mfreJ5CitBnxnyJJ_VdmL0esK8-A0LMTuFyZcmbmrZt5Rhg9p50H3lXWqOqNNavT-NcriOrxzuUb6MsYjjpnvJ7asdoP1bvyzJVg4ehtsTRRnaIjmgoaVZNAXF18Z7GE7LwniBSP_U0I3pID5tGhmVk6p5ZKoMER3EWf0C_-tSBhKas_P6Nm00\" alt=\"\"></p>\n<h2 id=\"实现\"><a href=\"#实现\" class=\"headerlink\" title=\"实现\"></a>实现</h2><h3 id=\"PHP\"><a href=\"#PHP\" class=\"headerlink\" title=\"PHP\"></a>PHP</h3><h4 id=\"定义\"><a href=\"#定义\" class=\"headerlink\" title=\"定义\"></a>定义</h4><h5 id=\"抽象者\"><a href=\"#抽象者\" class=\"headerlink\" title=\"抽象者\"></a>抽象者</h5><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">abstract</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Abstraction</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@var</span> Implementor</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">protected</span> $implementor;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">setImplementor</span><span class=\"params\">(Implementor $imp)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">$this</span>-&gt;implementor = $imp;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">abstract</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">operation</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">RefinedAbstraction</span> <span class=\"keyword\">extends</span> <span class=\"title\">Abstraction</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">operation</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">$this</span>-&gt;implementor-&gt;operationImp();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h5 id=\"实现者\"><a href=\"#实现者\" class=\"headerlink\" title=\"实现者\"></a>实现者</h5><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">abstract</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Implementor</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">abstract</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">operationImp</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ConcreteImplementorA</span> <span class=\"keyword\">extends</span> <span class=\"title\">Implementor</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">operationImp</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">echo</span> <span class=\"string\">'具体实现者A'</span>, PHP_EOL;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ConcreteImplementorB</span> <span class=\"keyword\">extends</span> <span class=\"title\">Implementor</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">operationImp</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">echo</span> <span class=\"string\">'具体实现者B'</span>, PHP_EOL;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"使用\"><a href=\"#使用\" class=\"headerlink\" title=\"使用\"></a>使用</h4><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ab = <span class=\"keyword\">new</span> RefinedAbstraction();</span><br><span class=\"line\">$ab-&gt;setImplementor(<span class=\"keyword\">new</span> ConcreteImplementorA());</span><br><span class=\"line\">$ab-&gt;operation();</span><br><span class=\"line\"></span><br><span class=\"line\">$ab-&gt;setImplementor(<span class=\"keyword\">new</span> ConcreteImplementorB());</span><br><span class=\"line\">$ab-&gt;operation();</span><br></pre></td></tr></table></figure>\n<h4 id=\"结果\"><a href=\"#结果\" class=\"headerlink\" title=\"结果\"></a>结果</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">具体实现者A</span><br><span class=\"line\">具体实现者B</span><br></pre></td></tr></table></figure>\n<h2 id=\"具体例子-🌰\"><a href=\"#具体例子-🌰\" class=\"headerlink\" title=\"具体例子 🌰\"></a>具体例子 🌰</h2><h3 id=\"题\"><a href=\"#题\" class=\"headerlink\" title=\"题\"></a>题</h3><p>画图，存在三种图形，三种颜色</p>\n<ul>\n<li>正方形、长方形、圆形</li>\n<li>红、绿、蓝</li>\n</ul>\n<h3 id=\"使用继承的方式\"><a href=\"#使用继承的方式\" class=\"headerlink\" title=\"使用继承的方式\"></a>使用继承的方式</h3><h4 id=\"形状\"><a href=\"#形状\" class=\"headerlink\" title=\"形状\"></a>形状</h4><p><img src=\"http://www.plantuml.com/plantuml/svg/SoWkIImgAStDuGh9BCb9LL1widlfqxsBddTjUx9ZrxC5Ev_FQdc-U_cpplrAN5pFrYv-DcqdK5P1jxH0Lm6YZElbrFrOH9_EQKCNudg-Qv4nH0GYo_LyztvKWHUJvw88WFKOGKGWza2reOX1TQA8mJGRGWI1JaTeHeWXD6E8EQJcfG231G00\" alt=\"\"></p>\n<h4 id=\"颜色\"><a href=\"#颜色\" class=\"headerlink\" title=\"颜色\"></a>颜色</h4><p><img src=\"http://www.plantuml.com/plantuml/svg/SoWkIImgAStDuGh9BCb9LL1widlfoqLpNdHkUh9ZrxC5Ev_FQdc-U_cpplrAN5pFTorIq2qjq5M0AE1wldi_2l_5vBaeVAvdQnS_cxRpwTv5nX1ne0AkbrFtOuWzdTE6Ae3GQGGH15g5q8aGW-f4223fD8G80XsDq8aG0-b45N18pKi1XWC0\" alt=\"\"></p>\n<h4 id=\"问题\"><a href=\"#问题\" class=\"headerlink\" title=\"问题\"></a>问题</h4><p>很明显，如果再添加形状或者颜色，那会疯掉。</p>\n<h3 id=\"以组合或者聚合的方式\"><a href=\"#以组合或者聚合的方式\" class=\"headerlink\" title=\"以组合或者聚合的方式\"></a>以组合或者聚合的方式</h3><p><img src=\"http://www.plantuml.com/plantuml/svg/SoWkIImgAStDuGh9BCb9LL1widlfyzqjJoTqFEkOzgAXzKNZB23x-QoMPzDsFjtJhyJ5zNpN8WNTqW9TXPUBvhpetCJrVFT-5FwBoNDH-5pFrYu6QTuBrGPaFE_QnlLowduiea_djA49GIrCoI_FqrLuldloitbpG5QYYe0iHHL1s8eg3h4NKnnaCwQWGsfU2Z1i0000\" alt=\"\"></p>\n<p>使用时，把颜色和图形进行组合。<br>ok，下面咱们来用桥接模式实现这套方案</p>\n<h3 id=\"类图-1\"><a href=\"#类图-1\" class=\"headerlink\" title=\"类图\"></a>类图</h3><p><img src=\"http://www.plantuml.com/plantuml/svg/2yaioKbLK7goU-dptIrF9tGywvZseg7rHUCi8Flvh9PdqtO-tTCFP3njtVvax-Jd6tS_dRrFYOihCQcuf2WnkKGXEIUnk5WXE2En85MXcaj1GLaXEJydlqZ1Ii4PH0D5j1MAKql070qm2L6W2LHHbf-P0bPG3JEkLY6bAB5S0ovPomKrlx0qiGXYWJOE9K6foIM9UUav-5KvPnOburA2uIk8SwlHdLYGc9bNWiq1AH2rk1Iu5wMcvk5NufHJcefB1HSq47HB2tHrQ-mWOSu5ypQwECYZ6890rIam8MZyW1s59WPo1PeG5oGiT8ioqpDAT7NpeGOwfEQbbERc0000\" alt=\"\"></p>\n<h3 id=\"PHP-1\"><a href=\"#PHP-1\" class=\"headerlink\" title=\"PHP\"></a>PHP</h3><h4 id=\"定义-1\"><a href=\"#定义-1\" class=\"headerlink\" title=\"定义\"></a>定义</h4><h5 id=\"抽象者-1\"><a href=\"#抽象者-1\" class=\"headerlink\" title=\"抽象者\"></a>抽象者</h5><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">abstract</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Shape</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@var</span> Color</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">protected</span> $color;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">setColor</span><span class=\"params\">(Color $color)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">$this</span>-&gt;color = $color;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">abstract</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">draw</span><span class=\"params\">()</span> : <span class=\"title\">void</span></span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Square</span> <span class=\"keyword\">extends</span> <span class=\"title\">Shape</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">draw</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\">    : <span class=\"title\">void</span></span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">echo</span> <span class=\"string\">'正方形，'</span>;</span><br><span class=\"line\">        <span class=\"keyword\">$this</span>-&gt;color-&gt;paint();</span><br><span class=\"line\">        <span class=\"keyword\">echo</span> PHP_EOL;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Rectangle</span> <span class=\"keyword\">extends</span> <span class=\"title\">Shape</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">draw</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\">    : <span class=\"title\">void</span></span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">echo</span> <span class=\"string\">'长方形，'</span>;</span><br><span class=\"line\">        <span class=\"keyword\">$this</span>-&gt;color-&gt;paint();</span><br><span class=\"line\">        <span class=\"keyword\">echo</span> PHP_EOL;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Circle</span> <span class=\"keyword\">extends</span> <span class=\"title\">Shape</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">draw</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\">    : <span class=\"title\">void</span></span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">echo</span> <span class=\"string\">'圆形，'</span>;</span><br><span class=\"line\">        <span class=\"keyword\">$this</span>-&gt;color-&gt;paint();</span><br><span class=\"line\">        <span class=\"keyword\">echo</span> PHP_EOL;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h5 id=\"实现者-1\"><a href=\"#实现者-1\" class=\"headerlink\" title=\"实现者\"></a>实现者</h5><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">abstract</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Color</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">abstract</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">paint</span><span class=\"params\">()</span> : <span class=\"title\">void</span></span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Red</span> <span class=\"keyword\">extends</span> <span class=\"title\">Color</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">paint</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\">    : <span class=\"title\">void</span></span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">echo</span> <span class=\"string\">'红色'</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Green</span> <span class=\"keyword\">extends</span> <span class=\"title\">Color</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">paint</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\">    : <span class=\"title\">void</span></span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">echo</span> <span class=\"string\">'绿色'</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Blue</span> <span class=\"keyword\">extends</span> <span class=\"title\">Color</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">paint</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\">    : <span class=\"title\">void</span></span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">echo</span> <span class=\"string\">'蓝色'</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"使用-1\"><a href=\"#使用-1\" class=\"headerlink\" title=\"使用\"></a>使用</h4><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$shape = <span class=\"keyword\">new</span> Circle();</span><br><span class=\"line\">$shape-&gt;setColor(<span class=\"keyword\">new</span> Red());</span><br><span class=\"line\">$shape-&gt;draw();</span><br><span class=\"line\"></span><br><span class=\"line\">$shape = <span class=\"keyword\">new</span> Square();</span><br><span class=\"line\">$shape-&gt;setColor(<span class=\"keyword\">new</span> Green());</span><br><span class=\"line\">$shape-&gt;draw();</span><br><span class=\"line\"></span><br><span class=\"line\">$shape = <span class=\"keyword\">new</span> Rectangle();</span><br><span class=\"line\">$shape-&gt;setColor(<span class=\"keyword\">new</span> Blue());</span><br><span class=\"line\">$shape-&gt;draw();</span><br></pre></td></tr></table></figure>\n<h4 id=\"结果-1\"><a href=\"#结果-1\" class=\"headerlink\" title=\"结果\"></a>结果</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">圆形，红色</span><br><span class=\"line\">正方形，绿色</span><br><span class=\"line\">长方形，蓝色</span><br></pre></td></tr></table></figure>\n<h2 id=\"生成图的代码\"><a href=\"#生成图的代码\" class=\"headerlink\" title=\"生成图的代码\"></a>生成图的代码</h2><h3 id=\"桥接模式\"><a href=\"#桥接模式\" class=\"headerlink\" title=\"桥接模式\"></a>桥接模式</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">@startuml</span><br><span class=\"line\">Title &quot;桥接模式&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">class Client</span><br><span class=\"line\">abstract class Abstraction &#123;</span><br><span class=\"line\">  +&#123;abstract&#125; operation()</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">class refinedAbstraction &#123;</span><br><span class=\"line\">  +operation()</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">abstract class Implementor &#123;</span><br><span class=\"line\">  +&#123;abstract&#125; operationImp()</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">class ConcrateImplementorA &#123;</span><br><span class=\"line\">  +operationImp()</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">class ConcrateImplementorB &#123;</span><br><span class=\"line\">  +operationImp()</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">Client -right--&gt; Abstraction</span><br><span class=\"line\"></span><br><span class=\"line\">refinedAbstraction -up--|&gt; Abstraction</span><br><span class=\"line\"></span><br><span class=\"line\">ConcrateImplementorA -up--|&gt; Implementor</span><br><span class=\"line\">ConcrateImplementorB -up--|&gt; Implementor</span><br><span class=\"line\"></span><br><span class=\"line\">Implementor -left&lt;--o Abstraction</span><br><span class=\"line\">Abstraction -righto--&gt; Implemento</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">@enduml</span><br></pre></td></tr></table></figure>\n<h3 id=\"以形状为根的继承\"><a href=\"#以形状为根的继承\" class=\"headerlink\" title=\"以形状为根的继承\"></a>以形状为根的继承</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">@startuml</span><br><span class=\"line\">Title &quot;以形状为根的继承&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">正方形 -up- 形状</span><br><span class=\"line\">长方形 -up- 形状</span><br><span class=\"line\">圆形 -up- 形状</span><br><span class=\"line\"></span><br><span class=\"line\">红3 -up- 圆形</span><br><span class=\"line\">绿3 -up- 圆形</span><br><span class=\"line\">蓝3 -up- 圆形</span><br><span class=\"line\"></span><br><span class=\"line\">红2 -up- 长方形</span><br><span class=\"line\">绿2 -up- 长方形</span><br><span class=\"line\">蓝2 -up- 长方形</span><br><span class=\"line\"></span><br><span class=\"line\">红1 -up- 正方形</span><br><span class=\"line\">绿1 -up- 正方形</span><br><span class=\"line\">蓝1 -up- 正方形</span><br><span class=\"line\">@enduml</span><br></pre></td></tr></table></figure>\n<h3 id=\"以颜色为根的继承\"><a href=\"#以颜色为根的继承\" class=\"headerlink\" title=\"以颜色为根的继承\"></a>以颜色为根的继承</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">@startuml</span><br><span class=\"line\">Title &quot;以颜色为根的继承&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">红 -up- 颜色</span><br><span class=\"line\">绿 -up- 颜色</span><br><span class=\"line\">蓝 -up- 颜色</span><br><span class=\"line\"></span><br><span class=\"line\">正方形3 -up- 蓝</span><br><span class=\"line\">长方形3 -up- 蓝</span><br><span class=\"line\">圆形3 -up- 蓝</span><br><span class=\"line\"></span><br><span class=\"line\">正方形2 -up- 绿</span><br><span class=\"line\">长方形2 -up- 绿</span><br><span class=\"line\">圆形2 -up- 绿</span><br><span class=\"line\"></span><br><span class=\"line\">正方形1 -up- 红</span><br><span class=\"line\">长方形1 -up- 红</span><br><span class=\"line\">圆形1 -up- 红</span><br><span class=\"line\">@enduml</span><br></pre></td></tr></table></figure>\n<h3 id=\"以组合或者聚合的方式-1\"><a href=\"#以组合或者聚合的方式-1\" class=\"headerlink\" title=\"以组合或者聚合的方式\"></a>以组合或者聚合的方式</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">@startuml</span><br><span class=\"line\">Title &quot;以组合或者聚合的方式&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">红 -up- 颜色</span><br><span class=\"line\">绿 -up- 颜色</span><br><span class=\"line\">蓝 -up- 颜色</span><br><span class=\"line\"></span><br><span class=\"line\">正方形 -up- 形状</span><br><span class=\"line\">长方形 -up- 形状</span><br><span class=\"line\">圆形 -up- 形状</span><br><span class=\"line\"></span><br><span class=\"line\">红 -down- 结果</span><br><span class=\"line\">绿 -down- 结果</span><br><span class=\"line\">蓝 -down- 结果</span><br><span class=\"line\">正方形 -down- 结果</span><br><span class=\"line\">长方形 -down- 结果</span><br><span class=\"line\">圆形 -down- 结果</span><br><span class=\"line\">@enduml</span><br></pre></td></tr></table></figure>\n<h3 id=\"以组合或者聚合的方式的具体类图\"><a href=\"#以组合或者聚合的方式的具体类图\" class=\"headerlink\" title=\"以组合或者聚合的方式的具体类图\"></a>以组合或者聚合的方式的具体类图</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Title &quot;以组合或者聚合的方式的具体类图&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">abstract class Shape &#123;</span><br><span class=\"line\">  # color : Color</span><br><span class=\"line\">  + setColor(Color color) : void</span><br><span class=\"line\">  + &#123;abstract&#125; draw() : void</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">class Square &#123;</span><br><span class=\"line\">  + draw() : void</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">class Rectangle &#123;</span><br><span class=\"line\">  + draw() : void</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">class Circle &#123;</span><br><span class=\"line\">  + draw() : void</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">abstract class Color &#123;</span><br><span class=\"line\">  + &#123;abstract&#125; paint() : void</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">class Red &#123;</span><br><span class=\"line\">  + paint() : void</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">class Green &#123;</span><br><span class=\"line\">  + paint() : void</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">class Blue &#123;</span><br><span class=\"line\">  + paint() : void</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">Square -up--|&gt; Shape</span><br><span class=\"line\">Rectangle -up--|&gt; Shape</span><br><span class=\"line\">Circle -up--|&gt; Shape</span><br><span class=\"line\"></span><br><span class=\"line\">Red -up--|&gt; Color</span><br><span class=\"line\">Green -up--|&gt; Color</span><br><span class=\"line\">Blue -up--|&gt; Color</span><br><span class=\"line\"></span><br><span class=\"line\">Color -right--o Shape</span><br><span class=\"line\">@enduml</span><br></pre></td></tr></table></figure>\n<h2 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h2><p><a href=\"http://cmsblogs.com/?p=357\" target=\"_blank\" rel=\"noopener\">设计模式读书笔记—–桥接模式</a></p>\n","site":{"data":{"head":"\n<script type=\"text/javascript\" id=\"hexo.headll\">\n(function () {\n  window.addEventListener(\"load\", function () {   //添加load事件\n    $(\"body\").click(function (e) {\n        var a = new Array(\"富强\", \"民主\", \"文明\", \"和谐\", \"自由\", \"平等\", \"公正\", \"法治\", \"爱国\", \"敬业\", \"诚信\", \"友善\");\n        var a_idx=Math.floor(Math.random()*a.length);\n        var $i = $(\"<span/>\").text(a[a_idx]);\n        var x = e.pageX,y = e.pageY;\n        $i.css({\n            \"z-index\": 99999,\n            \"top\": y - 20,\n            \"left\": x,\n            \"position\": \"absolute\",\n            \"font-weight\": \"bold\",\n            \"color\": \"#ff6651\"\n        });\n        $(\"body\").append($i);\n        $i.animate({\n            \"top\": y - 180,\n            \"opacity\": 0\n        },\n        1500,\n        function () {\n            $i.remove();\n        });\n    });\n  }, false);\n})();\n</script>\n\n"}},"excerpt":"<p>设计模式之桥接模式<br>","more":"</p>\n<h2 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h2><blockquote>\n<p>将抽象部分与它的实现部分分离，使他们都可以独立地变化。</p>\n</blockquote>\n<p>也就是如果实现系统，可以多维度分类，那就能让他们独立变化，以减少耦合。</p>\n<p><strong>多组合</strong>，<strong>少继承</strong> 的体现。</p>\n<h2 id=\"关键点\"><a href=\"#关键点\" class=\"headerlink\" title=\"关键点\"></a>关键点</h2><ul>\n<li>可多维度分类</li>\n<li>多维度分类可以变化</li>\n<li>可用聚合表示</li>\n</ul>\n<h2 id=\"类图\"><a href=\"#类图\" class=\"headerlink\" title=\"类图\"></a>类图</h2><p><img src=\"http://www.plantuml.com/plantuml/svg/TP1DJeOm48RtSue9Autf5GpWohqNg31ga_wGTbWXLz0pi23n45v7pl5f2gRmbUKCpyFxTih0qdDlD3mfreJ5CitBnxnyJJ_VdmL0esK8-A0LMTuFyZcmbmrZt5Rhg9p50H3lXWqOqNNavT-NcriOrxzuUb6MsYjjpnvJ7asdoP1bvyzJVg4ehtsTRRnaIjmgoaVZNAXF18Z7GE7LwniBSP_U0I3pID5tGhmVk6p5ZKoMER3EWf0C_-tSBhKas_P6Nm00\" alt=\"\"></p>\n<h2 id=\"实现\"><a href=\"#实现\" class=\"headerlink\" title=\"实现\"></a>实现</h2><h3 id=\"PHP\"><a href=\"#PHP\" class=\"headerlink\" title=\"PHP\"></a>PHP</h3><h4 id=\"定义\"><a href=\"#定义\" class=\"headerlink\" title=\"定义\"></a>定义</h4><h5 id=\"抽象者\"><a href=\"#抽象者\" class=\"headerlink\" title=\"抽象者\"></a>抽象者</h5><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">abstract</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Abstraction</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@var</span> Implementor</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">protected</span> $implementor;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">setImplementor</span><span class=\"params\">(Implementor $imp)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">$this</span>-&gt;implementor = $imp;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">abstract</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">operation</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">RefinedAbstraction</span> <span class=\"keyword\">extends</span> <span class=\"title\">Abstraction</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">operation</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">$this</span>-&gt;implementor-&gt;operationImp();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h5 id=\"实现者\"><a href=\"#实现者\" class=\"headerlink\" title=\"实现者\"></a>实现者</h5><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">abstract</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Implementor</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">abstract</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">operationImp</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ConcreteImplementorA</span> <span class=\"keyword\">extends</span> <span class=\"title\">Implementor</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">operationImp</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">echo</span> <span class=\"string\">'具体实现者A'</span>, PHP_EOL;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ConcreteImplementorB</span> <span class=\"keyword\">extends</span> <span class=\"title\">Implementor</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">operationImp</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">echo</span> <span class=\"string\">'具体实现者B'</span>, PHP_EOL;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"使用\"><a href=\"#使用\" class=\"headerlink\" title=\"使用\"></a>使用</h4><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ab = <span class=\"keyword\">new</span> RefinedAbstraction();</span><br><span class=\"line\">$ab-&gt;setImplementor(<span class=\"keyword\">new</span> ConcreteImplementorA());</span><br><span class=\"line\">$ab-&gt;operation();</span><br><span class=\"line\"></span><br><span class=\"line\">$ab-&gt;setImplementor(<span class=\"keyword\">new</span> ConcreteImplementorB());</span><br><span class=\"line\">$ab-&gt;operation();</span><br></pre></td></tr></table></figure>\n<h4 id=\"结果\"><a href=\"#结果\" class=\"headerlink\" title=\"结果\"></a>结果</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">具体实现者A</span><br><span class=\"line\">具体实现者B</span><br></pre></td></tr></table></figure>\n<h2 id=\"具体例子-🌰\"><a href=\"#具体例子-🌰\" class=\"headerlink\" title=\"具体例子 🌰\"></a>具体例子 🌰</h2><h3 id=\"题\"><a href=\"#题\" class=\"headerlink\" title=\"题\"></a>题</h3><p>画图，存在三种图形，三种颜色</p>\n<ul>\n<li>正方形、长方形、圆形</li>\n<li>红、绿、蓝</li>\n</ul>\n<h3 id=\"使用继承的方式\"><a href=\"#使用继承的方式\" class=\"headerlink\" title=\"使用继承的方式\"></a>使用继承的方式</h3><h4 id=\"形状\"><a href=\"#形状\" class=\"headerlink\" title=\"形状\"></a>形状</h4><p><img src=\"http://www.plantuml.com/plantuml/svg/SoWkIImgAStDuGh9BCb9LL1widlfqxsBddTjUx9ZrxC5Ev_FQdc-U_cpplrAN5pFrYv-DcqdK5P1jxH0Lm6YZElbrFrOH9_EQKCNudg-Qv4nH0GYo_LyztvKWHUJvw88WFKOGKGWza2reOX1TQA8mJGRGWI1JaTeHeWXD6E8EQJcfG231G00\" alt=\"\"></p>\n<h4 id=\"颜色\"><a href=\"#颜色\" class=\"headerlink\" title=\"颜色\"></a>颜色</h4><p><img src=\"http://www.plantuml.com/plantuml/svg/SoWkIImgAStDuGh9BCb9LL1widlfoqLpNdHkUh9ZrxC5Ev_FQdc-U_cpplrAN5pFTorIq2qjq5M0AE1wldi_2l_5vBaeVAvdQnS_cxRpwTv5nX1ne0AkbrFtOuWzdTE6Ae3GQGGH15g5q8aGW-f4223fD8G80XsDq8aG0-b45N18pKi1XWC0\" alt=\"\"></p>\n<h4 id=\"问题\"><a href=\"#问题\" class=\"headerlink\" title=\"问题\"></a>问题</h4><p>很明显，如果再添加形状或者颜色，那会疯掉。</p>\n<h3 id=\"以组合或者聚合的方式\"><a href=\"#以组合或者聚合的方式\" class=\"headerlink\" title=\"以组合或者聚合的方式\"></a>以组合或者聚合的方式</h3><p><img src=\"http://www.plantuml.com/plantuml/svg/SoWkIImgAStDuGh9BCb9LL1widlfyzqjJoTqFEkOzgAXzKNZB23x-QoMPzDsFjtJhyJ5zNpN8WNTqW9TXPUBvhpetCJrVFT-5FwBoNDH-5pFrYu6QTuBrGPaFE_QnlLowduiea_djA49GIrCoI_FqrLuldloitbpG5QYYe0iHHL1s8eg3h4NKnnaCwQWGsfU2Z1i0000\" alt=\"\"></p>\n<p>使用时，把颜色和图形进行组合。<br>ok，下面咱们来用桥接模式实现这套方案</p>\n<h3 id=\"类图-1\"><a href=\"#类图-1\" class=\"headerlink\" title=\"类图\"></a>类图</h3><p><img src=\"http://www.plantuml.com/plantuml/svg/2yaioKbLK7goU-dptIrF9tGywvZseg7rHUCi8Flvh9PdqtO-tTCFP3njtVvax-Jd6tS_dRrFYOihCQcuf2WnkKGXEIUnk5WXE2En85MXcaj1GLaXEJydlqZ1Ii4PH0D5j1MAKql070qm2L6W2LHHbf-P0bPG3JEkLY6bAB5S0ovPomKrlx0qiGXYWJOE9K6foIM9UUav-5KvPnOburA2uIk8SwlHdLYGc9bNWiq1AH2rk1Iu5wMcvk5NufHJcefB1HSq47HB2tHrQ-mWOSu5ypQwECYZ6890rIam8MZyW1s59WPo1PeG5oGiT8ioqpDAT7NpeGOwfEQbbERc0000\" alt=\"\"></p>\n<h3 id=\"PHP-1\"><a href=\"#PHP-1\" class=\"headerlink\" title=\"PHP\"></a>PHP</h3><h4 id=\"定义-1\"><a href=\"#定义-1\" class=\"headerlink\" title=\"定义\"></a>定义</h4><h5 id=\"抽象者-1\"><a href=\"#抽象者-1\" class=\"headerlink\" title=\"抽象者\"></a>抽象者</h5><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">abstract</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Shape</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@var</span> Color</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">protected</span> $color;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">setColor</span><span class=\"params\">(Color $color)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">$this</span>-&gt;color = $color;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">abstract</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">draw</span><span class=\"params\">()</span> : <span class=\"title\">void</span></span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Square</span> <span class=\"keyword\">extends</span> <span class=\"title\">Shape</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">draw</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\">    : <span class=\"title\">void</span></span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">echo</span> <span class=\"string\">'正方形，'</span>;</span><br><span class=\"line\">        <span class=\"keyword\">$this</span>-&gt;color-&gt;paint();</span><br><span class=\"line\">        <span class=\"keyword\">echo</span> PHP_EOL;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Rectangle</span> <span class=\"keyword\">extends</span> <span class=\"title\">Shape</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">draw</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\">    : <span class=\"title\">void</span></span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">echo</span> <span class=\"string\">'长方形，'</span>;</span><br><span class=\"line\">        <span class=\"keyword\">$this</span>-&gt;color-&gt;paint();</span><br><span class=\"line\">        <span class=\"keyword\">echo</span> PHP_EOL;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Circle</span> <span class=\"keyword\">extends</span> <span class=\"title\">Shape</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">draw</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\">    : <span class=\"title\">void</span></span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">echo</span> <span class=\"string\">'圆形，'</span>;</span><br><span class=\"line\">        <span class=\"keyword\">$this</span>-&gt;color-&gt;paint();</span><br><span class=\"line\">        <span class=\"keyword\">echo</span> PHP_EOL;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h5 id=\"实现者-1\"><a href=\"#实现者-1\" class=\"headerlink\" title=\"实现者\"></a>实现者</h5><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">abstract</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Color</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">abstract</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">paint</span><span class=\"params\">()</span> : <span class=\"title\">void</span></span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Red</span> <span class=\"keyword\">extends</span> <span class=\"title\">Color</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">paint</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\">    : <span class=\"title\">void</span></span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">echo</span> <span class=\"string\">'红色'</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Green</span> <span class=\"keyword\">extends</span> <span class=\"title\">Color</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">paint</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\">    : <span class=\"title\">void</span></span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">echo</span> <span class=\"string\">'绿色'</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Blue</span> <span class=\"keyword\">extends</span> <span class=\"title\">Color</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">paint</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\">    : <span class=\"title\">void</span></span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">echo</span> <span class=\"string\">'蓝色'</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"使用-1\"><a href=\"#使用-1\" class=\"headerlink\" title=\"使用\"></a>使用</h4><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$shape = <span class=\"keyword\">new</span> Circle();</span><br><span class=\"line\">$shape-&gt;setColor(<span class=\"keyword\">new</span> Red());</span><br><span class=\"line\">$shape-&gt;draw();</span><br><span class=\"line\"></span><br><span class=\"line\">$shape = <span class=\"keyword\">new</span> Square();</span><br><span class=\"line\">$shape-&gt;setColor(<span class=\"keyword\">new</span> Green());</span><br><span class=\"line\">$shape-&gt;draw();</span><br><span class=\"line\"></span><br><span class=\"line\">$shape = <span class=\"keyword\">new</span> Rectangle();</span><br><span class=\"line\">$shape-&gt;setColor(<span class=\"keyword\">new</span> Blue());</span><br><span class=\"line\">$shape-&gt;draw();</span><br></pre></td></tr></table></figure>\n<h4 id=\"结果-1\"><a href=\"#结果-1\" class=\"headerlink\" title=\"结果\"></a>结果</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">圆形，红色</span><br><span class=\"line\">正方形，绿色</span><br><span class=\"line\">长方形，蓝色</span><br></pre></td></tr></table></figure>\n<h2 id=\"生成图的代码\"><a href=\"#生成图的代码\" class=\"headerlink\" title=\"生成图的代码\"></a>生成图的代码</h2><h3 id=\"桥接模式\"><a href=\"#桥接模式\" class=\"headerlink\" title=\"桥接模式\"></a>桥接模式</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">@startuml</span><br><span class=\"line\">Title &quot;桥接模式&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">class Client</span><br><span class=\"line\">abstract class Abstraction &#123;</span><br><span class=\"line\">  +&#123;abstract&#125; operation()</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">class refinedAbstraction &#123;</span><br><span class=\"line\">  +operation()</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">abstract class Implementor &#123;</span><br><span class=\"line\">  +&#123;abstract&#125; operationImp()</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">class ConcrateImplementorA &#123;</span><br><span class=\"line\">  +operationImp()</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">class ConcrateImplementorB &#123;</span><br><span class=\"line\">  +operationImp()</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">Client -right--&gt; Abstraction</span><br><span class=\"line\"></span><br><span class=\"line\">refinedAbstraction -up--|&gt; Abstraction</span><br><span class=\"line\"></span><br><span class=\"line\">ConcrateImplementorA -up--|&gt; Implementor</span><br><span class=\"line\">ConcrateImplementorB -up--|&gt; Implementor</span><br><span class=\"line\"></span><br><span class=\"line\">Implementor -left&lt;--o Abstraction</span><br><span class=\"line\">Abstraction -righto--&gt; Implemento</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">@enduml</span><br></pre></td></tr></table></figure>\n<h3 id=\"以形状为根的继承\"><a href=\"#以形状为根的继承\" class=\"headerlink\" title=\"以形状为根的继承\"></a>以形状为根的继承</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">@startuml</span><br><span class=\"line\">Title &quot;以形状为根的继承&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">正方形 -up- 形状</span><br><span class=\"line\">长方形 -up- 形状</span><br><span class=\"line\">圆形 -up- 形状</span><br><span class=\"line\"></span><br><span class=\"line\">红3 -up- 圆形</span><br><span class=\"line\">绿3 -up- 圆形</span><br><span class=\"line\">蓝3 -up- 圆形</span><br><span class=\"line\"></span><br><span class=\"line\">红2 -up- 长方形</span><br><span class=\"line\">绿2 -up- 长方形</span><br><span class=\"line\">蓝2 -up- 长方形</span><br><span class=\"line\"></span><br><span class=\"line\">红1 -up- 正方形</span><br><span class=\"line\">绿1 -up- 正方形</span><br><span class=\"line\">蓝1 -up- 正方形</span><br><span class=\"line\">@enduml</span><br></pre></td></tr></table></figure>\n<h3 id=\"以颜色为根的继承\"><a href=\"#以颜色为根的继承\" class=\"headerlink\" title=\"以颜色为根的继承\"></a>以颜色为根的继承</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">@startuml</span><br><span class=\"line\">Title &quot;以颜色为根的继承&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">红 -up- 颜色</span><br><span class=\"line\">绿 -up- 颜色</span><br><span class=\"line\">蓝 -up- 颜色</span><br><span class=\"line\"></span><br><span class=\"line\">正方形3 -up- 蓝</span><br><span class=\"line\">长方形3 -up- 蓝</span><br><span class=\"line\">圆形3 -up- 蓝</span><br><span class=\"line\"></span><br><span class=\"line\">正方形2 -up- 绿</span><br><span class=\"line\">长方形2 -up- 绿</span><br><span class=\"line\">圆形2 -up- 绿</span><br><span class=\"line\"></span><br><span class=\"line\">正方形1 -up- 红</span><br><span class=\"line\">长方形1 -up- 红</span><br><span class=\"line\">圆形1 -up- 红</span><br><span class=\"line\">@enduml</span><br></pre></td></tr></table></figure>\n<h3 id=\"以组合或者聚合的方式-1\"><a href=\"#以组合或者聚合的方式-1\" class=\"headerlink\" title=\"以组合或者聚合的方式\"></a>以组合或者聚合的方式</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">@startuml</span><br><span class=\"line\">Title &quot;以组合或者聚合的方式&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">红 -up- 颜色</span><br><span class=\"line\">绿 -up- 颜色</span><br><span class=\"line\">蓝 -up- 颜色</span><br><span class=\"line\"></span><br><span class=\"line\">正方形 -up- 形状</span><br><span class=\"line\">长方形 -up- 形状</span><br><span class=\"line\">圆形 -up- 形状</span><br><span class=\"line\"></span><br><span class=\"line\">红 -down- 结果</span><br><span class=\"line\">绿 -down- 结果</span><br><span class=\"line\">蓝 -down- 结果</span><br><span class=\"line\">正方形 -down- 结果</span><br><span class=\"line\">长方形 -down- 结果</span><br><span class=\"line\">圆形 -down- 结果</span><br><span class=\"line\">@enduml</span><br></pre></td></tr></table></figure>\n<h3 id=\"以组合或者聚合的方式的具体类图\"><a href=\"#以组合或者聚合的方式的具体类图\" class=\"headerlink\" title=\"以组合或者聚合的方式的具体类图\"></a>以组合或者聚合的方式的具体类图</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Title &quot;以组合或者聚合的方式的具体类图&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">abstract class Shape &#123;</span><br><span class=\"line\">  # color : Color</span><br><span class=\"line\">  + setColor(Color color) : void</span><br><span class=\"line\">  + &#123;abstract&#125; draw() : void</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">class Square &#123;</span><br><span class=\"line\">  + draw() : void</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">class Rectangle &#123;</span><br><span class=\"line\">  + draw() : void</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">class Circle &#123;</span><br><span class=\"line\">  + draw() : void</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">abstract class Color &#123;</span><br><span class=\"line\">  + &#123;abstract&#125; paint() : void</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">class Red &#123;</span><br><span class=\"line\">  + paint() : void</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">class Green &#123;</span><br><span class=\"line\">  + paint() : void</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">class Blue &#123;</span><br><span class=\"line\">  + paint() : void</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">Square -up--|&gt; Shape</span><br><span class=\"line\">Rectangle -up--|&gt; Shape</span><br><span class=\"line\">Circle -up--|&gt; Shape</span><br><span class=\"line\"></span><br><span class=\"line\">Red -up--|&gt; Color</span><br><span class=\"line\">Green -up--|&gt; Color</span><br><span class=\"line\">Blue -up--|&gt; Color</span><br><span class=\"line\"></span><br><span class=\"line\">Color -right--o Shape</span><br><span class=\"line\">@enduml</span><br></pre></td></tr></table></figure>\n<h2 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h2><p><a href=\"http://cmsblogs.com/?p=357\" target=\"_blank\" rel=\"noopener\">设计模式读书笔记—–桥接模式</a></p>"},{"title":"模式-组合模式","date":"2018-06-14T08:35:00.000Z","_content":"\n设计模式之组合模式\n<!-- MORE -->\n\n## 简介\n> 将对象组合成树形结构，以表示“部分-整体”的层次结构。\n> 可以使得单个对象和组合对象的使用，具有一致性。\n\n## 关键点\n- 树形\n- 部分 - 整体\n\n## 实现方式\n- 安全方式\n- 透明方式 ： 组合动作公用，无法区分具体的Leaf、Composite\n\n以下为 安全方式\n\n## 类图\n![](http://www.plantuml.com/plantuml/svg/XP51Ji9058RtSueNLXWp5sYC8N7hqWiCTDGcROUqhsoGJK6Z3GXBOeoHn0KRYDqWMhXDfoqhhs2jTZH6T3Tv_yit_vTNSv4vw5acEJBGv519evuSNIRJYLmDAuGqJEQwS60Qt4R2wYuwh87mEHLMKzXv06q2iDikumumNQ-gT0SqQ0b3_x7ZS4kq-BzheiaTXhoguWwn1N9mZ9DJr209rbauISFeTTMNyxlq-b6UXydjLNhJsqJZRFwGJVhnygKKEUJik2Yhi2MlBX25fO4SBkHib0L-wZ_dp7WvoBfhUJ58dY8Pt6-wqpXQbBIYksiWBv1RfVyotQQdwip6qf_cZSgVFqu1jF2dT1yKbgWwGBqcfMVVitVnNyRg1NkKYYyXGchSrZtBV0C0)\n\n\n\n\n## 实现\n### PHP\n#### 定义\n```PHP\nabstract class Component\n{\n    abstract public function add(Component $component)\n    : void;\n\n    abstract public function remove(Component $component)\n    : void;\n\n    abstract public function operate(int $depth);\n\n    // 一些能公用的代码\n    protected $name = '';\n\n    public function __construct($name)\n    {\n        $this->name = $name;\n    }\n}\n\nclass Leaf extends Component\n{\n    public function add(Component $component)\n    : void\n    {\n        throw new \\Exception('Cannot add to a leaf');\n    }\n\n    public function remove(Component $component)\n    : void\n    {\n        throw new \\Exception('Cannot remove from a leaf');\n    }\n\n    public function operate(int $depth)\n    {\n        echo str_pad('', $depth, '-'), $this->name, PHP_EOL;\n    }\n}\n\nclass Composite extends Component\n{\n    private $components = [];\n\n    public function add(Component $component)\n    : void\n    {\n        $this->components[ spl_object_id($component) ] = $component;\n    }\n\n    public function remove(Component $component)\n    : void\n    {\n        unset($this->components[ spl_object_id($component) ]);\n    }\n\n    public function operate(int $depth)\n    {\n        echo str_pad('', $depth, '-'), $this->name, PHP_EOL;\n        /** @var Component $component */\n        foreach ($this->components as $component) {\n            $component->operate($depth + 1);\n        }\n    }\n}\n```\n\n#### 使用\n```PHP\n$root = new Composite('root');\n$root->add(new Leaf('root leaf a'));\n$root->add(new Leaf('root leaf b'));\n\n$compA = new Composite('composite a');\n$compA->add(new Leaf('composite a leaf c'));\n$compA->add(new Leaf('composite a leaf d'));\n$compA->add(new Leaf('composite a leaf e'));\n\n$root->add($compA);\n\n$compAA = new Composite('composite aa');\n$compAA->add(new Leaf('composite aa leaf f'));\n$compAA->add(new Leaf('composite aa leaf g'));\n$compAA->add(new Leaf('composite aa leaf h'));\n\n$compA->add($compAA);\n\n$root->operate(0);\n```\n\n#### 结果\n```\nroot\n-root leaf a\n-root leaf b\n-composite a\n--composite a leaf c\n--composite a leaf d\n--composite a leaf e\n--composite aa\n---composite aa leaf f\n---composite aa leaf g\n---composite aa leaf h\n```\n\n\n## 生成图的代码\n### 组合模式\n```plantuml\n@startuml\nTitle \"组合模式\"\n\nclass Client\nabstract class Component {\n  +{abstract} add(Component) : void\n  +{abstract} remove(Component) : void\n  +{abstract} operate() : void\n}\nnote right: 抽象类，实现共有的默认行为\n\nclass Leaf{\n  +operate()\n}\nnote bottom: 叶子节点，不能再添加部件\n\nclass Composite{\n  +add(Component) : void\n  +remove(Component) : void\n  +operate() : void\n}\nnote bottom: 存储子部件\n\nClient -right--> Component\nComposite -up--|> Component\nLeaf -up--|> Component\nComponent <--o Composite\n\n@enduml\n```\n","source":"_posts/模式-组合模式.md","raw":"---\ntitle: 模式-组合模式\ndate: 2018-06-14T16:35:00.000Z\ntags:\n  - 模式\n  - 笔记\ncategories:\n  - 模式\n---\n\n设计模式之组合模式\n<!-- MORE -->\n\n## 简介\n> 将对象组合成树形结构，以表示“部分-整体”的层次结构。\n> 可以使得单个对象和组合对象的使用，具有一致性。\n\n## 关键点\n- 树形\n- 部分 - 整体\n\n## 实现方式\n- 安全方式\n- 透明方式 ： 组合动作公用，无法区分具体的Leaf、Composite\n\n以下为 安全方式\n\n## 类图\n![](http://www.plantuml.com/plantuml/svg/XP51Ji9058RtSueNLXWp5sYC8N7hqWiCTDGcROUqhsoGJK6Z3GXBOeoHn0KRYDqWMhXDfoqhhs2jTZH6T3Tv_yit_vTNSv4vw5acEJBGv519evuSNIRJYLmDAuGqJEQwS60Qt4R2wYuwh87mEHLMKzXv06q2iDikumumNQ-gT0SqQ0b3_x7ZS4kq-BzheiaTXhoguWwn1N9mZ9DJr209rbauISFeTTMNyxlq-b6UXydjLNhJsqJZRFwGJVhnygKKEUJik2Yhi2MlBX25fO4SBkHib0L-wZ_dp7WvoBfhUJ58dY8Pt6-wqpXQbBIYksiWBv1RfVyotQQdwip6qf_cZSgVFqu1jF2dT1yKbgWwGBqcfMVVitVnNyRg1NkKYYyXGchSrZtBV0C0)\n\n\n\n\n## 实现\n### PHP\n#### 定义\n```PHP\nabstract class Component\n{\n    abstract public function add(Component $component)\n    : void;\n\n    abstract public function remove(Component $component)\n    : void;\n\n    abstract public function operate(int $depth);\n\n    // 一些能公用的代码\n    protected $name = '';\n\n    public function __construct($name)\n    {\n        $this->name = $name;\n    }\n}\n\nclass Leaf extends Component\n{\n    public function add(Component $component)\n    : void\n    {\n        throw new \\Exception('Cannot add to a leaf');\n    }\n\n    public function remove(Component $component)\n    : void\n    {\n        throw new \\Exception('Cannot remove from a leaf');\n    }\n\n    public function operate(int $depth)\n    {\n        echo str_pad('', $depth, '-'), $this->name, PHP_EOL;\n    }\n}\n\nclass Composite extends Component\n{\n    private $components = [];\n\n    public function add(Component $component)\n    : void\n    {\n        $this->components[ spl_object_id($component) ] = $component;\n    }\n\n    public function remove(Component $component)\n    : void\n    {\n        unset($this->components[ spl_object_id($component) ]);\n    }\n\n    public function operate(int $depth)\n    {\n        echo str_pad('', $depth, '-'), $this->name, PHP_EOL;\n        /** @var Component $component */\n        foreach ($this->components as $component) {\n            $component->operate($depth + 1);\n        }\n    }\n}\n```\n\n#### 使用\n```PHP\n$root = new Composite('root');\n$root->add(new Leaf('root leaf a'));\n$root->add(new Leaf('root leaf b'));\n\n$compA = new Composite('composite a');\n$compA->add(new Leaf('composite a leaf c'));\n$compA->add(new Leaf('composite a leaf d'));\n$compA->add(new Leaf('composite a leaf e'));\n\n$root->add($compA);\n\n$compAA = new Composite('composite aa');\n$compAA->add(new Leaf('composite aa leaf f'));\n$compAA->add(new Leaf('composite aa leaf g'));\n$compAA->add(new Leaf('composite aa leaf h'));\n\n$compA->add($compAA);\n\n$root->operate(0);\n```\n\n#### 结果\n```\nroot\n-root leaf a\n-root leaf b\n-composite a\n--composite a leaf c\n--composite a leaf d\n--composite a leaf e\n--composite aa\n---composite aa leaf f\n---composite aa leaf g\n---composite aa leaf h\n```\n\n\n## 生成图的代码\n### 组合模式\n```plantuml\n@startuml\nTitle \"组合模式\"\n\nclass Client\nabstract class Component {\n  +{abstract} add(Component) : void\n  +{abstract} remove(Component) : void\n  +{abstract} operate() : void\n}\nnote right: 抽象类，实现共有的默认行为\n\nclass Leaf{\n  +operate()\n}\nnote bottom: 叶子节点，不能再添加部件\n\nclass Composite{\n  +add(Component) : void\n  +remove(Component) : void\n  +operate() : void\n}\nnote bottom: 存储子部件\n\nClient -right--> Component\nComposite -up--|> Component\nLeaf -up--|> Component\nComponent <--o Composite\n\n@enduml\n```\n","slug":"模式-组合模式","published":1,"updated":"2018-06-20T10:34:22.847Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjin2pu26001snrfy3gt56g8f","content":"<p>设计模式之组合模式<br><a id=\"more\"></a></p>\n<h2 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h2><blockquote>\n<p>将对象组合成树形结构，以表示“部分-整体”的层次结构。<br>可以使得单个对象和组合对象的使用，具有一致性。</p>\n</blockquote>\n<h2 id=\"关键点\"><a href=\"#关键点\" class=\"headerlink\" title=\"关键点\"></a>关键点</h2><ul>\n<li>树形</li>\n<li>部分 - 整体</li>\n</ul>\n<h2 id=\"实现方式\"><a href=\"#实现方式\" class=\"headerlink\" title=\"实现方式\"></a>实现方式</h2><ul>\n<li>安全方式</li>\n<li>透明方式 ： 组合动作公用，无法区分具体的Leaf、Composite</li>\n</ul>\n<p>以下为 安全方式</p>\n<h2 id=\"类图\"><a href=\"#类图\" class=\"headerlink\" title=\"类图\"></a>类图</h2><p><img src=\"http://www.plantuml.com/plantuml/svg/XP51Ji9058RtSueNLXWp5sYC8N7hqWiCTDGcROUqhsoGJK6Z3GXBOeoHn0KRYDqWMhXDfoqhhs2jTZH6T3Tv_yit_vTNSv4vw5acEJBGv519evuSNIRJYLmDAuGqJEQwS60Qt4R2wYuwh87mEHLMKzXv06q2iDikumumNQ-gT0SqQ0b3_x7ZS4kq-BzheiaTXhoguWwn1N9mZ9DJr209rbauISFeTTMNyxlq-b6UXydjLNhJsqJZRFwGJVhnygKKEUJik2Yhi2MlBX25fO4SBkHib0L-wZ_dp7WvoBfhUJ58dY8Pt6-wqpXQbBIYksiWBv1RfVyotQQdwip6qf_cZSgVFqu1jF2dT1yKbgWwGBqcfMVVitVnNyRg1NkKYYyXGchSrZtBV0C0\" alt=\"\"></p>\n<h2 id=\"实现\"><a href=\"#实现\" class=\"headerlink\" title=\"实现\"></a>实现</h2><h3 id=\"PHP\"><a href=\"#PHP\" class=\"headerlink\" title=\"PHP\"></a>PHP</h3><h4 id=\"定义\"><a href=\"#定义\" class=\"headerlink\" title=\"定义\"></a>定义</h4><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">abstract</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Component</span></span></span><br><span class=\"line\"><span class=\"class\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">abstract</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">add</span><span class=\"params\">(Component $component)</span></span></span><br><span class=\"line\"><span class=\"function\">    : <span class=\"title\">void</span></span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">abstract</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">remove</span><span class=\"params\">(Component $component)</span></span></span><br><span class=\"line\"><span class=\"function\">    : <span class=\"title\">void</span></span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">abstract</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">operate</span><span class=\"params\">(int $depth)</span></span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 一些能公用的代码</span></span><br><span class=\"line\">    <span class=\"keyword\">protected</span> $name = <span class=\"string\">''</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__construct</span><span class=\"params\">($name)</span></span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">$this</span>-&gt;name = $name;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Leaf</span> <span class=\"keyword\">extends</span> <span class=\"title\">Component</span></span></span><br><span class=\"line\"><span class=\"class\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">add</span><span class=\"params\">(Component $component)</span></span></span><br><span class=\"line\"><span class=\"function\">    : <span class=\"title\">void</span></span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> \\<span class=\"keyword\">Exception</span>(<span class=\"string\">'Cannot add to a leaf'</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">remove</span><span class=\"params\">(Component $component)</span></span></span><br><span class=\"line\"><span class=\"function\">    : <span class=\"title\">void</span></span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> \\<span class=\"keyword\">Exception</span>(<span class=\"string\">'Cannot remove from a leaf'</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">operate</span><span class=\"params\">(int $depth)</span></span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">echo</span> str_pad(<span class=\"string\">''</span>, $depth, <span class=\"string\">'-'</span>), <span class=\"keyword\">$this</span>-&gt;name, PHP_EOL;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Composite</span> <span class=\"keyword\">extends</span> <span class=\"title\">Component</span></span></span><br><span class=\"line\"><span class=\"class\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> $components = [];</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">add</span><span class=\"params\">(Component $component)</span></span></span><br><span class=\"line\"><span class=\"function\">    : <span class=\"title\">void</span></span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">$this</span>-&gt;components[ spl_object_id($component) ] = $component;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">remove</span><span class=\"params\">(Component $component)</span></span></span><br><span class=\"line\"><span class=\"function\">    : <span class=\"title\">void</span></span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">unset</span>(<span class=\"keyword\">$this</span>-&gt;components[ spl_object_id($component) ]);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">operate</span><span class=\"params\">(int $depth)</span></span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">echo</span> str_pad(<span class=\"string\">''</span>, $depth, <span class=\"string\">'-'</span>), <span class=\"keyword\">$this</span>-&gt;name, PHP_EOL;</span><br><span class=\"line\">        <span class=\"comment\">/** <span class=\"doctag\">@var</span> Component $component */</span></span><br><span class=\"line\">        <span class=\"keyword\">foreach</span> (<span class=\"keyword\">$this</span>-&gt;components <span class=\"keyword\">as</span> $component) &#123;</span><br><span class=\"line\">            $component-&gt;operate($depth + <span class=\"number\">1</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"使用\"><a href=\"#使用\" class=\"headerlink\" title=\"使用\"></a>使用</h4><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$root = <span class=\"keyword\">new</span> Composite(<span class=\"string\">'root'</span>);</span><br><span class=\"line\">$root-&gt;add(<span class=\"keyword\">new</span> Leaf(<span class=\"string\">'root leaf a'</span>));</span><br><span class=\"line\">$root-&gt;add(<span class=\"keyword\">new</span> Leaf(<span class=\"string\">'root leaf b'</span>));</span><br><span class=\"line\"></span><br><span class=\"line\">$compA = <span class=\"keyword\">new</span> Composite(<span class=\"string\">'composite a'</span>);</span><br><span class=\"line\">$compA-&gt;add(<span class=\"keyword\">new</span> Leaf(<span class=\"string\">'composite a leaf c'</span>));</span><br><span class=\"line\">$compA-&gt;add(<span class=\"keyword\">new</span> Leaf(<span class=\"string\">'composite a leaf d'</span>));</span><br><span class=\"line\">$compA-&gt;add(<span class=\"keyword\">new</span> Leaf(<span class=\"string\">'composite a leaf e'</span>));</span><br><span class=\"line\"></span><br><span class=\"line\">$root-&gt;add($compA);</span><br><span class=\"line\"></span><br><span class=\"line\">$compAA = <span class=\"keyword\">new</span> Composite(<span class=\"string\">'composite aa'</span>);</span><br><span class=\"line\">$compAA-&gt;add(<span class=\"keyword\">new</span> Leaf(<span class=\"string\">'composite aa leaf f'</span>));</span><br><span class=\"line\">$compAA-&gt;add(<span class=\"keyword\">new</span> Leaf(<span class=\"string\">'composite aa leaf g'</span>));</span><br><span class=\"line\">$compAA-&gt;add(<span class=\"keyword\">new</span> Leaf(<span class=\"string\">'composite aa leaf h'</span>));</span><br><span class=\"line\"></span><br><span class=\"line\">$compA-&gt;add($compAA);</span><br><span class=\"line\"></span><br><span class=\"line\">$root-&gt;operate(<span class=\"number\">0</span>);</span><br></pre></td></tr></table></figure>\n<h4 id=\"结果\"><a href=\"#结果\" class=\"headerlink\" title=\"结果\"></a>结果</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">root</span><br><span class=\"line\">-root leaf a</span><br><span class=\"line\">-root leaf b</span><br><span class=\"line\">-composite a</span><br><span class=\"line\">--composite a leaf c</span><br><span class=\"line\">--composite a leaf d</span><br><span class=\"line\">--composite a leaf e</span><br><span class=\"line\">--composite aa</span><br><span class=\"line\">---composite aa leaf f</span><br><span class=\"line\">---composite aa leaf g</span><br><span class=\"line\">---composite aa leaf h</span><br></pre></td></tr></table></figure>\n<h2 id=\"生成图的代码\"><a href=\"#生成图的代码\" class=\"headerlink\" title=\"生成图的代码\"></a>生成图的代码</h2><h3 id=\"组合模式\"><a href=\"#组合模式\" class=\"headerlink\" title=\"组合模式\"></a>组合模式</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">@startuml</span><br><span class=\"line\">Title &quot;组合模式&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">class Client</span><br><span class=\"line\">abstract class Component &#123;</span><br><span class=\"line\">  +&#123;abstract&#125; add(Component) : void</span><br><span class=\"line\">  +&#123;abstract&#125; remove(Component) : void</span><br><span class=\"line\">  +&#123;abstract&#125; operate() : void</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">note right: 抽象类，实现共有的默认行为</span><br><span class=\"line\"></span><br><span class=\"line\">class Leaf&#123;</span><br><span class=\"line\">  +operate()</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">note bottom: 叶子节点，不能再添加部件</span><br><span class=\"line\"></span><br><span class=\"line\">class Composite&#123;</span><br><span class=\"line\">  +add(Component) : void</span><br><span class=\"line\">  +remove(Component) : void</span><br><span class=\"line\">  +operate() : void</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">note bottom: 存储子部件</span><br><span class=\"line\"></span><br><span class=\"line\">Client -right--&gt; Component</span><br><span class=\"line\">Composite -up--|&gt; Component</span><br><span class=\"line\">Leaf -up--|&gt; Component</span><br><span class=\"line\">Component &lt;--o Composite</span><br><span class=\"line\"></span><br><span class=\"line\">@enduml</span><br></pre></td></tr></table></figure>\n","site":{"data":{"head":"\n<script type=\"text/javascript\" id=\"hexo.headll\">\n(function () {\n  window.addEventListener(\"load\", function () {   //添加load事件\n    $(\"body\").click(function (e) {\n        var a = new Array(\"富强\", \"民主\", \"文明\", \"和谐\", \"自由\", \"平等\", \"公正\", \"法治\", \"爱国\", \"敬业\", \"诚信\", \"友善\");\n        var a_idx=Math.floor(Math.random()*a.length);\n        var $i = $(\"<span/>\").text(a[a_idx]);\n        var x = e.pageX,y = e.pageY;\n        $i.css({\n            \"z-index\": 99999,\n            \"top\": y - 20,\n            \"left\": x,\n            \"position\": \"absolute\",\n            \"font-weight\": \"bold\",\n            \"color\": \"#ff6651\"\n        });\n        $(\"body\").append($i);\n        $i.animate({\n            \"top\": y - 180,\n            \"opacity\": 0\n        },\n        1500,\n        function () {\n            $i.remove();\n        });\n    });\n  }, false);\n})();\n</script>\n\n"}},"excerpt":"<p>设计模式之组合模式<br>","more":"</p>\n<h2 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h2><blockquote>\n<p>将对象组合成树形结构，以表示“部分-整体”的层次结构。<br>可以使得单个对象和组合对象的使用，具有一致性。</p>\n</blockquote>\n<h2 id=\"关键点\"><a href=\"#关键点\" class=\"headerlink\" title=\"关键点\"></a>关键点</h2><ul>\n<li>树形</li>\n<li>部分 - 整体</li>\n</ul>\n<h2 id=\"实现方式\"><a href=\"#实现方式\" class=\"headerlink\" title=\"实现方式\"></a>实现方式</h2><ul>\n<li>安全方式</li>\n<li>透明方式 ： 组合动作公用，无法区分具体的Leaf、Composite</li>\n</ul>\n<p>以下为 安全方式</p>\n<h2 id=\"类图\"><a href=\"#类图\" class=\"headerlink\" title=\"类图\"></a>类图</h2><p><img src=\"http://www.plantuml.com/plantuml/svg/XP51Ji9058RtSueNLXWp5sYC8N7hqWiCTDGcROUqhsoGJK6Z3GXBOeoHn0KRYDqWMhXDfoqhhs2jTZH6T3Tv_yit_vTNSv4vw5acEJBGv519evuSNIRJYLmDAuGqJEQwS60Qt4R2wYuwh87mEHLMKzXv06q2iDikumumNQ-gT0SqQ0b3_x7ZS4kq-BzheiaTXhoguWwn1N9mZ9DJr209rbauISFeTTMNyxlq-b6UXydjLNhJsqJZRFwGJVhnygKKEUJik2Yhi2MlBX25fO4SBkHib0L-wZ_dp7WvoBfhUJ58dY8Pt6-wqpXQbBIYksiWBv1RfVyotQQdwip6qf_cZSgVFqu1jF2dT1yKbgWwGBqcfMVVitVnNyRg1NkKYYyXGchSrZtBV0C0\" alt=\"\"></p>\n<h2 id=\"实现\"><a href=\"#实现\" class=\"headerlink\" title=\"实现\"></a>实现</h2><h3 id=\"PHP\"><a href=\"#PHP\" class=\"headerlink\" title=\"PHP\"></a>PHP</h3><h4 id=\"定义\"><a href=\"#定义\" class=\"headerlink\" title=\"定义\"></a>定义</h4><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">abstract</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Component</span></span></span><br><span class=\"line\"><span class=\"class\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">abstract</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">add</span><span class=\"params\">(Component $component)</span></span></span><br><span class=\"line\"><span class=\"function\">    : <span class=\"title\">void</span></span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">abstract</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">remove</span><span class=\"params\">(Component $component)</span></span></span><br><span class=\"line\"><span class=\"function\">    : <span class=\"title\">void</span></span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">abstract</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">operate</span><span class=\"params\">(int $depth)</span></span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 一些能公用的代码</span></span><br><span class=\"line\">    <span class=\"keyword\">protected</span> $name = <span class=\"string\">''</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__construct</span><span class=\"params\">($name)</span></span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">$this</span>-&gt;name = $name;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Leaf</span> <span class=\"keyword\">extends</span> <span class=\"title\">Component</span></span></span><br><span class=\"line\"><span class=\"class\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">add</span><span class=\"params\">(Component $component)</span></span></span><br><span class=\"line\"><span class=\"function\">    : <span class=\"title\">void</span></span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> \\<span class=\"keyword\">Exception</span>(<span class=\"string\">'Cannot add to a leaf'</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">remove</span><span class=\"params\">(Component $component)</span></span></span><br><span class=\"line\"><span class=\"function\">    : <span class=\"title\">void</span></span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> \\<span class=\"keyword\">Exception</span>(<span class=\"string\">'Cannot remove from a leaf'</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">operate</span><span class=\"params\">(int $depth)</span></span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">echo</span> str_pad(<span class=\"string\">''</span>, $depth, <span class=\"string\">'-'</span>), <span class=\"keyword\">$this</span>-&gt;name, PHP_EOL;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Composite</span> <span class=\"keyword\">extends</span> <span class=\"title\">Component</span></span></span><br><span class=\"line\"><span class=\"class\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> $components = [];</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">add</span><span class=\"params\">(Component $component)</span></span></span><br><span class=\"line\"><span class=\"function\">    : <span class=\"title\">void</span></span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">$this</span>-&gt;components[ spl_object_id($component) ] = $component;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">remove</span><span class=\"params\">(Component $component)</span></span></span><br><span class=\"line\"><span class=\"function\">    : <span class=\"title\">void</span></span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">unset</span>(<span class=\"keyword\">$this</span>-&gt;components[ spl_object_id($component) ]);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">operate</span><span class=\"params\">(int $depth)</span></span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">echo</span> str_pad(<span class=\"string\">''</span>, $depth, <span class=\"string\">'-'</span>), <span class=\"keyword\">$this</span>-&gt;name, PHP_EOL;</span><br><span class=\"line\">        <span class=\"comment\">/** <span class=\"doctag\">@var</span> Component $component */</span></span><br><span class=\"line\">        <span class=\"keyword\">foreach</span> (<span class=\"keyword\">$this</span>-&gt;components <span class=\"keyword\">as</span> $component) &#123;</span><br><span class=\"line\">            $component-&gt;operate($depth + <span class=\"number\">1</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"使用\"><a href=\"#使用\" class=\"headerlink\" title=\"使用\"></a>使用</h4><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$root = <span class=\"keyword\">new</span> Composite(<span class=\"string\">'root'</span>);</span><br><span class=\"line\">$root-&gt;add(<span class=\"keyword\">new</span> Leaf(<span class=\"string\">'root leaf a'</span>));</span><br><span class=\"line\">$root-&gt;add(<span class=\"keyword\">new</span> Leaf(<span class=\"string\">'root leaf b'</span>));</span><br><span class=\"line\"></span><br><span class=\"line\">$compA = <span class=\"keyword\">new</span> Composite(<span class=\"string\">'composite a'</span>);</span><br><span class=\"line\">$compA-&gt;add(<span class=\"keyword\">new</span> Leaf(<span class=\"string\">'composite a leaf c'</span>));</span><br><span class=\"line\">$compA-&gt;add(<span class=\"keyword\">new</span> Leaf(<span class=\"string\">'composite a leaf d'</span>));</span><br><span class=\"line\">$compA-&gt;add(<span class=\"keyword\">new</span> Leaf(<span class=\"string\">'composite a leaf e'</span>));</span><br><span class=\"line\"></span><br><span class=\"line\">$root-&gt;add($compA);</span><br><span class=\"line\"></span><br><span class=\"line\">$compAA = <span class=\"keyword\">new</span> Composite(<span class=\"string\">'composite aa'</span>);</span><br><span class=\"line\">$compAA-&gt;add(<span class=\"keyword\">new</span> Leaf(<span class=\"string\">'composite aa leaf f'</span>));</span><br><span class=\"line\">$compAA-&gt;add(<span class=\"keyword\">new</span> Leaf(<span class=\"string\">'composite aa leaf g'</span>));</span><br><span class=\"line\">$compAA-&gt;add(<span class=\"keyword\">new</span> Leaf(<span class=\"string\">'composite aa leaf h'</span>));</span><br><span class=\"line\"></span><br><span class=\"line\">$compA-&gt;add($compAA);</span><br><span class=\"line\"></span><br><span class=\"line\">$root-&gt;operate(<span class=\"number\">0</span>);</span><br></pre></td></tr></table></figure>\n<h4 id=\"结果\"><a href=\"#结果\" class=\"headerlink\" title=\"结果\"></a>结果</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">root</span><br><span class=\"line\">-root leaf a</span><br><span class=\"line\">-root leaf b</span><br><span class=\"line\">-composite a</span><br><span class=\"line\">--composite a leaf c</span><br><span class=\"line\">--composite a leaf d</span><br><span class=\"line\">--composite a leaf e</span><br><span class=\"line\">--composite aa</span><br><span class=\"line\">---composite aa leaf f</span><br><span class=\"line\">---composite aa leaf g</span><br><span class=\"line\">---composite aa leaf h</span><br></pre></td></tr></table></figure>\n<h2 id=\"生成图的代码\"><a href=\"#生成图的代码\" class=\"headerlink\" title=\"生成图的代码\"></a>生成图的代码</h2><h3 id=\"组合模式\"><a href=\"#组合模式\" class=\"headerlink\" title=\"组合模式\"></a>组合模式</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">@startuml</span><br><span class=\"line\">Title &quot;组合模式&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">class Client</span><br><span class=\"line\">abstract class Component &#123;</span><br><span class=\"line\">  +&#123;abstract&#125; add(Component) : void</span><br><span class=\"line\">  +&#123;abstract&#125; remove(Component) : void</span><br><span class=\"line\">  +&#123;abstract&#125; operate() : void</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">note right: 抽象类，实现共有的默认行为</span><br><span class=\"line\"></span><br><span class=\"line\">class Leaf&#123;</span><br><span class=\"line\">  +operate()</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">note bottom: 叶子节点，不能再添加部件</span><br><span class=\"line\"></span><br><span class=\"line\">class Composite&#123;</span><br><span class=\"line\">  +add(Component) : void</span><br><span class=\"line\">  +remove(Component) : void</span><br><span class=\"line\">  +operate() : void</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">note bottom: 存储子部件</span><br><span class=\"line\"></span><br><span class=\"line\">Client -right--&gt; Component</span><br><span class=\"line\">Composite -up--|&gt; Component</span><br><span class=\"line\">Leaf -up--|&gt; Component</span><br><span class=\"line\">Component &lt;--o Composite</span><br><span class=\"line\"></span><br><span class=\"line\">@enduml</span><br></pre></td></tr></table></figure>"},{"title":"模式-适配器模式","date":"2018-06-12T08:35:00.000Z","_content":"\n设计模式之适配器模式\n<!-- MORE -->\n\n## 简介\n将一个类的接口转换成客户希望的另外一个接口。\n\n## 关键点\n- 一般是已存在的类\n- 其方法 与 需求有些不符\n- 通过加工处理可以完成 需求\n\n## 类图\n![](http://www.plantuml.com/plantuml/svg/SoWkIImgAStDuGh9BCb9LL1wsT3qihNtwSmLprOiVBgdNucBApadiRXOmJadCpMlX2iphoIrA2qnELKX9B4eFRL4ePfBGK6xABMmDBMuH4EJgvOhBxyaLI4flwGaFzTAuVdkZkUhrp_hR7Wvf-75iiRdyvU-R9pyV5RBixwbJ_iNmynsJ4ai01gBtQYSrBGIAuMdhTkVx0NfXBiFLNCgM7DnGMfoPbfcSX1sGo2EW9W0DEhvnjrSN11_wUhQGVrZfV1YG_FpAIkue8xIqwk1Ii54W6gXTW8LGmpZSaZDIm468W00)\n\n\n\n\n## 实现\n### PHP\n\n- 终端所需知道的\n```PHP\ninterface Target{\n    public function request();\n}\n```\n\n- 具体适配器\n```PHP\n/**\n * Class 适配器\n * @package App\\Maozhua\\Libs\n */\nclass Adapter implements Target {\n\n    private $adaptee;\n    public function __construct() {\n        $this->adaptee = new Adaptee();\n    }\n\n    public function request()\n    {\n        $this->adaptee->specificRequest();\n    }\n}\n```\n\n- 适配的对象\n```PHP\n/**\n * Class 适配的对象\n * @package App\\Maozhua\\Libs\n */\nclass Adaptee {\n    public function specificRequest() {\n\n    }\n}\n```\n\n- 使用\n```PHP\n$target = new Adapter();\n$target->request();\n```\n\n## 生成图的代码\n### 适配器模式\n```plantuml\n@startuml\nTitle \"适配器模式\"\n\nclass Client\ninterface Target {\n  +request()\n}\nnote bottom: 终端所需要知道的接口\n\nclass Adapter{\n  +request()\n}\nnote left: 具体的适配器\n\nclass Adaptee{\n  +specificRequest()\n}\nnote left: 需要适配的类\n\nClient --> Target : 调用\nAdapter ..|> Target\nAdapter --> Adaptee : 适配\n\n@enduml\n```\n","source":"_posts/模式-适配器模式.md","raw":"---\ntitle: 模式-适配器模式\ndate: 2018-06-12T16:35:00.000Z\ntags:\n  - 模式\n  - 笔记\ncategories:\n  - 模式\n---\n\n设计模式之适配器模式\n<!-- MORE -->\n\n## 简介\n将一个类的接口转换成客户希望的另外一个接口。\n\n## 关键点\n- 一般是已存在的类\n- 其方法 与 需求有些不符\n- 通过加工处理可以完成 需求\n\n## 类图\n![](http://www.plantuml.com/plantuml/svg/SoWkIImgAStDuGh9BCb9LL1wsT3qihNtwSmLprOiVBgdNucBApadiRXOmJadCpMlX2iphoIrA2qnELKX9B4eFRL4ePfBGK6xABMmDBMuH4EJgvOhBxyaLI4flwGaFzTAuVdkZkUhrp_hR7Wvf-75iiRdyvU-R9pyV5RBixwbJ_iNmynsJ4ai01gBtQYSrBGIAuMdhTkVx0NfXBiFLNCgM7DnGMfoPbfcSX1sGo2EW9W0DEhvnjrSN11_wUhQGVrZfV1YG_FpAIkue8xIqwk1Ii54W6gXTW8LGmpZSaZDIm468W00)\n\n\n\n\n## 实现\n### PHP\n\n- 终端所需知道的\n```PHP\ninterface Target{\n    public function request();\n}\n```\n\n- 具体适配器\n```PHP\n/**\n * Class 适配器\n * @package App\\Maozhua\\Libs\n */\nclass Adapter implements Target {\n\n    private $adaptee;\n    public function __construct() {\n        $this->adaptee = new Adaptee();\n    }\n\n    public function request()\n    {\n        $this->adaptee->specificRequest();\n    }\n}\n```\n\n- 适配的对象\n```PHP\n/**\n * Class 适配的对象\n * @package App\\Maozhua\\Libs\n */\nclass Adaptee {\n    public function specificRequest() {\n\n    }\n}\n```\n\n- 使用\n```PHP\n$target = new Adapter();\n$target->request();\n```\n\n## 生成图的代码\n### 适配器模式\n```plantuml\n@startuml\nTitle \"适配器模式\"\n\nclass Client\ninterface Target {\n  +request()\n}\nnote bottom: 终端所需要知道的接口\n\nclass Adapter{\n  +request()\n}\nnote left: 具体的适配器\n\nclass Adaptee{\n  +specificRequest()\n}\nnote left: 需要适配的类\n\nClient --> Target : 调用\nAdapter ..|> Target\nAdapter --> Adaptee : 适配\n\n@enduml\n```\n","slug":"模式-适配器模式","published":1,"updated":"2018-06-20T10:34:49.500Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjin2pu27001vnrfylgkop86j","content":"<p>设计模式之适配器模式<br><a id=\"more\"></a></p>\n<h2 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h2><p>将一个类的接口转换成客户希望的另外一个接口。</p>\n<h2 id=\"关键点\"><a href=\"#关键点\" class=\"headerlink\" title=\"关键点\"></a>关键点</h2><ul>\n<li>一般是已存在的类</li>\n<li>其方法 与 需求有些不符</li>\n<li>通过加工处理可以完成 需求</li>\n</ul>\n<h2 id=\"类图\"><a href=\"#类图\" class=\"headerlink\" title=\"类图\"></a>类图</h2><p><img src=\"http://www.plantuml.com/plantuml/svg/SoWkIImgAStDuGh9BCb9LL1wsT3qihNtwSmLprOiVBgdNucBApadiRXOmJadCpMlX2iphoIrA2qnELKX9B4eFRL4ePfBGK6xABMmDBMuH4EJgvOhBxyaLI4flwGaFzTAuVdkZkUhrp_hR7Wvf-75iiRdyvU-R9pyV5RBixwbJ_iNmynsJ4ai01gBtQYSrBGIAuMdhTkVx0NfXBiFLNCgM7DnGMfoPbfcSX1sGo2EW9W0DEhvnjrSN11_wUhQGVrZfV1YG_FpAIkue8xIqwk1Ii54W6gXTW8LGmpZSaZDIm468W00\" alt=\"\"></p>\n<h2 id=\"实现\"><a href=\"#实现\" class=\"headerlink\" title=\"实现\"></a>实现</h2><h3 id=\"PHP\"><a href=\"#PHP\" class=\"headerlink\" title=\"PHP\"></a>PHP</h3><ul>\n<li><p>终端所需知道的</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">interface</span> <span class=\"title\">Target</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">request</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>具体适配器</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * Class 适配器</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@package</span> App\\Maozhua\\Libs</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Adapter</span> <span class=\"keyword\">implements</span> <span class=\"title\">Target</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> $adaptee;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__construct</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">$this</span>-&gt;adaptee = <span class=\"keyword\">new</span> Adaptee();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">request</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">$this</span>-&gt;adaptee-&gt;specificRequest();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>适配的对象</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * Class 适配的对象</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@package</span> App\\Maozhua\\Libs</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Adaptee</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">specificRequest</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>使用</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$target = <span class=\"keyword\">new</span> Adapter();</span><br><span class=\"line\">$target-&gt;request();</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h2 id=\"生成图的代码\"><a href=\"#生成图的代码\" class=\"headerlink\" title=\"生成图的代码\"></a>生成图的代码</h2><h3 id=\"适配器模式\"><a href=\"#适配器模式\" class=\"headerlink\" title=\"适配器模式\"></a>适配器模式</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">@startuml</span><br><span class=\"line\">Title &quot;适配器模式&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">class Client</span><br><span class=\"line\">interface Target &#123;</span><br><span class=\"line\">  +request()</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">note bottom: 终端所需要知道的接口</span><br><span class=\"line\"></span><br><span class=\"line\">class Adapter&#123;</span><br><span class=\"line\">  +request()</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">note left: 具体的适配器</span><br><span class=\"line\"></span><br><span class=\"line\">class Adaptee&#123;</span><br><span class=\"line\">  +specificRequest()</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">note left: 需要适配的类</span><br><span class=\"line\"></span><br><span class=\"line\">Client --&gt; Target : 调用</span><br><span class=\"line\">Adapter ..|&gt; Target</span><br><span class=\"line\">Adapter --&gt; Adaptee : 适配</span><br><span class=\"line\"></span><br><span class=\"line\">@enduml</span><br></pre></td></tr></table></figure>\n","site":{"data":{"head":"\n<script type=\"text/javascript\" id=\"hexo.headll\">\n(function () {\n  window.addEventListener(\"load\", function () {   //添加load事件\n    $(\"body\").click(function (e) {\n        var a = new Array(\"富强\", \"民主\", \"文明\", \"和谐\", \"自由\", \"平等\", \"公正\", \"法治\", \"爱国\", \"敬业\", \"诚信\", \"友善\");\n        var a_idx=Math.floor(Math.random()*a.length);\n        var $i = $(\"<span/>\").text(a[a_idx]);\n        var x = e.pageX,y = e.pageY;\n        $i.css({\n            \"z-index\": 99999,\n            \"top\": y - 20,\n            \"left\": x,\n            \"position\": \"absolute\",\n            \"font-weight\": \"bold\",\n            \"color\": \"#ff6651\"\n        });\n        $(\"body\").append($i);\n        $i.animate({\n            \"top\": y - 180,\n            \"opacity\": 0\n        },\n        1500,\n        function () {\n            $i.remove();\n        });\n    });\n  }, false);\n})();\n</script>\n\n"}},"excerpt":"<p>设计模式之适配器模式<br>","more":"</p>\n<h2 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h2><p>将一个类的接口转换成客户希望的另外一个接口。</p>\n<h2 id=\"关键点\"><a href=\"#关键点\" class=\"headerlink\" title=\"关键点\"></a>关键点</h2><ul>\n<li>一般是已存在的类</li>\n<li>其方法 与 需求有些不符</li>\n<li>通过加工处理可以完成 需求</li>\n</ul>\n<h2 id=\"类图\"><a href=\"#类图\" class=\"headerlink\" title=\"类图\"></a>类图</h2><p><img src=\"http://www.plantuml.com/plantuml/svg/SoWkIImgAStDuGh9BCb9LL1wsT3qihNtwSmLprOiVBgdNucBApadiRXOmJadCpMlX2iphoIrA2qnELKX9B4eFRL4ePfBGK6xABMmDBMuH4EJgvOhBxyaLI4flwGaFzTAuVdkZkUhrp_hR7Wvf-75iiRdyvU-R9pyV5RBixwbJ_iNmynsJ4ai01gBtQYSrBGIAuMdhTkVx0NfXBiFLNCgM7DnGMfoPbfcSX1sGo2EW9W0DEhvnjrSN11_wUhQGVrZfV1YG_FpAIkue8xIqwk1Ii54W6gXTW8LGmpZSaZDIm468W00\" alt=\"\"></p>\n<h2 id=\"实现\"><a href=\"#实现\" class=\"headerlink\" title=\"实现\"></a>实现</h2><h3 id=\"PHP\"><a href=\"#PHP\" class=\"headerlink\" title=\"PHP\"></a>PHP</h3><ul>\n<li><p>终端所需知道的</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">interface</span> <span class=\"title\">Target</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">request</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>具体适配器</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * Class 适配器</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@package</span> App\\Maozhua\\Libs</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Adapter</span> <span class=\"keyword\">implements</span> <span class=\"title\">Target</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> $adaptee;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__construct</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">$this</span>-&gt;adaptee = <span class=\"keyword\">new</span> Adaptee();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">request</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">$this</span>-&gt;adaptee-&gt;specificRequest();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>适配的对象</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * Class 适配的对象</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@package</span> App\\Maozhua\\Libs</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Adaptee</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">specificRequest</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>使用</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$target = <span class=\"keyword\">new</span> Adapter();</span><br><span class=\"line\">$target-&gt;request();</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h2 id=\"生成图的代码\"><a href=\"#生成图的代码\" class=\"headerlink\" title=\"生成图的代码\"></a>生成图的代码</h2><h3 id=\"适配器模式\"><a href=\"#适配器模式\" class=\"headerlink\" title=\"适配器模式\"></a>适配器模式</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">@startuml</span><br><span class=\"line\">Title &quot;适配器模式&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">class Client</span><br><span class=\"line\">interface Target &#123;</span><br><span class=\"line\">  +request()</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">note bottom: 终端所需要知道的接口</span><br><span class=\"line\"></span><br><span class=\"line\">class Adapter&#123;</span><br><span class=\"line\">  +request()</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">note left: 具体的适配器</span><br><span class=\"line\"></span><br><span class=\"line\">class Adaptee&#123;</span><br><span class=\"line\">  +specificRequest()</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">note left: 需要适配的类</span><br><span class=\"line\"></span><br><span class=\"line\">Client --&gt; Target : 调用</span><br><span class=\"line\">Adapter ..|&gt; Target</span><br><span class=\"line\">Adapter --&gt; Adaptee : 适配</span><br><span class=\"line\"></span><br><span class=\"line\">@enduml</span><br></pre></td></tr></table></figure>"}],"PostAsset":[],"PostCategory":[{"post_id":"cjin2pu1d0006nrfykectwhb4","category_id":"cjin2pu1h0009nrfy5iqlgpnu","_id":"cjin2pu1n000knrfyata5ui6e"},{"post_id":"cjin2pu1f0007nrfyyblyvoid","category_id":"cjin2pu1k000enrfy7diroqoi","_id":"cjin2pu1q000pnrfy8w46r0kn"},{"post_id":"cjin2pu150000nrfya0yjbi8q","category_id":"cjin2pu1b0004nrfyte13z9o9","_id":"cjin2pu1u000xnrfyhr7km5us"},{"post_id":"cjin2pu150000nrfya0yjbi8q","category_id":"cjin2pu1n000lnrfyfbq9cx2x","_id":"cjin2pu1v0011nrfywdpa9uxo"},{"post_id":"cjin2pu1g0008nrfy853vfjsa","category_id":"cjin2pu1b0004nrfyte13z9o9","_id":"cjin2pu1y0014nrfyyjq1i12g"},{"post_id":"cjin2pu1g0008nrfy853vfjsa","category_id":"cjin2pu1n000lnrfyfbq9cx2x","_id":"cjin2pu1z0017nrfyryhd958b"},{"post_id":"cjin2pu1h000bnrfy6fd0y7nh","category_id":"cjin2pu1b0004nrfyte13z9o9","_id":"cjin2pu200019nrfyhib8mu0m"},{"post_id":"cjin2pu1h000bnrfy6fd0y7nh","category_id":"cjin2pu1n000lnrfyfbq9cx2x","_id":"cjin2pu21001dnrfyqphu3vbu"},{"post_id":"cjin2pu1z0018nrfy6xn25d1c","category_id":"cjin2pu1x0013nrfy3flnmtjs","_id":"cjin2pu23001inrfyyszupzy0"},{"post_id":"cjin2pu1j000dnrfyp8r7jkik","category_id":"cjin2pu1x0013nrfy3flnmtjs","_id":"cjin2pu24001mnrfy4c4ysvcp"},{"post_id":"cjin2pu21001fnrfynciwbj5l","category_id":"cjin2pu1x0013nrfy3flnmtjs","_id":"cjin2pu25001pnrfyfv3crg9a"},{"post_id":"cjin2pu1l000gnrfy03cesyyr","category_id":"cjin2pu21001bnrfyfjf9ozbc","_id":"cjin2pu27001tnrfy3fch22hh"},{"post_id":"cjin2pu1o000nnrfylr4gd4e7","category_id":"cjin2pu23001jnrfyb9k7ju0h","_id":"cjin2pu28001wnrfy2eh0ch4u"},{"post_id":"cjin2pu1p000onrfydt0jcdnk","category_id":"cjin2pu26001qnrfyklu2qkoz","_id":"cjin2pu290021nrfyb8ef12xo"},{"post_id":"cjin2pu1r000snrfyswh44rkb","category_id":"cjin2pu1x0013nrfy3flnmtjs","_id":"cjin2pu290023nrfykbd74te5"},{"post_id":"cjin2pu1t000unrfyromtyen3","category_id":"cjin2pu290020nrfyofaplvyn","_id":"cjin2pu2a0027nrfy20na9qt2"},{"post_id":"cjin2pu1v0012nrfy3n3dxy0x","category_id":"cjin2pu1x0013nrfy3flnmtjs","_id":"cjin2pu2b002dnrfyg1ki3sh4"},{"post_id":"cjin2pu1y0015nrfy6l9h6qdj","category_id":"cjin2pu1x0013nrfy3flnmtjs","_id":"cjin2pu2c002hnrfy291wqihk"},{"post_id":"cjin2pu20001anrfy8ypjuzsb","category_id":"cjin2pu2b002cnrfyf360wv7a","_id":"cjin2pu2d002mnrfyjd74nd3b"},{"post_id":"cjin2pu22001hnrfykk6dwz7p","category_id":"cjin2pu2c002inrfyuwj2y519","_id":"cjin2pu2e002snrfy9briigwp"},{"post_id":"cjin2pu24001lnrfy1h6a5qmn","category_id":"cjin2pu2c002inrfyuwj2y519","_id":"cjin2pu2e002wnrfyo9kxvhts"},{"post_id":"cjin2pu25001onrfyhj7u2lg6","category_id":"cjin2pu2c002inrfyuwj2y519","_id":"cjin2pu2f0031nrfyu10sb9vb"},{"post_id":"cjin2pu26001snrfy3gt56g8f","category_id":"cjin2pu2c002inrfyuwj2y519","_id":"cjin2pu2g0034nrfy3fipzd8x"},{"post_id":"cjin2pu27001vnrfylgkop86j","category_id":"cjin2pu2c002inrfyuwj2y519","_id":"cjin2pu2g0035nrfy8xraik8y"},{"post_id":"cjin2pu1u000znrfy462qwpyy","category_id":"cjin2pu23001jnrfyb9k7ju0h","_id":"cjin2pu2h003anrfyj8rac4y8"},{"post_id":"cjin2pu1u000znrfy462qwpyy","category_id":"cjin2pu2g0033nrfytwasxta9","_id":"cjin2pu2h003cnrfy6vacucil"}],"PostTag":[{"post_id":"cjin2pu1g0008nrfy853vfjsa","tag_id":"cjin2pu1d0005nrfy2d5e3wcq","_id":"cjin2pu1i000cnrfyj887a126"},{"post_id":"cjin2pu150000nrfya0yjbi8q","tag_id":"cjin2pu1d0005nrfy2d5e3wcq","_id":"cjin2pu1m000hnrfynpfxmydm"},{"post_id":"cjin2pu150000nrfya0yjbi8q","tag_id":"cjin2pu1h000anrfyqusa7k5o","_id":"cjin2pu1n000jnrfypn8iah1f"},{"post_id":"cjin2pu190002nrfylnedr2zf","tag_id":"cjin2pu1k000fnrfy7r2y7x47","_id":"cjin2pu1t000tnrfywnekfctg"},{"post_id":"cjin2pu190002nrfylnedr2zf","tag_id":"cjin2pu1o000mnrfy7c09cc9s","_id":"cjin2pu1u000vnrfy4lpm5dkp"},{"post_id":"cjin2pu1d0006nrfykectwhb4","tag_id":"cjin2pu1k000fnrfy7r2y7x47","_id":"cjin2pu1v0010nrfyytio9w8n"},{"post_id":"cjin2pu1f0007nrfyyblyvoid","tag_id":"cjin2pu1u000ynrfyogvngqvh","_id":"cjin2pu21001enrfy55rzz39p"},{"post_id":"cjin2pu1f0007nrfyyblyvoid","tag_id":"cjin2pu1o000mnrfy7c09cc9s","_id":"cjin2pu22001gnrfyo5ef1sb7"},{"post_id":"cjin2pu1h000bnrfy6fd0y7nh","tag_id":"cjin2pu21001cnrfy6vmft0is","_id":"cjin2pu24001nnrfy72n6zbyy"},{"post_id":"cjin2pu1j000dnrfyp8r7jkik","tag_id":"cjin2pu23001knrfyph8tc9cw","_id":"cjin2pu27001unrfy0wjewi4c"},{"post_id":"cjin2pu1l000gnrfy03cesyyr","tag_id":"cjin2pu26001rnrfyhamcn19a","_id":"cjin2pu29001znrfy6fbh2y9i"},{"post_id":"cjin2pu1m000inrfycaym2xbo","tag_id":"cjin2pu28001ynrfytfield4v","_id":"cjin2pu2b002bnrfy6ztji7zu"},{"post_id":"cjin2pu1m000inrfycaym2xbo","tag_id":"cjin2pu290022nrfyhwz3vcqk","_id":"cjin2pu2c002enrfym8tdns77"},{"post_id":"cjin2pu1m000inrfycaym2xbo","tag_id":"cjin2pu2a0025nrfy3xndd5ys","_id":"cjin2pu2c002gnrfylg6ak2uf"},{"post_id":"cjin2pu1m000inrfycaym2xbo","tag_id":"cjin2pu2a0028nrfys9ufehwn","_id":"cjin2pu2c002jnrfyd58ps9r5"},{"post_id":"cjin2pu1o000nnrfylr4gd4e7","tag_id":"cjin2pu2b002anrfyjriibcnz","_id":"cjin2pu2d002lnrfyb37r9osh"},{"post_id":"cjin2pu1o000nnrfylr4gd4e7","tag_id":"cjin2pu2c002fnrfyt18ybsgu","_id":"cjin2pu2d002onrfy8a1ivltm"},{"post_id":"cjin2pu1p000onrfydt0jcdnk","tag_id":"cjin2pu2c002knrfywhavdzqr","_id":"cjin2pu2d002qnrfyqyfakm22"},{"post_id":"cjin2pu1p000onrfydt0jcdnk","tag_id":"cjin2pu1o000mnrfy7c09cc9s","_id":"cjin2pu2e002tnrfybupyp7p7"},{"post_id":"cjin2pu1r000snrfyswh44rkb","tag_id":"cjin2pu2d002pnrfys1jd2ghz","_id":"cjin2pu2e002xnrfynea1r21t"},{"post_id":"cjin2pu1r000snrfyswh44rkb","tag_id":"cjin2pu1o000mnrfy7c09cc9s","_id":"cjin2pu2f002ynrfy4du6luqt"},{"post_id":"cjin2pu1t000unrfyromtyen3","tag_id":"cjin2pu2e002unrfysakqqsmr","_id":"cjin2pu2h0037nrfybm0kfpyv"},{"post_id":"cjin2pu1t000unrfyromtyen3","tag_id":"cjin2pu2f002znrfyb35k18x9","_id":"cjin2pu2h0038nrfyyavaztg1"},{"post_id":"cjin2pu1t000unrfyromtyen3","tag_id":"cjin2pu2g0032nrfyrrjyb1ye","_id":"cjin2pu2h003bnrfyo8eypcod"},{"post_id":"cjin2pu1u000znrfy462qwpyy","tag_id":"cjin2pu2b002anrfyjriibcnz","_id":"cjin2pu2h003dnrfyn0qdzup9"},{"post_id":"cjin2pu1v0012nrfy3n3dxy0x","tag_id":"cjin2pu23001knrfyph8tc9cw","_id":"cjin2pu2i003fnrfy39l3avuw"},{"post_id":"cjin2pu1v0012nrfy3n3dxy0x","tag_id":"cjin2pu1o000mnrfy7c09cc9s","_id":"cjin2pu2i003gnrfyrazmjx3q"},{"post_id":"cjin2pu1y0015nrfy6l9h6qdj","tag_id":"cjin2pu2i003enrfytfr9ohr4","_id":"cjin2pu2i003inrfyrjarzv87"},{"post_id":"cjin2pu1y0015nrfy6l9h6qdj","tag_id":"cjin2pu1o000mnrfy7c09cc9s","_id":"cjin2pu2i003jnrfym3pwamaj"},{"post_id":"cjin2pu1z0018nrfy6xn25d1c","tag_id":"cjin2pu2i003hnrfy9mdx52dr","_id":"cjin2pu2j003lnrfyzang0ofm"},{"post_id":"cjin2pu1z0018nrfy6xn25d1c","tag_id":"cjin2pu1o000mnrfy7c09cc9s","_id":"cjin2pu2j003mnrfy8efs5pat"},{"post_id":"cjin2pu20001anrfy8ypjuzsb","tag_id":"cjin2pu2i003knrfygsb1izr5","_id":"cjin2pu2j003onrfyq9i1emtu"},{"post_id":"cjin2pu21001fnrfynciwbj5l","tag_id":"cjin2pu23001knrfyph8tc9cw","_id":"cjin2pu2k003rnrfyxzdmlx61"},{"post_id":"cjin2pu21001fnrfynciwbj5l","tag_id":"cjin2pu2k003pnrfytbmtb3lh","_id":"cjin2pu2k003snrfyqui4sjej"},{"post_id":"cjin2pu22001hnrfykk6dwz7p","tag_id":"cjin2pu2k003qnrfyvtmv6eeq","_id":"cjin2pu2l003unrfy0eynr5iw"},{"post_id":"cjin2pu22001hnrfykk6dwz7p","tag_id":"cjin2pu1o000mnrfy7c09cc9s","_id":"cjin2pu2l003vnrfyipgmund3"},{"post_id":"cjin2pu24001lnrfy1h6a5qmn","tag_id":"cjin2pu2k003qnrfyvtmv6eeq","_id":"cjin2pu2l003xnrfy3zskq85u"},{"post_id":"cjin2pu24001lnrfy1h6a5qmn","tag_id":"cjin2pu1o000mnrfy7c09cc9s","_id":"cjin2pu2l003ynrfymq9jur8l"},{"post_id":"cjin2pu25001onrfyhj7u2lg6","tag_id":"cjin2pu2k003qnrfyvtmv6eeq","_id":"cjin2pu2m0040nrfysq3xp2jw"},{"post_id":"cjin2pu25001onrfyhj7u2lg6","tag_id":"cjin2pu1o000mnrfy7c09cc9s","_id":"cjin2pu2m0041nrfyfvg73il7"},{"post_id":"cjin2pu26001snrfy3gt56g8f","tag_id":"cjin2pu2k003qnrfyvtmv6eeq","_id":"cjin2pu2m0043nrfyce87y9jr"},{"post_id":"cjin2pu26001snrfy3gt56g8f","tag_id":"cjin2pu1o000mnrfy7c09cc9s","_id":"cjin2pu2m0044nrfyfpe4j76p"},{"post_id":"cjin2pu27001vnrfylgkop86j","tag_id":"cjin2pu2k003qnrfyvtmv6eeq","_id":"cjin2pu2n0045nrfyu4jz63r0"},{"post_id":"cjin2pu27001vnrfylgkop86j","tag_id":"cjin2pu1o000mnrfy7c09cc9s","_id":"cjin2pu2n0046nrfyofn06zvh"}],"Tag":[{"name":"Hadoop","_id":"cjin2pu1d0005nrfy2d5e3wcq"},{"name":"Flume","_id":"cjin2pu1h000anrfyqusa7k5o"},{"name":"Git","_id":"cjin2pu1k000fnrfy7r2y7x47"},{"name":"笔记","_id":"cjin2pu1o000mnrfy7c09cc9s"},{"name":"Go","_id":"cjin2pu1u000ynrfyogvngqvh"},{"name":"Hive","_id":"cjin2pu21001cnrfy6vmft0is"},{"name":"Linux","_id":"cjin2pu23001knrfyph8tc9cw"},{"name":"Mac","_id":"cjin2pu26001rnrfyhamcn19a"},{"name":"mysql","_id":"cjin2pu28001ynrfytfield4v"},{"name":"sql","_id":"cjin2pu290022nrfyhwz3vcqk"},{"name":"nosql","_id":"cjin2pu2a0025nrfy3xndd5ys"},{"name":"分布式数据库","_id":"cjin2pu2a0028nrfys9ufehwn"},{"name":"PHP","_id":"cjin2pu2b002anrfyjriibcnz"},{"name":"工具","_id":"cjin2pu2c002fnrfyt18ybsgu"},{"name":"Vue","_id":"cjin2pu2c002knrfywhavdzqr"},{"name":"docker","_id":"cjin2pu2d002pnrfys1jd2ghz"},{"name":"kubernetes","_id":"cjin2pu2e002unrfysakqqsmr"},{"name":"k8s","_id":"cjin2pu2f002znrfyb35k18x9"},{"name":"kubeadmin","_id":"cjin2pu2g0032nrfyrrjyb1ye"},{"name":"supervisor","_id":"cjin2pu2i003enrfytfr9ohr4"},{"name":"vbox","_id":"cjin2pu2i003hnrfy9mdx52dr"},{"name":"MySQL","_id":"cjin2pu2i003knrfygsb1izr5"},{"name":"CentOS","_id":"cjin2pu2k003pnrfytbmtb3lh"},{"name":"模式","_id":"cjin2pu2k003qnrfyvtmv6eeq"}]}}